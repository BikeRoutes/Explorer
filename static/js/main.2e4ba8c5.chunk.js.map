{"version":3,"sources":["model/index.ts","queries/index.ts","components/View/index.ts","components/View/View.ts","components/Popup/Popup.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","components/SideBar/SideBar.tsx","components/Explorer/Explorer.tsx","components/Details/Details.tsx","components/Navigation/Navigation.tsx","components/App/index.ts","components/App/App.tsx","serviceWorker.ts","setup/addDeviceClassName.ts","index.tsx"],"names":["viewToLocation","view","pathname","search","routeId","getOrElse","toGeoJson","require","getElevationGain","coordinates","filter","c","reduce","acc","index","prevAltitude","undefined","altitude","currentView","Query","params","dependencies","location","fetch","Promise","resolve","fromNullable","locationToView","routes","cacheStrategy","available","then","res","json","JSON","parse","body","features","map","feature","minElevation","geometry","Number","MAX_SAFE_INTEGER","maxElevation","MIN_SAFE_INTEGER","id","properties","url","color","stringToColor","name","length","Math","round","geoJsonLength","elevationGain","route","isSome","value","parser","DOMParser","window","gpxFile","gpx","geoJSONFeature","parseFromString","f","type","concat","find","r","none","routeReadme","exec","readmeUrl","text","some","View","props","className","column","vAlignContent","height","width","viewBox","onClick","style","cursor","marginTop","fillRule","transform","fill","opacity","cx","cy","rx","ry","d","md","mobileDetect","popupSettings","closeButton","closeOnClick","offset","anchor","getRouteDistanceInPixels","lngLat","point","project","mapboxgl","lng","lat","routePoint","distance","sqrt","pow","abs","x","y","Infinity","App","popupSelectedRoute","popupHoveredRoute","positionWatch","centerUserLocation","document","querySelector","el","click","onMouseMove","throttle","e","closestRoute","onRouteHover","hoveredRoute","onFullscreenChange","fullscreenElement","scrollZoom","enable","disable","container","center","parseFloat","localStorage","getItem","zoom","on","addLayers","addMarkers","startPosition","flyToRoute","animate","padding","isDesktop","this","innerRef","addControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","fitBoundsOptions","maxZoom","showZoom","showCompass","selectedRoute","forEach","layer","source","data","layout","paint","getRouteColor","onRouteSelect","addLayer","element","createElement","ReactDOM","Marker","setLngLat","addTo","setPaintProperty","options","bounds","coord","extend","fitBounds","popup","latLng","setHTML","ReactDOMServer","Popup","showPopup","remove","fold","identity","initializeMap","addEventListener","navigator","geolocation","watchPosition","position","setItem","String","coords","latitude","longitude","prevProps","updateLayers","updateSelectedRoutePopup","updateHoveredRoutePopup","isNone","navigating","setTimeout","resize","clearWatch","removeEventListener","grow","isNavigating","React","Route","isSelected","shrink","size","label","onDetailsClick","commands","declareCommands","doUpdateLocation","accept","onChange","file","target","files","reader","FileReader","event","result","readAsText","key","onRouteClick","stopPropagation","queries","declareQueries","state","setState","sortedRoutes","sortBy","getCenter","Map","forceUpdate","linkify","defaults","global","animation","togpx","Remarkable","RemarkableModule","Markdown","images","Array","from","querySelectorAll","h1","hAlignContent","innerText","flat","onEnterNavigation","blob","Blob","saveAs","saveGPX","dangerouslySetInnerHTML","__html","render","showThumbs","showStatus","showIndicators","infiniteLoop","autoPlay","interval","image","src","alt","slice","use","scale","distances","_","i","ticks","uniq","number","roundedInteger","remainder","discriminatingFactor","flooredNumber","elevations","datasets","pointRadius","borderWidth","yAxisID","xAxisID","responsive","maintainAspectRatio","scales","xAxes","labels","toFixed","display","callback","yAxes","precision","maxRotation","stepSize","suggestedMin","suggestedMax","tooltips","mode","intersect","callbacks","title","tooltipItems","footer","legend","noSleep","NoSleep","Boolean","hostname","match","deviceClassName","isTablet","isPhone","documentElement","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"oVA2BO,SAASA,EAAeC,GAC7B,OAAQA,EAAKA,MACX,IAAK,UACH,MAAO,CACLC,SAAU,YACVC,OAAQ,CAAEF,KAAM,UAAWG,QAASH,EAAKG,QAAQC,UAAU,MAE/D,IAAK,aACH,MAAO,CACLH,SAAU,YACVC,OAAQ,CAAEF,KAAM,aAAcG,QAASH,EAAKG,QAAQC,UAAU,MAElE,IAAK,WACH,MAAO,CAAEH,SAAU,YAAaC,OAAQ,K,qBC5BxCG,EAAYC,EAAQ,KAE1B,SAASC,EAAiBC,GACxB,OAAOA,EACJC,QAAO,SAAAC,GAAC,OAAIA,EAAE,MACdC,QAAO,SAACC,EAAKF,EAAGG,GACf,IAAMC,EAAeD,EAAQ,EAAIL,EAAYK,EAAQ,GAAG,QAAKE,EACvDC,EAAWN,EAAE,GAEnB,OAAII,GAAgBE,EAAWF,EACtBF,EAAMI,EAAWF,EAGnBF,IACN,GAKA,IAAMK,EAAcC,gBAAM,CAC/BC,OAAQ,GACRC,aAAc,CAAEC,SAAUA,YAC1BC,MAAO,gBAAGD,EAAH,EAAGA,SAAH,OAAkBE,QAAQC,QDxB5B,SAAwBH,GAC7B,OAAQA,EAASnB,OAAOF,MACtB,IAAK,UACH,MAAO,CACLA,KAAM,UACNG,QAASsB,uBAAaJ,EAASnB,OAAOC,UAE1C,IAAK,aACH,MAAO,CACLH,KAAM,aACNG,QAASsB,uBAAaJ,EAASnB,OAAOC,UAE1C,QACE,MAAO,CAAEH,KAAM,aCWsB0B,CAAeL,OAG7CM,EAAST,gBAAM,CAC1BU,cAAeC,YACfV,OAAQ,GACRG,MAAM,SAAD,mGAAC,EAAC,kBACLA,MAAM,GAAD,OAIG,gEAGLQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACC,GAAD,OAA2BE,KAAKC,MAAMH,EAAII,SAC/CL,MAAK,SAAAM,GAAQ,OACZA,EAASC,KAAI,SAAAC,GACX,IAAMC,EAAeD,EAAQE,SAAShC,YAAYG,QAChD,SAACC,EAAaF,GAAd,OAAqBA,EAAE,IAAMA,EAAE,GAAKE,EAAMF,EAAE,GAAKE,IACjD6B,OAAOC,kBAGHC,EAAeL,EAAQE,SAAShC,YAAYG,QAChD,SAACC,EAAaF,GAAd,OAAqBA,EAAE,IAAMA,EAAE,GAAKE,EAAMF,EAAE,GAAKE,IACjD6B,OAAOG,kBAkBT,OAfwB,aACtBC,GAAIP,EAAQQ,WAAWC,KACpBT,EAFmB,CAGtBQ,WAAW,eACNR,EAAQQ,WADH,CAERE,MAAOC,EAAcX,EAAQQ,WAAWI,MACxCC,OAAQC,KAAKC,MAAMC,EAAchB,EAAQE,UAAY,KAAO,GAC5De,cAAeH,KAAKC,MAClB9C,EAAiB+B,EAAQE,SAAShC,cAEpC+B,eACAI,8BASDa,EAAQtC,gBAAM,CACzBC,OAAQ,GACRC,aAAc,CAAEH,cAAaU,UAC7BL,MAAO,YAAsD,IAAnDL,EAAkD,EAAlDA,YAAaU,EAAqC,EAArCA,OACrB,IACwB,YAArBV,EAAYjB,MAA2C,eAArBiB,EAAYjB,OAC/CiB,EAAYd,QAAQsD,SACpB,CACA,IAAMtD,EAAUc,EAAYd,QAAQuD,MAEpC,GAAgB,QAAZvD,EAAmB,CACrB,IAAMwD,EAAS,IAAIC,UAEnB,OAAOrC,QAAQC,QACbC,uBAAcoC,OAAeC,SAASzB,KAAI,SAAA0B,GACxC,IAIMC,EAJ8C3D,EAAU0D,IAC5DJ,EAAOM,gBAAgBF,EAAK,aAG2B3B,SACtD3B,QAAO,SAAAyD,GAAC,MAAwB,eAApBA,EAAE1B,SAAS2B,QACvBxD,QAAO,SAACC,EAAK0B,GACZ,OAAO,eACF1B,EADL,CAGE4B,SAAS,eACJ5B,EAAI4B,SADD,CAENhC,YAAaI,EAAI4B,SAAShC,YAAY4D,OACpC9B,EAAQE,SAAShC,oBAMrB+B,EAAeyB,EAAexB,SAAShC,YAAYG,QACvD,SAACC,EAAaF,GAAd,OAAqBA,EAAE,IAAMA,EAAE,GAAKE,EAAMF,EAAE,GAAKE,IACjD6B,OAAOC,kBAGHC,EAAeqB,EAAexB,SAAShC,YAAYG,QACvD,SAACC,EAAaF,GAAd,OAAqBA,EAAE,IAAMA,EAAE,GAAKE,EAAMF,EAAE,GAAKE,IACjD6B,OAAOG,kBAGT,OAAO,eACFoB,EADL,CAEElB,WAAW,eACNkB,EAAelB,WADV,CAERE,MAAO,UACPG,OACEC,KAAKC,MAAMC,EAAcU,EAAexB,UAAY,KAAO,GAC7De,cAAeH,KAAKC,MAClB9C,EAAiByD,EAAexB,SAAShC,cAE3C+B,eACAI,eACAI,IAAK,QAEPF,GAAI,YAKV,OAAOtB,QAAQC,QACbC,uBAAaE,EAAO0C,MAAK,SAAAC,GAAC,OAAIA,EAAEzB,KAAO1C,OAK7C,OAAOoB,QAAQC,QAAQ+C,WAIdC,EAActD,gBAAM,CAC/BC,OAAQ,GACRC,aAAc,CAAEoC,SAChBlC,MAAM,SAAD,oGAAC,EAAC,YAAyC,IAAtCkC,EAAqC,EAArCA,MACR,GAAIA,EAAMC,SAAU,CAClB,IAAM1B,EAAM,gCAAgC0C,KAC1CjB,EAAME,MAAMZ,WAAWC,KAGnB2B,EAAS,yEAAqE3C,EAAI,GAAzE,cAEf,OAAOT,MAAMoD,GACV5C,MAAK,SAAAwC,GAAC,OAAIA,EAAEK,UACZ7C,MAAK,SAAA6C,GAAI,OAAIC,eAAKD,MAEvB,OAAOpD,QAAQC,QAAQ+C,a,SCzKZM,E,OCAf,E,mCCKe,G,OAAA,SAACC,GAAD,OACb,gBAAC,EAAD,CAAMC,UAAU,QAAQC,QAAM,GAC5B,gBAAC,EAAD,CAAMD,UAAU,QAAQD,EAAMtB,MAAMV,WAAWI,MAC/C,gBAAC,EAAD,CAAM6B,UAAU,WAAWE,cAAc,UACvC,yCADF,IAC2BH,EAAMtB,MAAMV,WAAWK,OADlD,OAGA,gBAAC,EAAD,CAAM4B,UAAU,YAAYE,cAAc,UACxC,0CADF,IAC4BH,EAAMtB,MAAMV,WAAWS,cADnD,SCVW,WAACuB,GAAD,OACb,uBACEI,OAAO,OACPC,MAAM,OACNC,QAAQ,YACRC,QAASP,EAAMO,QACfN,UAAU,SACVO,MAAO,CAAEC,OAAQ,UAAWC,UAAW,UAEvC,qBAAGC,SAAS,WACV,qBAAGC,UAAU,uBAAuBC,KAAK,WACvC,2BACEC,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,OACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,OACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,MACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,MACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,MACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,MACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,MACHC,GAAG,eAEL,2BACEJ,QAAQ,OACRC,GAAG,OACHC,GAAG,aACHC,GAAG,MACHC,GAAG,gBAGP,qBAAGL,KAAK,WACN,wBAAMM,EAAE,qOAEV,qBAAGL,QAAQ,OAAOD,KAAK,WACrB,wBAAMM,EAAE,0lBAEV,qBAAGP,UAAU,sBAAsBC,KAAK,YACxC,qBAAGD,UAAU,uBACX,0BAAQC,KAAK,UAAUC,QAAQ,OAAOC,GAAG,MAAMC,GAAG,MAAMxB,EAAE,cAC1D,0BAAQqB,KAAK,UAAUE,GAAG,MAAMC,GAAG,MAAMxB,EAAE,kB,2CC5D7C4B,G,cAAKC,OAELC,EAAuC,CAC3CC,aAAa,EACbC,cAAc,EACdC,OAAQ,CAAC,GAAI,IACbC,OAAQ,UAGGC,EAA2B,SACtCjD,EACAkD,EACArE,GAEA,OAAOmB,EAAMhB,SAAShC,YAAYG,QAAO,SAACC,EAAKJ,GAC7C,IAAMmG,EAAQtE,EAAIuE,QAAQ,IAAIC,SAAgBH,EAAOI,IAAKJ,EAAOK,MAC3DC,EAAa3E,EAAIuE,QACrB,IAAIC,SAAgBrG,EAAY,GAAIA,EAAY,KAE5CyG,EAAW7D,KAAK8D,KACpB9D,KAAK+D,IAAI/D,KAAKgE,IAAIT,EAAMU,EAAIL,EAAWK,GAAI,GACzCjE,KAAK+D,IAAI/D,KAAKgE,IAAIT,EAAMW,EAAIN,EAAWM,GAAI,IAE/C,OAAOL,EAAWrG,EAAMqG,EAAWrG,IAClC2G,MAySUC,E,4MA1RbnF,IAA4BkC,O,EAC5BkD,mBAAqC,IAAIZ,QAAeT,G,EACxDsB,kBAAoC,IAAIb,QAAeT,G,EACvDuB,cAAgCpD,O,EAEhCqD,mBAAqB,WACnBnG,uBACEoG,SAASC,cACP,kEAEFzF,KAAI,SAAA0F,GAAE,OAAIA,EAAGC,Y,EA8HjBC,YAAcC,KAAS,SAACC,GAMtB,EAAK9F,IAAIA,KAAI,SAAAA,GACX,IAAM+F,EAA6B,EAAKtD,MAAMnD,OAAOhB,QACnD,SAACC,EAAK4C,GACJ,IAAMyD,EAAWR,EAAyBjD,EAAO2E,EAAEzB,OAAQrE,GAE3D,OAAO4E,EAAWrG,EAAIqG,SAAW,CAAEA,WAAUzD,SAAU5C,IAEzD,CAAEqG,SAAUM,MAGVa,EAAanB,SAAW,GAC1B,EAAKnC,MAAMuD,aAAazD,eAAKwD,EAAa5E,QAE1C,EAAKsB,MAAMwD,aAAajG,KAAI,WAC1B,EAAKyC,MAAMuD,aAAa9D,gBAI7B,K,EA0DHgE,mBAAqB,WACfV,SAASW,mBACX,EAAKnG,IAAIA,KAAI,SAAAA,GAAG,OAAIA,EAAIoG,WAAWC,YACnC,EAAKd,sBAEL,EAAKvF,IAAIA,KAAI,SAAAA,GAAG,OAAIA,EAAIoG,WAAWE,c,8DAlNtB,IAAD,OACb9B,cACC,uGAEF,IAAMxE,EAAM,IAAIwE,MAAa,CAC3B+B,UAAW,MACXtD,MACE,0EACFuD,OAAQ,CACN9B,IAAK+B,WAAWC,aAAaC,QAAQ,cAAgB,KACrDlC,IAAKgC,WAAWC,aAAaC,QAAQ,cAAgB,MAEvDC,KAAM,GACNR,YAAY,IAGdpG,EAAI6G,GAAG,QAAQ,WACb,EAAK7G,IAAMuC,eAAKvC,GAEhB,EAAK8G,YACL,EAAKC,aAE4B,iBAA7B,EAAKtE,MAAMuE,eACb,EAAKzB,qBAIwB,eAA7B,EAAK9C,MAAMuE,eACX,EAAKvE,MAAMnD,OAAOwB,OAAS,GAE3B,EAAKmG,WAAW,EAAKxE,MAAMnD,OAAO,GAAI,CAAE4H,SAAS,EAAOC,QAAS,QAIjEtD,EAAGuD,WACLpH,EAAI6G,GAAG,YAAaQ,KAAKzB,aAG3B5F,EAAI6G,GAAG,WAAW,kBAAM,EAAKpE,MAAM6E,SAAS,EAAKtH,QAIjDA,EAAIuH,WACF,IAAI/C,mBAA0B,CAC5BgD,gBAAiB,CACfC,oBAAoB,GAEtBC,mBAAmB,EACnBC,kBAAkB,EAClBC,oBAAoB,EAEpBC,iBAAkB,CAChBC,QAAsC,eAA7BT,KAAK5E,MAAMuE,cAAiC,GAAK,OAKhEhH,EAAIuH,WACF,IAAI/C,oBAA2B,CAC7BuD,SAAUlE,EAAGuD,UACbY,aAAcnE,EAAGuD,e,oCAKTjG,GACZ,OAAQkG,KAAK5E,MAAMwF,cAAc7G,UAC/BD,IAAUkG,KAAK5E,MAAMwF,cAAc5G,OAClCgG,KAAK5E,MAAMwD,aAAa7E,UACvBD,IAAUkG,KAAK5E,MAAMwD,aAAa5E,MAClC,UACAF,EAAMV,WAAWE,Q,kCAGV,IAAD,OACV0G,KAAKrH,IAAIA,KAAI,SAAAA,GACX,EAAKyC,MAAMnD,OAAO4I,SAAQ,SAAA/G,GACxB,IAAMgH,EAAwB,CAC5B3H,GAAIW,EAAMV,WAAWC,IACrBoB,KAAM,OACNsG,OAAQ,CACNtG,KAAM,UACNuG,KAAMlH,GAERmH,OAAQ,CACN,YAAa,QACb,WAAY,SAEdC,MAAO,CACL,aAAc,EACd,aAAc,EAAKC,cAAcrH,KAIrCnB,EAAI6G,GAAG,QAASsB,EAAM3H,IAAI,WACxB,EAAKiC,MAAMgG,cAActH,MAG3BnB,EAAI0I,SAASP,W,mCAKL,IAAD,OACXd,KAAKrH,IAAIA,KAAI,SAAAA,GACX,EAAKyC,MAAMnD,OAAO4I,SAAQ,SAAA/G,GACxB,IAAMhD,EAAcgD,EAAMhB,SAAShC,YAAY,GAEzCwK,EAAUnD,SAASoD,cAAc,OACvCC,SACE,gBAACC,EAAD,CAAQ9F,QAAS,kBAAM,EAAKP,MAAMgG,cAActH,MAChDwH,GAG8B,IAAInE,SAAgB,CAClDmE,YACCI,UAAU,CAAC5K,EAAY,GAAIA,EAAY,KAEnC6K,MAAMhJ,W,qCA+BH,IAAD,OACbqH,KAAKrH,IAAIA,KAAI,SAAAA,GACX,EAAKyC,MAAMnD,OAAO4I,SAAQ,SAAA/G,GAExBnB,EAAIiJ,iBAAiB9H,EAAMX,GAAI,aAAc,EAAKgI,cAAcrH,Y,iCAK3DA,EAAc+H,GACvB7B,KAAKrH,IAAIA,KAAI,SAAAA,GACX,IACMmJ,EADchI,EAAMhB,SAAShC,YAEhC6B,KAAI,SAAAoJ,GAAK,OAAI,IAAI5E,eAAsB4E,EAAOA,MAC9C9K,QAAO,SAAC6K,EAAQC,GACf,OAAOD,EAAOE,OAAOD,MAGzBpJ,EAAIsJ,UAAUH,EAAd,aAAwBhC,QAAS,IAAO+B,S,gCAIlC/H,EAAcoI,GACtBlC,KAAKrH,IAAIA,KAAI,SAAAA,GACX,IAAMwJ,EAA0B,IAAIhF,SAClCrD,EAAMhB,SAAShC,YAAY,GAAG,GAC9BgD,EAAMhB,SAAShC,YAAY,GAAG,IAGhCoL,EACGR,UAAUS,GACVC,QAAQC,iBAA8B,gBAACC,EAAD,CAAOxI,MAAOA,MACpD6H,MAAMhJ,Q,iDAKPqH,KAAK5E,MAAMwF,cAAc7G,SAC3BiG,KAAKuC,UAAUvC,KAAK5E,MAAMwF,cAAc5G,MAAOgG,KAAKjC,oBAEpDiC,KAAKjC,mBAAmByE,W,gDAID,IACjB5D,EAAiBoB,KAAK5E,MAAtBwD,aAENA,EAAa7E,UACb6E,EAAa5E,QAAUgG,KAAK5E,MAAMwF,cAAc6B,KAAK,KAAMC,YAE3D1C,KAAKuC,UAAU3D,EAAa5E,MAAOgG,KAAKhC,mBAExCgC,KAAKhC,kBAAkBwE,W,0CAczBxC,KAAK2C,gBACL3C,KAAK5E,MAAM6E,SAASD,KAAKrH,KAEzBwF,SAASyE,iBAAiB,mBAAoB5C,KAAKnB,oBAEnDmB,KAAK/B,cAAgB/C,eACnB2H,UAAUC,YAAYC,eAAc,SAAAC,GAClC3D,aAAa4D,QAAQ,YAAaC,OAAOF,EAASG,OAAOC,WACzD/D,aAAa4D,QAAQ,YAAaC,OAAOF,EAASG,OAAOE,kB,yCAK5CC,GAAmB,IAAD,OACnCtD,KAAKuD,eACLvD,KAAKwD,2BACLxD,KAAKyD,0BAGHzD,KAAK5E,MAAMwF,cAAc7G,WACxBuJ,EAAU1C,cAAc8C,UACvBJ,EAAU1C,cAAc5G,QAAUgG,KAAK5E,MAAMwF,cAAc5G,QAE7DgG,KAAKJ,WAAWI,KAAK5E,MAAMwF,cAAc5G,OAGvCgG,KAAK5E,MAAMuI,YACb3D,KAAK9B,qBAGP0F,YAAW,kBAAM,EAAKjL,IAAIA,KAAI,SAAAA,GAAG,OAAIA,EAAIkL,cAAW,M,kDAIpD7D,KAAK/B,cAActF,KAAI,SAAAsF,GAAa,OAClC4E,UAAUC,YAAYgB,WAAW7F,Q,6CAKnCE,SAAS4F,oBAAoB,mBAAoB/D,KAAKnB,sB,+BAItD,OACE,gBAAC,EAAD,CACEmF,MAAI,EACJ7K,GAAG,MACHkC,UAAWc,IAAG,CAAE8H,aAAcjE,KAAK5E,MAAMuI,mB,GArR/BO,iB,0BC7CZC,G,gBAAQ,SAAC/I,GAAD,OAMZ,gBAAC,EAAD,CACEC,UAAWc,IAAG,QAAS,CAAE,cAAef,EAAMgJ,aAC9C9I,QAAM,EACNK,QAASP,EAAMO,QACf0I,QAAQ,GAER,gBAAC,EAAD,CAAMhJ,UAAU,QAAQD,EAAMtB,MAAMV,WAAWI,MAC/C,gBAAC,EAAD,CAAM6B,UAAU,WAAWE,cAAc,UACvC,yCADF,IAC2BH,EAAMtB,MAAMV,WAAWK,OADlD,OAGA,gBAAC,EAAD,CAAM4B,UAAU,gBAAgBE,cAAc,UAC5C,2CAA0B,IACzB7B,KAAKC,MAAMyB,EAAMtB,MAAMV,WAAWP,cAFrC,MAIA,gBAAC,EAAD,CAAMwC,UAAU,gBAAgBE,cAAc,UAC5C,2CAA0B,IACzB7B,KAAKC,MAAMyB,EAAMtB,MAAMV,WAAWH,cAFrC,MAKA,gBAAC,EAAD,CAAMoC,UAAU,WACd,gBAAC,IAAD,CAAQiJ,KAAK,OAAOC,MAAM,UAAU5I,QAASP,EAAMoJ,qBAgE1CC,EA3DEC,0BAAgB,CAAEC,qCA2DpBF,C,uKAlDH,IAAD,OACP,OACE,gBAAC,EAAD,CAAMpJ,UAAU,WAAWC,QAAM,EAAC+I,QAAQ,GACxC,gBAAC,EAAD,CAAM/I,QAAM,EAAC+I,QAAQ,EAAOhJ,UAAU,iBACpC,8CAEA,yBACEZ,KAAK,OACLmK,OAAO,OACPC,SAAU,SAAApG,GACR,IAAMqG,EAAOrG,EAAEsG,OAAOC,MAAO,GAEvBC,EAAS,IAAIC,WACnBD,EAAOrC,iBAAiB,QAAQ,SAAAuC,GAC7BhL,OAAeC,QAAU+K,EAAMJ,OAAQK,OAExC,EAAKhK,MAAMuJ,iBACTtO,EAAe,CAAEC,KAAM,aAAcG,QAASyE,eAAK,aAGvD+J,EAAOI,WAAWP,OAKxB,gBAAC,EAAD,CAAMxJ,QAAM,EAAC+I,QAAQ,EAAOhJ,UAAU,UACpC,oCACC2E,KAAK5E,MAAMnD,OAAOU,KAAI,SAACmB,EAAO3C,GAAR,OACrB,gBAAC,EAAD,CACEmO,IAAKnO,EACL2C,MAAOA,EACP6B,QAAS,kBAAM,EAAKP,MAAMmK,aAAazL,IACvCsK,WACE,EAAKhJ,MAAMwF,cAAc7G,UACzB,EAAKqB,MAAMwF,cAAc5G,QAAUF,EAErC0K,eAAgB,SAAA/F,GACdA,EAAE+G,kBACF,EAAKpK,MAAMuJ,iBACTtO,EAAe,CAAEC,KAAM,UAAWG,QAASyE,eAAKpB,EAAMX,mB,GAxClD+K,kB,kBCgCPuB,G,QAvECC,yBAAe,CAAEzN,UAuElBwN,C,4MA7Db9M,IAA4BkC,O,EAE5B8K,MAAe,CACb/E,cAAe/F,OACf+D,aAAc/D,Q,EAGhBuG,cAAgB,SAACtH,GACf,EAAK8L,SAAS,CACZhF,cACE,EAAK+E,MAAM/E,cAAc7G,UACzB,EAAK4L,MAAM/E,cAAc5G,QAAUF,EAC/Be,OACAK,eAAKpB,M,EAIf6E,aAAe,SAAC7E,GACd,EAAK8L,SAAS,CACZhH,aAAc9E,K,uDAIR,IAAD,OACP,OAAOkG,KAAK5E,MAAMnD,OAAOwK,KACvB,MACA,kBAAM,QACN,SAAAxK,GACE,IAAM4N,EAAwB,EAAKlN,IAAI8J,KAAKxK,GAAQ,SAAAU,GAAG,OACrDmN,IAAO7N,GAAQ,SAAA6B,GAAK,OAClBiD,EAAyBjD,EAAOnB,EAAIoN,YAAapN,SAIrD,OACE,gBAAC,EAAD,CAAM0C,UAAU,WAAW2I,MAAI,GAC7B,gBAAC,EAAD,CACE/L,OAAQ4N,EACRN,aAAc,EAAKnE,cACnBR,cAAe,EAAK+E,MAAM/E,gBAE5B,gBAACoF,EAAD,CACE/N,OAAQA,EACR2I,cAAe,EAAK+E,MAAM/E,cAC1BhC,aAAc,EAAK+G,MAAM/G,aACzBD,aAAc,EAAKA,aACnByC,cAAe,EAAKA,cACpBnB,SAAU,SAAAtH,GACR,EAAKA,IAAMA,EACX,EAAKsN,eAEPtG,cAAc,eACdgE,YAAY,Y,GArDHO,e,sDCDfgC,I,eAAYtP,EAAQ,MAApBsP,SAERC,IAASC,OAAOC,UAAY,EAE5B,IAAMC,GAAQ1P,EAAQ,MAEhB2P,GAAcC,IAUdC,G,kLAMFzG,KAAKiG,gB,+BAGG,IAAD,OACDS,EAASC,MAAMC,KACnBzI,SAAS0I,iBAAmC,oBAGxCC,EAAK3I,SAASC,cAClB,gCAGF,OACE,gBAAC,EAAD,CAAM/C,UAAU,WAAW0L,cAAc,SAAS1C,QAAQ,GACxD,gBAAC,EAAD,CAAMhJ,UAAU,UAAU2I,MAAI,GAC5B,gBAAC,EAAD,CAAMA,MAAI,EAAC1I,QAAM,EAACM,MAAO,CAAEoH,SAAU,aACnC,gBAAC,EAAD,CAAM3H,UAAU,SAAhB,OAAyByL,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAIE,WAC7B,gBAAC,EAAD,CAAM3L,UAAU,WACd,gBAAC,IAAD,CACE4L,MAAI,EACJ3C,KAAK,SACLC,MAAM,mBACN5I,QAASqE,KAAK5E,MAAM8L,oBAEtB,gBAAC,IAAD,CACED,MAAI,EACJ3C,KAAK,SACLC,MAAM,eACN5I,QAAS,kBA1CT,SAAC7B,GACf,IAAMqN,EAAO,IAAIC,KAAK,CAACd,GAAMxM,IAAS,CACpCW,KAAM,6BAGR4M,iBAAOF,EAAD,UAAUrN,EAAMV,WAAWI,KAA3B,SAqCuB8N,CAAQ,EAAKlM,MAAMtB,WAItC,uBACEuB,UAAU,aACVkM,wBAAyB,CACvBC,OAAQhL,GAAGiL,OAAOzH,KAAK5E,MAAMN,gBAIjC,gBAAC,EAAD,CAAMO,UAAU,WACd,gBAAC,EAAD,CAAMA,UAAU,WAAWC,QAAM,EAAC+I,QAAQ,GACxC,4BAAOrE,KAAK5E,MAAMtB,MAAMV,WAAWK,OAAnC,OACA,0CAEF,gBAAC,EAAD,CAAM4B,UAAU,gBAAgBC,QAAM,EAAC+I,QAAQ,GAC7C,4BACG3K,KAAKC,MAAMqG,KAAK5E,MAAMtB,MAAMV,WAAWP,cAD1C,MAGA,+CAEF,gBAAC,EAAD,CAAMwC,UAAU,gBAAgBC,QAAM,EAAC+I,QAAQ,GAC7C,4BACG3K,KAAKC,MAAMqG,KAAK5E,MAAMtB,MAAMV,WAAWH,cAD1C,MAGA,iDAIN,gBAAC,EAAD,CAAMoC,UAAU,SAAS0L,cAAc,QAAQ1C,QAAQ,GACrD,gBAAC,WAAD,CACEqD,YAAY,EACZC,YAAY,EACZC,eAAgBlB,EAAOjN,OAAS,EAChCoO,cAAY,EACZC,UAAQ,EACRC,SAAU,KAETrB,EAAO/N,KAAI,SAAAqP,GAAK,OACf,uBAAK1C,IAAK0C,EAAMC,IAAKA,IAAKD,EAAMC,IAAKC,IAAKF,EAAMC,WAItD,gBAAC,EAAD,CAAM5M,UAAU,gBAAgB2I,MAAI,GACjC0C,EAAOyB,MAAM,EAAG,GAAGxP,KAAI,SAAAqP,GAAK,OAC3B,uBAAK1C,IAAK0C,EAAMC,IAAKA,IAAKD,EAAMC,IAAKC,IAAKF,EAAMC,gB,GAhFvC/D,iBAyFjB1H,IAAK,IAAK+J,IAAqB6B,IAAIlC,IAEnCT,GAAUC,yBAAe,CAAE5L,QAAOgB,gBAyKzB2J,GAxKEC,0BAAgB,CAAEC,qCAwKpBF,CAASgB,G,uKAnKZ,IAAD,OACP,OAAOzF,KAAK5E,MAAMtB,MAAM2I,KACtB,MACA,kBAAM,QACN,SAAA3I,GAAK,OACH,EAAKsB,MAAMN,YAAY2H,KACrB,MACA,kBAAM,QACN,SAAA3H,GACE,GAAIhB,EAAM4J,UAAY5I,EAAY4I,SAChC,OAAO,KAEP,IAAM2E,EAAQ3O,KAAKC,MAAMG,EAAME,MAAMZ,WAAWK,OAAS,KAAO,EAkB1D6O,EAAYxO,EAAME,MAAMlB,SAAShC,YAAY6B,KACjD,SAAC4P,EAAGC,GAAJ,OACE5O,EAAc,eACTE,EAAME,MAAMlB,SADJ,CAEXhC,YAAagD,EAAME,MAAMlB,SAAShC,YAAYqR,MAC5C,EACAK,EAAI,MAEH,OAGHC,EAAQC,IAAKJ,EAAU3P,KAAI,SAAA4D,GAAC,OA3BpB,SACZoM,EACAC,GAEA,IAAMC,EAAYF,EAASC,EACrBE,EAAuBF,EAAiB,EAExCG,EAAgBrP,KAAKC,MAAMgP,EAASE,GAE1C,OAAIA,EAAYC,EACPC,EAEAA,EAAgBH,EAeWjP,CAAM4C,EAAG8L,OAEzCW,EAAalP,EAAME,MAAMlB,SAAShC,YAAY6B,KAAI,SAAA3B,GAAC,OACvDA,EAAE,GAAK0C,KAAKC,MAAM3C,EAAE,IAAM,QAG5B,OACE,gBAAC,EAAD,CAAMqE,UAAU,UAAUG,OAAO,OAAOwI,MAAI,EAAC1I,QAAM,GACjD,gBAAC,GAAD,CACER,YAAaA,EAAYd,MACzBF,MAAOA,EAAME,MACbkN,kBAAmB,WACjB,EAAK9L,MAAMuJ,iBACTtO,EAAe,CACbC,KAAM,aACNG,QAASyE,eAAKpB,EAAME,MAAMb,UAMlC,gBAAC,EAAD,CAAMkL,QAAQ,EAAOhJ,UAAU,eAC7B,gBAAC2K,EAAD,CACE/N,OAAQ,CAAC6B,EAAME,OACf2F,cAAc,aACdgE,YAAY,EACZ/E,aAAc9E,EAEd8G,cAAe/F,OACf8D,aAAc,aACdyC,cAAe,aACfnB,SAAU,gBAGd,gBAAC,EAAD,CAAM5E,UAAU,4BAA4BgJ,QAAQ,GAClD,gBAAC,IAAD,CACErD,KAAM,CACJiI,SAAU,CACR,CACE1E,MAAO,YACP2E,YAAa,EACbC,YAAa,EACbC,QAAS,SACTC,QAAS,gBACTrI,KAAMgI,GAER,CACEK,QAAS,SACTrI,KAAM,MAIZa,QAAS,CACPyH,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEtQ,GAAI,gBACJsB,KAAM,WACNiP,OAAQpB,EAAU3P,KAAI,SAAA4D,GAAC,OAAIA,EAAEoN,QAAQ,MACrCC,SAAS,GAEX,CACEzQ,GAAI,SACJuQ,OAAQjB,EACRA,MAAO,CACLoB,SAAU,SAAC7P,GACT,OAAOA,EAAQF,EAAME,MAAMZ,WAAWK,OAA/B,UACAO,EADA,OAEH,SAKZ8P,MAAO,CACL,CACErP,KAAM,SACNtB,GAAI,SACJsP,MAAO,CACLsB,UAAW,EACXC,YAAa,EACbC,SAAU,GACVC,aACwC,GAAtCpQ,EAAME,MAAMZ,WAAWP,aACzBsR,aAAc,IACd1B,MAAO,CACLoB,SAAU,SAAC7P,GACT,MAAM,GAAN,OAAUA,EAAV,YAOZoQ,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACTC,MAAO,SAACC,GACN,MAAM,UAAN,OAAiBA,EAAa,GAAGlG,MAAjC,QAEFA,MAAO,iBAAM,IACbmG,OAAQ,SAACD,EAAqBzJ,GAC5B,MAAM,SAAN,OAAgByJ,EAAa,GAAGzQ,MAAhC,UAKR2Q,OAAQ,KACRnP,OAAQ,iB,GAxJR0I,e,qBCtHhB0G,I,QAAU,IAAIC,MAEdpF,GAAUC,yBAAe,CAAE5L,UAkElB2K,GAjEEC,0BAAgB,CAAEC,qCAiEpBF,CAASgB,G,kLA3DpBmF,GAAQ5L,W,6CAIR4L,GAAQ3L,Y,+BAGA,IAAD,OACP,OAAOe,KAAK5E,MAAMtB,MAAM2I,KACtB,MACA,kBAAM,QACN,SAAA3I,GACE,OAAIA,EAAM4J,SACD,KAGL,gBAAC,EAAD,CAAMrI,UAAU,aAAaG,OAAO,OAAOwI,MAAI,EAAC1I,QAAM,GACpD,gBAAC,EAAD,CACED,UAAU,kBACVM,QAAS,WACP,EAAKP,MAAMuJ,iBACTtO,EAAe,CACbC,KAAM,UACNG,QAASyE,eAAKpB,EAAME,MAAMb,QAIhC4N,cAAc,SACdxL,cAAc,UAEd,uBAAKE,MAAM,KAAKD,OAAO,KAAKE,QAAQ,aAClC,wBACEO,KAAK,QACLM,EAAE,+RAKR,gBAAC,EAAD,CAAM8H,QAAQ,EAAOhJ,UAAU,eAC7B,gBAAC2K,EAAD,CACE/N,OAAQ,CAAC6B,EAAME,OACf2F,cAAc,aACdgE,YAAU,EACV/E,aAAc9E,EAEd8G,cAAe/F,OACf8D,aAAc,aACdyC,cAAe,aACfnB,SAAU,wB,GAlDHiE,eCpBVpG,GCOC4H,yBAAe,CAAEnO,eAoBlBkO,C,uKAdX,OAAOzF,KAAK5E,MAAM7D,YAAYkL,KAC5B,MACA,kBAAM,QACN,SAAAlL,GAAW,OACT,gBAAC,EAAD,CAAM8D,UAAU,MAAMG,OAAO,QACL,aAArBjE,EAAYjB,MAAuB,gBAAC,EAAD,MACd,YAArBiB,EAAYjB,MAAsB,gBAAC,GAAD,MACb,eAArBiB,EAAYjB,MAAyB,gBAAC,GAAD,c,GAT9B4N,cCAE4G,QACW,cAA7B3Q,OAAOxC,SAASoT,UAEe,UAA7B5Q,OAAOxC,SAASoT,UAEhB5Q,OAAOxC,SAASoT,SAASC,MACvB,2DCbN,IAAMxO,GAAKC,MAELwO,GAAkB9O,IAAG,CACzB,aAAcK,GAAGuD,UACjB,YAAavD,GAAG0O,SAChB,WAAY1O,GAAG2O,UAIX1S,GAAO0F,SAASiN,iBAAmBjN,SAAS1F,KAElDA,GAAK4C,UAAYc,IAAG1D,GAAK4C,UAAW4P,I,gCCRpCzJ,IAASiG,OACP,kBAAC,IAAM4D,WAAP,KACE,kBAAC,GAAD,OAEFlN,SAASmN,eAAe,QF+HpB,kBAAmBzI,WACrBA,UAAU0I,cAAcC,MACrBpT,MAAK,SAAAqT,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.2e4ba8c5.chunk.js","sourcesContent":["import { HistoryLocation as HistoryLocationT } from \"@buildo/bento/data\";\nimport { Option, fromNullable } from \"fp-ts/lib/Option\";\n\nexport type HistoryLocation = HistoryLocationT;\n\nexport type CurrentView =\n  | { view: \"explorer\" }\n  | { view: \"details\"; routeId: Option<string> }\n  | { view: \"navigation\"; routeId: Option<string> };\n\nexport function locationToView(location: HistoryLocation): CurrentView {\n  switch (location.search.view) {\n    case \"details\":\n      return {\n        view: \"details\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    case \"navigation\":\n      return {\n        view: \"navigation\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    default:\n      return { view: \"explorer\" };\n  }\n}\n\nexport function viewToLocation(view: CurrentView): HistoryLocation {\n  switch (view.view) {\n    case \"details\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"details\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"navigation\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"navigation\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"explorer\":\n      return { pathname: \"/Explorer\", search: {} };\n  }\n}\n\nexport type Content = {\n  name: string;\n  type: \"dir\" | \"file\";\n  url: string;\n  download_url: string;\n  html_url: string;\n};\n\nexport type Geometry = {\n  type: \"LineString\";\n  coordinates: Array<[number, number, number?]>;\n};\n\nexport type GeoJSONFeature = {\n  type: \"Feature\";\n  properties: {\n    name: string;\n    color: string;\n    length: number;\n    elevationGain: number;\n    minElevation: number;\n    maxElevation: number;\n    url: string;\n  };\n  geometry: Geometry;\n};\nexport type GeoJSONFeatureCollection = {\n  type: \"FeatureCollection\";\n  features: GeoJSONFeature[];\n};\n\nexport type Route = GeoJSONFeature & { id: string };\n","import { Query, location, available } from \"@buildo/bento/data\";\nimport {\n  locationToView,\n  Geometry,\n  Route,\n  GeoJSONFeature,\n  GeoJSONFeatureCollection\n} from \"../model\";\nimport * as stringToColor from \"string-to-color\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, fromNullable, none, some } from \"fp-ts/lib/Option\";\n\nconst toGeoJson = require(\"@mapbox/togeojson\");\n\nfunction getElevationGain(coordinates: Geometry[\"coordinates\"]): number {\n  return coordinates\n    .filter(c => c[2])\n    .reduce((acc, c, index) => {\n      const prevAltitude = index > 0 ? coordinates[index - 1][2] : undefined;\n      const altitude = c[2]!;\n\n      if (prevAltitude && altitude > prevAltitude) {\n        return acc + altitude - prevAltitude;\n      }\n\n      return acc;\n    }, 0);\n}\n\nexport { location };\n\nexport const currentView = Query({\n  params: {},\n  dependencies: { location: location },\n  fetch: ({ location }) => Promise.resolve(locationToView(location))\n});\n\nexport const routes = Query({\n  cacheStrategy: available,\n  params: {},\n  fetch: (): Promise<Route[]> =>\n    fetch(\n      `${\n        process.env.NODE_ENV === \"development\"\n          ? \"http://localhost:8081/\"\n          : \"https://or52hotxz1.execute-api.us-east-1.amazonaws.com/dev/\"\n      }`\n    )\n      .then(res => res.json() as Promise<{ body: string }>)\n      .then((res): GeoJSONFeature[] => JSON.parse(res.body))\n      .then(features =>\n        features.map(feature => {\n          const minElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n            Number.MAX_SAFE_INTEGER\n          );\n\n          const maxElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n            Number.MIN_SAFE_INTEGER\n          );\n\n          const richFeature: Route = {\n            id: feature.properties.url,\n            ...feature,\n            properties: {\n              ...feature.properties,\n              color: stringToColor(feature.properties.name),\n              length: Math.round(geoJsonLength(feature.geometry) / 100) / 10,\n              elevationGain: Math.round(\n                getElevationGain(feature.geometry.coordinates)\n              ),\n              minElevation,\n              maxElevation\n            }\n          };\n\n          return richFeature;\n        })\n      )\n});\n\nexport const route = Query({\n  params: {},\n  dependencies: { currentView, routes },\n  fetch: ({ currentView, routes }): Promise<Option<Route>> => {\n    if (\n      (currentView.view === \"details\" || currentView.view === \"navigation\") &&\n      currentView.routeId.isSome()\n    ) {\n      const routeId = currentView.routeId.value;\n\n      if (routeId === \"gpx\") {\n        const parser = new DOMParser();\n\n        return Promise.resolve(\n          fromNullable((window as any).gpxFile).map(gpx => {\n            const featureCollection: GeoJSONFeatureCollection = toGeoJson.gpx(\n              parser.parseFromString(gpx, \"text/xml\")\n            );\n\n            const geoJSONFeature: GeoJSONFeature = featureCollection.features\n              .filter(f => f.geometry.type === \"LineString\")\n              .reduce((acc, feature) => {\n                return {\n                  ...acc,\n\n                  geometry: {\n                    ...acc.geometry,\n                    coordinates: acc.geometry.coordinates.concat(\n                      feature.geometry.coordinates\n                    )\n                  }\n                };\n              });\n\n            const minElevation = geoJSONFeature.geometry.coordinates.reduce(\n              (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n              Number.MAX_SAFE_INTEGER\n            );\n\n            const maxElevation = geoJSONFeature.geometry.coordinates.reduce(\n              (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n              Number.MIN_SAFE_INTEGER\n            );\n\n            return {\n              ...geoJSONFeature,\n              properties: {\n                ...geoJSONFeature.properties,\n                color: \"#38ffcc\",\n                length:\n                  Math.round(geoJsonLength(geoJSONFeature.geometry) / 100) / 10,\n                elevationGain: Math.round(\n                  getElevationGain(geoJSONFeature.geometry.coordinates)\n                ),\n                minElevation,\n                maxElevation,\n                url: \"gpx\"\n              },\n              id: \"gpx\"\n            };\n          })\n        );\n      } else {\n        return Promise.resolve(\n          fromNullable(routes.find(r => r.id === routeId))\n        );\n      }\n    }\n\n    return Promise.resolve(none);\n  }\n});\n\nexport const routeReadme = Query({\n  params: {},\n  dependencies: { route },\n  fetch: ({ route }): Promise<Option<string>> => {\n    if (route.isSome()) {\n      const res = /BikeRoutes.+master\\/(.+)\\/.+$/.exec(\n        route.value.properties.url\n      )!;\n\n      const readmeUrl = `https://raw.githubusercontent.com/BikeRoutes/BikeRoutes/master/${res[1]}/README.md`;\n\n      return fetch(readmeUrl)\n        .then(r => r.text())\n        .then(text => some(text));\n    }\n    return Promise.resolve(none);\n  }\n});\n","import View from './View';\nexport default View;\n","import View from '@buildo/bento/components/FlexView';\nexport default View;\n","import * as React from \"react\";\nimport View from \"../View\";\nimport { Route } from \"../../model\";\n\nimport \"./popup.scss\";\n\nexport default (props: { route: Route }) => (\n  <View className=\"popup\" column>\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n  </View>\n);\n","import * as React from \"react\";\n\nexport default (props: { onClick: () => void }) => (\n  <svg\n    height=\"41px\"\n    width=\"27px\"\n    viewBox=\"0 0 27 41\"\n    onClick={props.onClick}\n    className=\"marker\"\n    style={{ cursor: \"pointer\", marginTop: \"-100%\" }}\n  >\n    <g fillRule=\"nonzero\">\n      <g transform=\"translate(3.0, 29.0)\" fill=\"#000000\">\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"9.5\"\n          ry=\"4.77275007\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"8.5\"\n          ry=\"4.29549936\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"7.5\"\n          ry=\"3.81822308\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"6.5\"\n          ry=\"3.34094679\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"5.5\"\n          ry=\"2.86367051\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"4.5\"\n          ry=\"2.38636864\"\n        />\n      </g>\n      <g fill=\"#3FB1CE\">\n        <path d=\"M27,13.5 C27,19.074644 20.250001,27.000002 14.75,34.500002 C14.016665,35.500004 12.983335,35.500004 12.25,34.500002 C6.7499993,27.000002 0,19.222562 0,13.5 C0,6.0441559 6.0441559,0 13.5,0 C20.955844,0 27,6.0441559 27,13.5 Z\" />\n      </g>\n      <g opacity=\"0.25\" fill=\"#000000\">\n        <path d=\"M13.5,0 C6.0441559,0 0,6.0441559 0,13.5 C0,19.222562 6.7499993,27 12.25,34.5 C13,35.522727 14.016664,35.500004 14.75,34.5 C20.250001,27 27,19.074644 27,13.5 C27,6.0441559 20.955844,0 13.5,0 Z M13.5,1 C20.415404,1 26,6.584596 26,13.5 C26,15.898657 24.495584,19.181431 22.220703,22.738281 C19.945823,26.295132 16.705119,30.142167 13.943359,33.908203 C13.743445,34.180814 13.612715,34.322738 13.5,34.441406 C13.387285,34.322738 13.256555,34.180814 13.056641,33.908203 C10.284481,30.127985 7.4148684,26.314159 5.015625,22.773438 C2.6163816,19.232715 1,15.953538 1,13.5 C1,6.584596 6.584596,1 13.5,1 Z\" />\n      </g>\n      <g transform=\"translate(6.0, 7.0)\" fill=\"#FFFFFF\" />\n      <g transform=\"translate(8.0, 8.0)\">\n        <circle fill=\"#000000\" opacity=\"0.25\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n        <circle fill=\"#FFFFFF\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as ReactDOM from \"react-dom\";\nimport throttle from \"lodash/throttle\";\nimport * as mapboxgl from \"mapbox-gl\";\nimport Popup from \"../Popup/Popup\";\nimport Marker from \"../Marker/Marker\";\nimport View from \"../View\";\nimport { Option, none, some, fromNullable } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\nimport { identity } from \"fp-ts/lib/function\";\nimport cx from \"classnames\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./map.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst md = mobileDetect();\n\nconst popupSettings: mapboxgl.PopupOptions = {\n  closeButton: false,\n  closeOnClick: false,\n  offset: [0, -40],\n  anchor: \"bottom\"\n};\n\nexport const getRouteDistanceInPixels = (\n  route: Route,\n  lngLat: { lng: number; lat: number },\n  map: mapboxgl.Map\n): number => {\n  return route.geometry.coordinates.reduce((acc, coordinates) => {\n    const point = map.project(new mapboxgl.LngLat(lngLat.lng, lngLat.lat));\n    const routePoint = map.project(\n      new mapboxgl.LngLat(coordinates[0], coordinates[1])\n    );\n    const distance = Math.sqrt(\n      Math.pow(Math.abs(point.x - routePoint.x), 2) +\n        Math.pow(Math.abs(point.y - routePoint.y), 2)\n    );\n    return distance < acc ? distance : acc;\n  }, Infinity);\n};\n\ntype Props = {\n  routes: Route[];\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n  onRouteHover: (route: Option<Route>) => void;\n  onRouteSelect: (route: Route) => void;\n  innerRef: (map: Option<mapboxgl.Map>) => void;\n  startPosition: \"userLocation\" | \"firstRoute\";\n  navigating: boolean;\n};\n\nclass App extends React.PureComponent<Props> {\n  map: Option<mapboxgl.Map> = none;\n  popupSelectedRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  popupHoveredRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  positionWatch: Option<number> = none;\n\n  centerUserLocation = () => {\n    fromNullable(\n      document.querySelector<HTMLButtonElement>(\n        \".mapboxgl-ctrl-geolocate:not(.mapboxgl-ctrl-geolocate-active)\"\n      )\n    ).map(el => el.click());\n  };\n\n  initializeMap() {\n    (mapboxgl as any).accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style:\n        \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n      center: {\n        lat: parseFloat(localStorage.getItem(\"start_lat\") || \"0\"),\n        lng: parseFloat(localStorage.getItem(\"start_lng\") || \"0\")\n      },\n      zoom: 11.0,\n      scrollZoom: false\n    });\n\n    map.on(\"load\", () => {\n      this.map = some(map);\n\n      this.addLayers();\n      this.addMarkers();\n\n      if (this.props.startPosition === \"userLocation\") {\n        this.centerUserLocation();\n      }\n\n      if (\n        this.props.startPosition === \"firstRoute\" &&\n        this.props.routes.length > 0\n      ) {\n        this.flyToRoute(this.props.routes[0], { animate: false, padding: 80 });\n      }\n    });\n\n    if (md.isDesktop) {\n      map.on(\"mousemove\", this.onMouseMove);\n    }\n\n    map.on(\"moveend\", () => this.props.innerRef(this.map));\n\n    // map.addControl(new mapboxgl.FullscreenControl());\n\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true,\n        showAccuracyCircle: true,\n\n        fitBoundsOptions: {\n          maxZoom: this.props.startPosition === \"firstRoute\" ? 15 : 11\n        }\n      })\n    );\n\n    map.addControl(\n      new mapboxgl.NavigationControl({\n        showZoom: md.isDesktop,\n        showCompass: !md.isDesktop\n      })\n    );\n  }\n\n  getRouteColor(route: Route): string {\n    return (this.props.selectedRoute.isSome() &&\n      route === this.props.selectedRoute.value) ||\n      (this.props.hoveredRoute.isSome() &&\n        route === this.props.hoveredRoute.value)\n      ? \"#387ddf\"\n      : route.properties.color;\n  }\n\n  addLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const layer: mapboxgl.Layer = {\n          id: route.properties.url,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: route as any\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-width\": 3,\n            \"line-color\": this.getRouteColor(route)\n          }\n        };\n\n        map.on(\"click\", layer.id, () => {\n          this.props.onRouteSelect(route);\n        });\n\n        map.addLayer(layer);\n      });\n    });\n  }\n\n  addMarkers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const coordinates = route.geometry.coordinates[0];\n\n        const element = document.createElement(\"div\");\n        ReactDOM.render(\n          <Marker onClick={() => this.props.onRouteSelect(route)} />,\n          element\n        );\n\n        const marker: mapboxgl.Marker = new mapboxgl.Marker({\n          element\n        }).setLngLat([coordinates[0], coordinates[1]]);\n\n        marker.addTo(map);\n      });\n    });\n  }\n\n  onMouseMove = throttle((e: mapboxgl.MapMouseEvent) => {\n    type ClosestRoute = {\n      distance: number;\n      route: Route;\n    };\n\n    this.map.map(map => {\n      const closestRoute: ClosestRoute = this.props.routes.reduce(\n        (acc, route) => {\n          const distance = getRouteDistanceInPixels(route, e.lngLat, map);\n\n          return distance < acc.distance ? { distance, route } : acc;\n        },\n        { distance: Infinity } as ClosestRoute\n      );\n\n      if (closestRoute.distance < 25) {\n        this.props.onRouteHover(some(closestRoute.route));\n      } else {\n        this.props.hoveredRoute.map(() => {\n          this.props.onRouteHover(none);\n        });\n      }\n    });\n  }, 100);\n\n  updateLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        // update color\n        map.setPaintProperty(route.id, \"line-color\", this.getRouteColor(route));\n      });\n    });\n  }\n\n  flyToRoute(route: Route, options?: mapboxgl.FitBoundsOptions) {\n    this.map.map(map => {\n      const coordinates = route.geometry.coordinates as [number, number][];\n      const bounds = coordinates\n        .map(coord => new mapboxgl.LngLatBounds(coord, coord))\n        .reduce((bounds, coord) => {\n          return bounds.extend(coord);\n        });\n\n      map.fitBounds(bounds, { padding: 50, ...options });\n    });\n  }\n\n  showPopup(route: Route, popup: mapboxgl.Popup) {\n    this.map.map(map => {\n      const latLng: mapboxgl.LngLat = new mapboxgl.LngLat(\n        route.geometry.coordinates[0][0],\n        route.geometry.coordinates[0][1]\n      );\n\n      popup\n        .setLngLat(latLng)\n        .setHTML(ReactDOMServer.renderToString(<Popup route={route} />))\n        .addTo(map);\n    });\n  }\n\n  updateSelectedRoutePopup() {\n    if (this.props.selectedRoute.isSome()) {\n      this.showPopup(this.props.selectedRoute.value, this.popupSelectedRoute);\n    } else {\n      this.popupSelectedRoute.remove();\n    }\n  }\n\n  updateHoveredRoutePopup() {\n    const { hoveredRoute } = this.props;\n    if (\n      hoveredRoute.isSome() &&\n      hoveredRoute.value !== this.props.selectedRoute.fold(null, identity)\n    ) {\n      this.showPopup(hoveredRoute.value, this.popupHoveredRoute);\n    } else {\n      this.popupHoveredRoute.remove();\n    }\n  }\n\n  onFullscreenChange = () => {\n    if (document.fullscreenElement) {\n      this.map.map(map => map.scrollZoom.enable());\n      this.centerUserLocation();\n    } else {\n      this.map.map(map => map.scrollZoom.disable());\n    }\n  };\n\n  componentDidMount() {\n    this.initializeMap();\n    this.props.innerRef(this.map);\n\n    document.addEventListener(\"fullscreenchange\", this.onFullscreenChange);\n\n    this.positionWatch = some(\n      navigator.geolocation.watchPosition(position => {\n        localStorage.setItem(\"start_lat\", String(position.coords.latitude));\n        localStorage.setItem(\"start_lng\", String(position.coords.longitude));\n      })\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateLayers();\n    this.updateSelectedRoutePopup();\n    this.updateHoveredRoutePopup();\n\n    if (\n      this.props.selectedRoute.isSome() &&\n      (prevProps.selectedRoute.isNone() ||\n        prevProps.selectedRoute.value !== this.props.selectedRoute.value)\n    ) {\n      this.flyToRoute(this.props.selectedRoute.value);\n    }\n\n    if (this.props.navigating) {\n      this.centerUserLocation();\n    }\n\n    setTimeout(() => this.map.map(map => map.resize()), 30);\n  }\n\n  UNSAFE_componentWillMount() {\n    this.positionWatch.map(positionWatch =>\n      navigator.geolocation.clearWatch(positionWatch)\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"fullscreenchange\", this.onFullscreenChange);\n  }\n\n  render() {\n    return (\n      <View\n        grow\n        id=\"map\"\n        className={cx({ isNavigating: this.props.navigating })}\n      />\n    );\n  }\n}\n\nexport default App;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport { Route as RouteT, viewToLocation } from \"../../model\";\nimport { Option, some } from \"fp-ts/lib/Option\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { doUpdateLocation } from \"../../commands\";\nimport { declareCommands } from \"react-avenger\";\n\nimport \"./sideBar.scss\";\nimport \"@buildo/bento/components/button.scss\";\n\nconst Route = (props: {\n  route: RouteT;\n  onClick: () => void;\n  isSelected: boolean;\n  onDetailsClick: (e: React.SyntheticEvent<HTMLDivElement, Event>) => void;\n}) => (\n  <View\n    className={cx(\"route\", { \"is-selected\": props.isSelected })}\n    column\n    onClick={props.onClick}\n    shrink={false}\n  >\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"min-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (min)</label>{\" \"}\n      {Math.round(props.route.properties.minElevation)} m\n    </View>\n    <View className=\"max-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (max)</label>{\" \"}\n      {Math.round(props.route.properties.maxElevation)} m\n    </View>\n\n    <View className=\"actions\">\n      <Button size=\"tiny\" label=\"Details\" onClick={props.onDetailsClick} />\n    </View>\n  </View>\n);\n\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof commands.Props & {\n  routes: RouteT[];\n  onRouteClick: (route: RouteT) => void;\n  selectedRoute: Option<RouteT>;\n};\n\nclass SideBar extends React.PureComponent<Props> {\n  render() {\n    return (\n      <View className=\"side-bar\" column shrink={false}>\n        <View column shrink={false} className=\"navigationGpx\">\n          <h2>Navigation (GPX)</h2>\n\n          <input\n            type=\"file\"\n            accept=\".gpx\"\n            onChange={e => {\n              const file = e.target.files![0];\n\n              const reader = new FileReader();\n              reader.addEventListener(\"load\", event => {\n                (window as any).gpxFile = event.target!.result;\n\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"navigation\", routeId: some(\"gpx\") })\n                );\n              });\n              reader.readAsText(file);\n            }}\n          />\n        </View>\n\n        <View column shrink={false} className=\"routes\">\n          <h2>Routes</h2>\n          {this.props.routes.map((route, index) => (\n            <Route\n              key={index}\n              route={route}\n              onClick={() => this.props.onRouteClick(route)}\n              isSelected={\n                this.props.selectedRoute.isSome() &&\n                this.props.selectedRoute.value === route\n              }\n              onDetailsClick={e => {\n                e.stopPropagation();\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"details\", routeId: some(route.id) })\n                );\n              }}\n            />\n          ))}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default commands(SideBar);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { routes } from \"../../queries\";\nimport View from \"../View\";\nimport Map, { getRouteDistanceInPixels } from \"../Map/Map\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Route } from \"../../model\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./explorer.scss\";\n\nconst queries = declareQueries({ routes });\n\ntype Props = typeof queries.Props;\n\ntype State = {\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n};\n\nclass Explorer extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n\n  state: State = {\n    selectedRoute: none,\n    hoveredRoute: none\n  };\n\n  onRouteSelect = (route: Route) => {\n    this.setState({\n      selectedRoute:\n        this.state.selectedRoute.isSome() &&\n        this.state.selectedRoute.value === route\n          ? none\n          : some(route)\n    });\n  };\n\n  onRouteHover = (route: Option<Route>) => {\n    this.setState({\n      hoveredRoute: route\n    });\n  };\n\n  render() {\n    return this.props.routes.fold(\n      null,\n      () => null,\n      routes => {\n        const sortedRoutes: Route[] = this.map.fold(routes, map =>\n          sortBy(routes, route =>\n            getRouteDistanceInPixels(route, map.getCenter(), map)\n          )\n        );\n\n        return (\n          <View className=\"explorer\" grow>\n            <SideBar\n              routes={sortedRoutes}\n              onRouteClick={this.onRouteSelect}\n              selectedRoute={this.state.selectedRoute}\n            />\n            <Map\n              routes={routes}\n              selectedRoute={this.state.selectedRoute}\n              hoveredRoute={this.state.hoveredRoute}\n              onRouteHover={this.onRouteHover}\n              onRouteSelect={this.onRouteSelect}\n              innerRef={map => {\n                this.map = map;\n                this.forceUpdate();\n              }}\n              startPosition=\"userLocation\"\n              navigating={false}\n            />\n          </View>\n        );\n      }\n    );\n  }\n}\n\nexport default queries(Explorer);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route, routeReadme } from \"../../queries\";\nimport View from \"../View\";\nimport Map from \"../Map/Map\";\nimport * as RemarkableModule from \"remarkable\";\nimport { none, some } from \"fp-ts/lib/Option\";\nimport { Route, viewToLocation } from \"../../model\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { saveAs } from \"file-saver\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport * as geoJsonLength from \"geojson-length\";\nimport uniq from \"lodash/uniq\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./details.scss\";\n\nconst { linkify } = require(\"remarkable/linkify\");\n\ndefaults.global.animation = 0;\n\nconst togpx = require(\"togpx\");\n\nconst Remarkable = (RemarkableModule as any).Remarkable as RemarkableModule;\n\nconst saveGPX = (route: Route): void => {\n  const blob = new Blob([togpx(route)], {\n    type: \"text/plain;charset=utf-8\"\n  });\n\n  saveAs(blob, `${route.properties.name}.gpx`);\n};\n\nclass Markdown extends React.PureComponent<{\n  routeReadme: string;\n  route: Route;\n  onEnterNavigation: () => void;\n}> {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const images = Array.from(\n      document.querySelectorAll<HTMLImageElement>(\".remarkable img\")\n    );\n\n    const h1 = document.querySelector<HTMLElement>(\n      \".remarkable h1:first-of-type\"\n    );\n\n    return (\n      <View className=\"markdown\" hAlignContent=\"center\" shrink={false}>\n        <View className=\"wrapper\" grow>\n          <View grow column style={{ position: \"relative\" }}>\n            <View className=\"title\">{h1?.innerText}</View>\n            <View className=\"actions\">\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Enter Navigation\"\n                onClick={this.props.onEnterNavigation}\n              />\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Download GPX\"\n                onClick={() => saveGPX(this.props.route)}\n              />\n            </View>\n\n            <div\n              className=\"remarkable\"\n              dangerouslySetInnerHTML={{\n                __html: md.render(this.props.routeReadme)\n              }}\n            />\n\n            <View className=\"summary\">\n              <View className=\"distance\" column shrink={false}>\n                <span>{this.props.route.properties.length} km</span>\n                <label>Distance</label>\n              </View>\n              <View className=\"min-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.minElevation)} m\n                </span>\n                <label>Min elevation</label>\n              </View>\n              <View className=\"max-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.maxElevation)} m\n                </span>\n                <label>Max elevation</label>\n              </View>\n            </View>\n          </View>\n          <View className=\"images\" hAlignContent=\"right\" shrink={false}>\n            <Carousel\n              showThumbs={false}\n              showStatus={false}\n              showIndicators={images.length > 1}\n              infiniteLoop\n              autoPlay\n              interval={6000}\n            >\n              {images.map(image => (\n                <img key={image.src} src={image.src} alt={image.src} />\n              ))}\n            </Carousel>\n          </View>\n          <View className=\"mobile-images\" grow>\n            {images.slice(0, 2).map(image => (\n              <img key={image.src} src={image.src} alt={image.src} />\n            ))}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst md = new (Remarkable as any)().use(linkify);\n\nconst queries = declareQueries({ route, routeReadme });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Details extends React.Component<Props> {\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route =>\n        this.props.routeReadme.fold(\n          null,\n          () => null,\n          routeReadme => {\n            if (route.isNone() || routeReadme.isNone()) {\n              return null;\n            } else {\n              const scale = Math.round(route.value.properties.length / 10) || 1;\n\n              const round = (\n                number: number,\n                roundedInteger: number\n              ): number => {\n                const remainder = number % roundedInteger;\n                const discriminatingFactor = roundedInteger / 2;\n\n                const flooredNumber = Math.round(number - remainder);\n\n                if (remainder < discriminatingFactor) {\n                  return flooredNumber;\n                } else {\n                  return flooredNumber + roundedInteger;\n                }\n              };\n\n              const distances = route.value.geometry.coordinates.map(\n                (_, i) =>\n                  geoJsonLength({\n                    ...route.value.geometry,\n                    coordinates: route.value.geometry.coordinates.slice(\n                      0,\n                      i + 1\n                    )\n                  }) / 1000\n              );\n\n              const ticks = uniq(distances.map(d => round(d, scale)));\n\n              const elevations = route.value.geometry.coordinates.map(c =>\n                c[2] ? Math.round(c[2]) : null\n              );\n\n              return (\n                <View className=\"details\" height=\"100%\" grow column>\n                  <Markdown\n                    routeReadme={routeReadme.value}\n                    route={route.value}\n                    onEnterNavigation={() => {\n                      this.props.doUpdateLocation(\n                        viewToLocation({\n                          view: \"navigation\",\n                          routeId: some(route.value.id)\n                        })\n                      );\n                    }}\n                  />\n\n                  <View shrink={false} className=\"map-wrapper\">\n                    <Map\n                      routes={[route.value]}\n                      startPosition=\"firstRoute\"\n                      navigating={false}\n                      hoveredRoute={route} // fixed blue color that is easily visible\n                      // fake props\n                      selectedRoute={none}\n                      onRouteHover={() => {}}\n                      onRouteSelect={() => {}}\n                      innerRef={() => {}}\n                    />\n                  </View>\n                  <View className=\"elevation-profile-wrapper\" shrink={false}>\n                    <Line\n                      data={{\n                        datasets: [\n                          {\n                            label: \"Elevation\",\n                            pointRadius: 0,\n                            borderWidth: 0,\n                            yAxisID: \"y-axis\",\n                            xAxisID: \"x-axis-hidden\",\n                            data: elevations\n                          },\n                          {\n                            xAxisID: \"x-axis\",\n                            data: []\n                          }\n                        ]\n                      }}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          xAxes: [\n                            {\n                              id: \"x-axis-hidden\",\n                              type: \"category\",\n                              labels: distances.map(d => d.toFixed(1)),\n                              display: false\n                            },\n                            {\n                              id: \"x-axis\",\n                              labels: ticks,\n                              ticks: {\n                                callback: (value: number) => {\n                                  return value < route.value.properties.length\n                                    ? `${value} km`\n                                    : null;\n                                }\n                              }\n                            }\n                          ],\n                          yAxes: [\n                            {\n                              type: \"linear\",\n                              id: \"y-axis\",\n                              ticks: {\n                                precision: 0,\n                                maxRotation: 0,\n                                stepSize: 50,\n                                suggestedMin:\n                                  route.value.properties.minElevation * 0.7,\n                                suggestedMax: 300,\n                                ticks: {\n                                  callback: (value: number) => {\n                                    return `${value} m`;\n                                  }\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        tooltips: {\n                          mode: \"index\",\n                          intersect: false,\n                          callbacks: {\n                            title: (tooltipItems: any[]) => {\n                              return `Dist:  ${tooltipItems[0].label} km`;\n                            },\n                            label: () => \"\",\n                            footer: (tooltipItems: any[], data: unknown) => {\n                              return `Elev: ${tooltipItems[0].value} m`;\n                            }\n                          }\n                        }\n                      }}\n                      legend={null}\n                      height={50}\n                    />\n                  </View>\n                </View>\n              );\n            }\n          }\n        )\n    );\n  }\n}\n\nexport default commands(queries(Details));\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route } from \"../../queries\";\nimport View from \"../View\";\nimport Map from \"../Map/Map\";\nimport { none, some } from \"fp-ts/lib/Option\";\nimport NoSleep from \"nosleep.js\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./navigation.scss\";\nimport { viewToLocation } from \"../../model\";\n\nconst noSleep = new NoSleep();\n\nconst queries = declareQueries({ route });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Navigation extends React.Component<Props> {\n  componentDidMount() {\n    noSleep.enable();\n  }\n\n  componentWillUnmount() {\n    noSleep.disable();\n  }\n\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route => {\n        if (route.isNone()) {\n          return null;\n        } else {\n          return (\n            <View className=\"navigation\" height=\"100%\" grow column>\n              <View\n                className=\"exit-navigation\"\n                onClick={() => {\n                  this.props.doUpdateLocation(\n                    viewToLocation({\n                      view: \"details\",\n                      routeId: some(route.value.id)\n                    })\n                  );\n                }}\n                hAlignContent=\"center\"\n                vAlignContent=\"center\"\n              >\n                <svg width=\"29\" height=\"29\" viewBox=\"0 0 29 29\">\n                  <path\n                    fill=\"black\"\n                    d=\"M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z\"\n                  ></path>\n                </svg>\n              </View>\n\n              <View shrink={false} className=\"map-wrapper\">\n                <Map\n                  routes={[route.value]}\n                  startPosition=\"firstRoute\"\n                  navigating\n                  hoveredRoute={route} // fixed blue color that is easily visible\n                  // fake props\n                  selectedRoute={none}\n                  onRouteHover={() => {}}\n                  onRouteSelect={() => {}}\n                  innerRef={() => {}}\n                />\n              </View>\n            </View>\n          );\n        }\n      }\n    );\n  }\n}\n\nexport default commands(queries(Navigation));\n","import App from './App';\nexport default App;\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { currentView } from \"../../queries\";\nimport View from \"../View\";\nimport Explorer from \"../Explorer/Explorer\";\nimport Details from \"../Details/Details\";\nimport Navigation from \"../Navigation/Navigation\";\n\nconst queries = declareQueries({ currentView });\n\ntype Props = typeof queries.Props;\n\nclass App extends React.Component<Props> {\n  render() {\n    return this.props.currentView.fold(\n      null,\n      () => null,\n      currentView => (\n        <View className=\"app\" height=\"100%\">\n          {currentView.view === \"explorer\" && <Explorer />}\n          {currentView.view === \"details\" && <Details />}\n          {currentView.view === \"navigation\" && <Navigation />}\n        </View>\n      )\n    );\n  }\n}\n\nexport default queries(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// This script adds \"is-desktop\", \"is-phone\" or \"is-tablet\" class to the root document element\n\nimport cx from \"classnames\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nconst md = mobileDetect();\n\nconst deviceClassName = cx({\n  \"is-desktop\": md.isDesktop,\n  \"is-tablet\": md.isTablet,\n  \"is-phone\": md.isPhone,\n});\n\n// document.documentElement is not supported in every browser, fallback on document.body\nconst body = document.documentElement || document.body;\n\nbody.className = cx(body.className, deviceClassName);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./setup/addDeviceClassName\";\nimport \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}