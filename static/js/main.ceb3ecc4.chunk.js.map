{"version":3,"sources":["API/index.ts","queries/index.ts","model/index.ts","components/View/index.ts","components/View/View.ts","components/Popup/Popup.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","components/SideBar/SideBar.tsx","components/Explorer/Explorer.tsx","components/Details/Details.tsx","components/App/index.ts","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["getGeoJSONs","contents","folders","filter","c","type","length","Promise","all","map","f","fetch","url","then","r","json","flatten","files","name","includes","download_url","x","features","properties","html_url","getRoutes","res","geoJSONs","route","currentView","Query","params","dependencies","location","resolve","search","view","routeId","fromNullable","locationToView","routes","cacheStrategy","available","API","feature","coordinates","id","color","stringToColor","geoJsonLength","geometry","toFixed","elevationGain","Math","round","reduce","acc","index","prevAltitude","undefined","altitude","isSome","value","find","none","routeReadme","exec","readmeUrl","text","some","View","props","className","column","vAlignContent","height","width","viewBox","onClick","style","cursor","marginTop","fillRule","transform","fill","opacity","cx","cy","rx","ry","d","md","mobileDetect","popupSettings","closeButton","closeOnClick","offset","anchor","getRouteDistanceInPixels","lngLat","point","project","mapboxgl","lng","lat","routePoint","distance","sqrt","pow","abs","y","Infinity","App","popupSelectedRoute","popupHoveredRoute","positionWatch","onMouseMove","throttle","e","closestRoute","onRouteHover","container","center","parseFloat","localStorage","getItem","zoom","on","addLayers","addMarkers","startPosition","document","querySelector","click","flyToRoute","animate","padding","isDesktop","this","innerRef","addControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","fitBoundsOptions","maxZoom","showZoom","showCompass","selectedRoute","hoveredRoute","forEach","layer","source","data","layout","paint","getRouteColor","onRouteSelect","addLayer","element","createElement","ReactDOM","Marker","setLngLat","addTo","setPaintProperty","options","bounds","coord","extend","fitBounds","popup","latLng","setHTML","ReactDOMServer","Popup","showPopup","remove","fold","identity","initializeMap","navigator","geolocation","watchPosition","position","console","log","setItem","String","coords","latitude","longitude","prevProps","updateLayers","updateSelectedRoutePopup","updateHoveredRoutePopup","isNone","clearWatch","grow","React","Route","isSelected","shrink","size","label","onDetailsClick","commands","declareCommands","doUpdateLocation","key","onRouteClick","stopPropagation","pathname","getOrElse","viewToLocation","queries","declareQueries","state","setState","sortedRoutes","sortBy","getCenter","Map","forceUpdate","togpx","require","Remarkable","RemarkableModule","Markdown","images","querySelectorAll","h1","hAlignContent","left","clientWidth","flat","blob","Blob","saveAs","saveGPX","dangerouslySetInnerHTML","__html","render","Array","from","image","src","alt","linkify","Boolean","window","hostname","match","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ceb3ecc4.chunk.js","sourcesContent":["import { Content, GeoJSONFeatureCollection, GeoJSONFeature } from \"../model\";\nimport flatten from \"lodash/flatten\";\n\ntype FileContent = Content & { type: \"file\" };\n\nfunction getGeoJSONs(contents: Content[]): Promise<GeoJSONFeatureCollection[]> {\n  const folders = contents.filter((c) => c.type === \"dir\");\n  if (folders.length > 0) {\n    return Promise.all(\n      folders.map((f) => fetch(f.url).then((r) => r.json()) as Promise<Content>)\n    )\n      .then(flatten)\n      .then(getGeoJSONs);\n  } else {\n    const files = contents.filter(\n      (c) => c.type === \"file\" && c.name.includes(\".geojson\")\n    ) as FileContent[];\n\n    return Promise.all(\n      files.map((f) =>\n        fetch(f.download_url)\n          .then((r) => r.json() as Promise<GeoJSONFeatureCollection>)\n          .then((x) => ({\n            ...x,\n            features: [\n              {\n                ...x.features[0],\n                properties: {\n                  ...x.features[0].properties,\n                  url: f.html_url\n                }\n              }\n            ]\n          }))\n      )\n    );\n  }\n}\n\nexport const getRoutes = (): Promise<GeoJSONFeature[]> => {\n  return fetch(\"https://api.github.com/repos/BikeRoutes/Milano/contents\")\n    .then((res) => res.json())\n    .then(getGeoJSONs)\n    .then((geoJSONs) => geoJSONs.map((route) => route.features[0]));\n};\n","import { Query, location, available } from \"@buildo/bento/data\";\nimport * as API from \"../API\";\nimport { locationToView, Geometry, Route } from \"../model\";\nimport * as stringToColor from \"string-to-color\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, fromNullable, none, some } from \"fp-ts/lib/Option\";\n\nfunction getElevationGain(coordinates: Geometry[\"coordinates\"]): number {\n  return coordinates.reduce((acc, c, index) => {\n    const prevAltitude = index > 0 ? coordinates[index - 1][2] : undefined;\n    const altitude = c[2];\n\n    if (altitude && prevAltitude && altitude > prevAltitude) {\n      return acc + altitude - prevAltitude;\n    }\n\n    return acc;\n  }, 0);\n}\n\nexport { location };\n\nexport const currentView = Query({\n  params: {},\n  dependencies: { location: location },\n  fetch: ({ location }) => Promise.resolve(locationToView(location))\n});\n\nexport const routes = Query({\n  cacheStrategy: available,\n  params: {},\n  fetch: (): Promise<Route[]> =>\n    API.getRoutes().then((features) =>\n      features.map((feature) => {\n        const richFeature: Route = {\n          id: feature.properties.url,\n          ...feature,\n          properties: {\n            ...feature.properties,\n            color: stringToColor(feature.properties.name),\n            length: (geoJsonLength(feature.geometry) / 1000).toFixed(1),\n            elevationGain: Math.round(\n              getElevationGain(feature.geometry.coordinates)\n            )\n          }\n        };\n\n        return richFeature;\n      })\n    )\n});\n\nexport const route = Query({\n  params: {},\n  dependencies: { currentView, routes },\n  fetch: ({ currentView, routes }): Promise<Option<Route>> => {\n    if (currentView.view === \"details\" && currentView.routeId.isSome()) {\n      const routeId = currentView.routeId.value;\n      return Promise.resolve(\n        fromNullable(routes.find((r) => r.id === routeId))\n      );\n    }\n\n    return Promise.resolve(none);\n  }\n});\n\nexport const routeReadme = Query({\n  params: {},\n  dependencies: { route },\n  fetch: ({ route }): Promise<Option<string>> => {\n    if (route.isSome()) {\n      const res = /BikeRoutes.+master\\/(.+)\\/.+$/.exec(\n        route.value.properties.url\n      )!;\n\n      const readmeUrl = `https://raw.githubusercontent.com/BikeRoutes/BikeRoutes/master/${res[1]}/README.md`;\n\n      return fetch(readmeUrl)\n        .then((r) => r.text())\n        .then((text) => some(text));\n    }\n    return Promise.resolve(none);\n  }\n});\n","import { HistoryLocation as HistoryLocationT } from \"@buildo/bento/data\";\nimport { Option, fromNullable } from \"fp-ts/lib/Option\";\n\nexport type HistoryLocation = HistoryLocationT;\n\nexport type CurrentView =\n  | { view: \"explorer\" }\n  | { view: \"details\"; routeId: Option<string> };\n\nexport function locationToView(location: HistoryLocation): CurrentView {\n  switch (location.search.view) {\n    case \"details\":\n      return {\n        view: \"details\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    default:\n      return { view: \"explorer\" };\n  }\n}\n\nexport function viewToLocation(view: CurrentView): HistoryLocation {\n  switch (view.view) {\n    case \"details\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"details\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"explorer\":\n      return { pathname: \"/Explorer\", search: {} };\n  }\n}\n\nexport type Content = {\n  name: string;\n  type: \"dir\" | \"file\";\n  url: string;\n  download_url: string;\n  html_url: string;\n};\n\nexport type Geometry = {\n  type: \"LineString\";\n  coordinates: Array<[number, number, number?]>;\n};\n\nexport type GeoJSONFeature = {\n  type: \"Feature\";\n  properties: {\n    name: string;\n    color: string;\n    length: string;\n    elevationGain: number;\n    url: string;\n  };\n  geometry: Geometry;\n};\nexport type GeoJSONFeatureCollection = {\n  type: \"FeatureCollection\";\n  features: GeoJSONFeature[];\n};\n\nexport type Route = GeoJSONFeature & { id: string };\n","import View from './View';\nexport default View;\n","import View from '@buildo/bento/components/FlexView';\nexport default View;\n","import * as React from \"react\";\nimport View from \"../View\";\nimport { Route } from \"../../model\";\n\nimport \"./popup.scss\";\n\nexport default (props: { route: Route }) => (\n  <View className=\"popup\" column>\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n  </View>\n);\n","import * as React from \"react\";\n\nexport default (props: { onClick: () => void }) => (\n  <svg\n    height=\"41px\"\n    width=\"27px\"\n    viewBox=\"0 0 27 41\"\n    onClick={props.onClick}\n    className=\"marker\"\n    style={{ cursor: \"pointer\", marginTop: \"-100%\" }}\n  >\n    <g fillRule=\"nonzero\">\n      <g transform=\"translate(3.0, 29.0)\" fill=\"#000000\">\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"9.5\"\n          ry=\"4.77275007\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"8.5\"\n          ry=\"4.29549936\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"7.5\"\n          ry=\"3.81822308\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"6.5\"\n          ry=\"3.34094679\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"5.5\"\n          ry=\"2.86367051\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"4.5\"\n          ry=\"2.38636864\"\n        />\n      </g>\n      <g fill=\"#3FB1CE\">\n        <path d=\"M27,13.5 C27,19.074644 20.250001,27.000002 14.75,34.500002 C14.016665,35.500004 12.983335,35.500004 12.25,34.500002 C6.7499993,27.000002 0,19.222562 0,13.5 C0,6.0441559 6.0441559,0 13.5,0 C20.955844,0 27,6.0441559 27,13.5 Z\" />\n      </g>\n      <g opacity=\"0.25\" fill=\"#000000\">\n        <path d=\"M13.5,0 C6.0441559,0 0,6.0441559 0,13.5 C0,19.222562 6.7499993,27 12.25,34.5 C13,35.522727 14.016664,35.500004 14.75,34.5 C20.250001,27 27,19.074644 27,13.5 C27,6.0441559 20.955844,0 13.5,0 Z M13.5,1 C20.415404,1 26,6.584596 26,13.5 C26,15.898657 24.495584,19.181431 22.220703,22.738281 C19.945823,26.295132 16.705119,30.142167 13.943359,33.908203 C13.743445,34.180814 13.612715,34.322738 13.5,34.441406 C13.387285,34.322738 13.256555,34.180814 13.056641,33.908203 C10.284481,30.127985 7.4148684,26.314159 5.015625,22.773438 C2.6163816,19.232715 1,15.953538 1,13.5 C1,6.584596 6.584596,1 13.5,1 Z\" />\n      </g>\n      <g transform=\"translate(6.0, 7.0)\" fill=\"#FFFFFF\" />\n      <g transform=\"translate(8.0, 8.0)\">\n        <circle fill=\"#000000\" opacity=\"0.25\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n        <circle fill=\"#FFFFFF\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as ReactDOM from \"react-dom\";\nimport throttle from \"lodash/throttle\";\nimport * as mapboxgl from \"mapbox-gl\";\nimport Popup from \"../Popup/Popup\";\nimport Marker from \"../Marker/Marker\";\nimport View from \"../View\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\nimport { identity } from \"fp-ts/lib/function\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\n/* eslint-disable array-callback-return */\n\nconst md = mobileDetect();\n\nconst popupSettings: mapboxgl.PopupOptions = {\n  closeButton: false,\n  closeOnClick: false,\n  offset: [0, -40],\n  anchor: \"bottom\"\n};\n\nexport const getRouteDistanceInPixels = (\n  route: Route,\n  lngLat: mapboxgl.LngLat,\n  map: mapboxgl.Map\n): number => {\n  return route.geometry.coordinates.reduce((acc, coordinates) => {\n    const point = map.project(new mapboxgl.LngLat(lngLat.lng, lngLat.lat));\n    const routePoint = map.project(\n      new mapboxgl.LngLat(coordinates[0], coordinates[1])\n    );\n    const distance = Math.sqrt(\n      Math.pow(Math.abs(point.x - routePoint.x), 2) +\n        Math.pow(Math.abs(point.y - routePoint.y), 2)\n    );\n    return distance < acc ? distance : acc;\n  }, Infinity);\n};\n\ntype Props = {\n  routes: Route[];\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n  onRouteHover: (route: Option<Route>) => void;\n  onRouteSelect: (route: Route) => void;\n  innerRef: (map: Option<mapboxgl.Map>) => void;\n  startPosition: \"userLocation\" | \"firstRoute\";\n};\n\nclass App extends React.PureComponent<Props> {\n  map: Option<mapboxgl.Map> = none;\n  popupSelectedRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  popupHoveredRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  positionWatch: Option<number> = none;\n\n  initializeMap() {\n    (mapboxgl as any).accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm\",\n      center: {\n        lat: parseFloat(localStorage.getItem(\"start_lat\") || \"0\"),\n        lng: parseFloat(localStorage.getItem(\"start_lng\") || \"0\")\n      },\n      zoom: 11.0\n    });\n\n    map.on(\"load\", () => {\n      this.map = some(map);\n\n      this.addLayers();\n      this.addMarkers();\n\n      if (this.props.startPosition === \"userLocation\") {\n        document\n          .querySelector<HTMLButtonElement>(\".mapboxgl-ctrl-geolocate\")!\n          .click();\n      }\n\n      if (\n        this.props.startPosition === \"firstRoute\" &&\n        this.props.routes.length > 0\n      ) {\n        this.flyToRoute(this.props.routes[0], { animate: false, padding: 80 });\n      }\n    });\n\n    if (md.isDesktop) {\n      map.on(\"mousemove\", this.onMouseMove);\n    }\n\n    map.on(\"moveend\", () => this.props.innerRef(this.map));\n\n    map.addControl(new mapboxgl.FullscreenControl());\n\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true,\n        fitBoundsOptions: {\n          maxZoom: this.props.startPosition === \"firstRoute\" ? 15 : 11\n        }\n      })\n    );\n\n    map.addControl(\n      new mapboxgl.NavigationControl({\n        showZoom: md.isDesktop,\n        showCompass: !md.isDesktop\n      })\n    );\n  }\n\n  getRouteColor(route: Route): string {\n    return (this.props.selectedRoute.isSome() &&\n      route === this.props.selectedRoute.value) ||\n      (this.props.hoveredRoute.isSome() &&\n        route === this.props.hoveredRoute.value)\n      ? \"#387ddf\"\n      : route.properties.color;\n  }\n\n  addLayers() {\n    this.map.map((map) => {\n      this.props.routes.forEach((route) => {\n        const layer: mapboxgl.Layer = {\n          id: route.properties.url,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: route as any\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-width\": 3,\n            \"line-color\": this.getRouteColor(route)\n          }\n        };\n\n        map.on(\"click\", layer.id, () => {\n          this.props.onRouteSelect(route);\n        });\n\n        map.addLayer(layer);\n      });\n    });\n  }\n\n  addMarkers() {\n    this.map.map((map) => {\n      this.props.routes.forEach((route) => {\n        const coordinates = route.geometry.coordinates[0];\n\n        const element = document.createElement(\"div\");\n        ReactDOM.render(\n          <Marker onClick={() => this.props.onRouteSelect(route)} />,\n          element\n        );\n\n        const marker: mapboxgl.Marker = new mapboxgl.Marker({\n          element\n        }).setLngLat([coordinates[0], coordinates[1]]);\n\n        marker.addTo(map);\n      });\n    });\n  }\n\n  onMouseMove = throttle((e: mapboxgl.MapMouseEvent) => {\n    type ClosestRoute = {\n      distance: number;\n      route: Route;\n    };\n\n    this.map.map((map) => {\n      const closestRoute: ClosestRoute = this.props.routes.reduce(\n        (acc, route) => {\n          const distance = getRouteDistanceInPixels(route, e.lngLat, map);\n\n          return distance < acc.distance ? { distance, route } : acc;\n        },\n        { distance: Infinity } as ClosestRoute\n      );\n\n      if (closestRoute.distance < 25) {\n        this.props.onRouteHover(some(closestRoute.route));\n      } else {\n        this.props.onRouteHover(none);\n      }\n    });\n  }, 60);\n\n  updateLayers() {\n    this.map.map((map) => {\n      this.props.routes.forEach((route) => {\n        // update color\n        map.setPaintProperty(route.id, \"line-color\", this.getRouteColor(route));\n      });\n    });\n  }\n\n  flyToRoute(route: Route, options?: mapboxgl.FitBoundsOptions) {\n    this.map.map((map) => {\n      const coordinates = route.geometry.coordinates as [number, number][];\n      const bounds = coordinates\n        .map((coord) => new mapboxgl.LngLatBounds(coord, coord))\n        .reduce((bounds, coord) => {\n          return bounds.extend(coord);\n        });\n\n      map.fitBounds(bounds, { padding: 50, ...options });\n    });\n  }\n\n  showPopup(route: Route, popup: mapboxgl.Popup) {\n    this.map.map((map) => {\n      const latLng: mapboxgl.LngLat = new mapboxgl.LngLat(\n        route.geometry.coordinates[0][0],\n        route.geometry.coordinates[0][1]\n      );\n\n      popup\n        .setLngLat(latLng)\n        .setHTML(ReactDOMServer.renderToString(<Popup route={route} />))\n        .addTo(map);\n    });\n  }\n\n  updateSelectedRoutePopup() {\n    if (this.props.selectedRoute.isSome()) {\n      this.showPopup(this.props.selectedRoute.value, this.popupSelectedRoute);\n    } else {\n      this.popupSelectedRoute.remove();\n    }\n  }\n\n  updateHoveredRoutePopup() {\n    const { hoveredRoute } = this.props;\n    if (\n      hoveredRoute.isSome() &&\n      hoveredRoute.value !== this.props.selectedRoute.fold(null, identity)\n    ) {\n      this.showPopup(hoveredRoute.value, this.popupHoveredRoute);\n    } else {\n      this.popupHoveredRoute.remove();\n    }\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n    this.props.innerRef(this.map);\n\n    this.positionWatch = some(\n      navigator.geolocation.watchPosition((position) => {\n        console.log(position);\n        localStorage.setItem(\"start_lat\", String(position.coords.latitude));\n        localStorage.setItem(\"start_lng\", String(position.coords.longitude));\n      })\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateLayers();\n    this.updateSelectedRoutePopup();\n    this.updateHoveredRoutePopup();\n\n    if (\n      this.props.selectedRoute.isSome() &&\n      (prevProps.selectedRoute.isNone() ||\n        prevProps.selectedRoute.value !== this.props.selectedRoute.value)\n    ) {\n      this.flyToRoute(this.props.selectedRoute.value);\n    }\n  }\n\n  componentWillUnmount() {\n    this.positionWatch.map(navigator.geolocation.clearWatch);\n  }\n\n  render() {\n    return <View grow id=\"map\" />;\n  }\n}\n\nexport default App;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport { Route as RouteT, viewToLocation } from \"../../model\";\nimport { Option, some } from \"fp-ts/lib/Option\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { doUpdateLocation } from \"../../commands\";\nimport { declareCommands } from \"react-avenger\";\n\nimport \"./sideBar.scss\";\nimport \"@buildo/bento/components/button.scss\";\n\nconst Route = (props: {\n  route: RouteT;\n  onClick: () => void;\n  isSelected: boolean;\n  onDetailsClick: (e: React.SyntheticEvent<HTMLDivElement, Event>) => void;\n}) => (\n  <View\n    className={cx(\"route\", { \"is-selected\": props.isSelected })}\n    column\n    onClick={props.onClick}\n    shrink={false}\n  >\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n\n    <View className=\"actions\">\n      <Button size=\"tiny\" label=\"Details\" onClick={props.onDetailsClick} />\n    </View>\n  </View>\n);\n\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof commands.Props & {\n  routes: RouteT[];\n  onRouteClick: (route: RouteT) => void;\n  selectedRoute: Option<RouteT>;\n};\n\nclass SideBar extends React.Component<Props> {\n  render() {\n    return (\n      <View className=\"side-bar\" column shrink={false}>\n        <h2>Routes</h2>\n        {this.props.routes.map((route, index) => (\n          <Route\n            key={index}\n            route={route}\n            onClick={() => this.props.onRouteClick(route)}\n            isSelected={\n              this.props.selectedRoute.isSome() &&\n              this.props.selectedRoute.value === route\n            }\n            onDetailsClick={(e) => {\n              e.stopPropagation();\n              this.props.doUpdateLocation(\n                viewToLocation({ view: \"details\", routeId: some(route.id) })\n              );\n            }}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n\nexport default commands(SideBar);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { routes } from \"../../queries\";\nimport View from \"../View\";\nimport Map, { getRouteDistanceInPixels } from \"../Map/Map\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Route } from \"../../model\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./explorer.scss\";\n\nconst queries = declareQueries({ routes });\n\ntype Props = typeof queries.Props;\n\ntype State = {\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n};\n\nclass Explorer extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n\n  state: State = {\n    selectedRoute: none,\n    hoveredRoute: none\n  };\n\n  onRouteSelect = (route: Route) => {\n    this.setState({\n      selectedRoute:\n        this.state.selectedRoute.isSome() &&\n        this.state.selectedRoute.value === route\n          ? none\n          : some(route)\n    });\n  };\n\n  onRouteHover = (route: Option<Route>) => {\n    this.setState({\n      hoveredRoute: route\n    });\n  };\n\n  render() {\n    return this.props.routes.fold(\n      null,\n      () => null,\n      (routes) => {\n        const sortedRoutes: Route[] = this.map.fold(routes, (map) =>\n          sortBy(routes, (route) =>\n            getRouteDistanceInPixels(route, map.getCenter(), map)\n          )\n        );\n\n        return (\n          <View className=\"explorer\" grow>\n            <SideBar\n              routes={sortedRoutes}\n              onRouteClick={this.onRouteSelect}\n              selectedRoute={this.state.selectedRoute}\n            />\n            <Map\n              routes={routes}\n              selectedRoute={this.state.selectedRoute}\n              hoveredRoute={this.state.hoveredRoute}\n              onRouteHover={this.onRouteHover}\n              onRouteSelect={this.onRouteSelect}\n              innerRef={(map) => {\n                this.map = map;\n                this.forceUpdate();\n              }}\n              startPosition=\"userLocation\"\n            />\n          </View>\n        );\n      }\n    );\n  }\n}\n\nexport default queries(Explorer);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route, routeReadme } from \"../../queries\";\nimport View from \"../View\";\nimport Map from \"../Map/Map\";\nimport * as RemarkableModule from \"remarkable\";\nimport { none } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { saveAs } from \"file-saver\";\n\nimport \"./details.scss\";\n\nconst togpx = require(\"togpx\");\n\nconst Remarkable = (RemarkableModule as any).Remarkable as RemarkableModule;\n\nconst saveGPX = (route: Route): void => {\n  const blob = new Blob([togpx(route)], {\n    type: \"text/plain;charset=utf-8\"\n  });\n\n  saveAs(blob, `${route.properties.name}.gpx`);\n};\n\nclass Markdown extends React.PureComponent<{\n  routeReadme: string;\n  route: Route;\n}> {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const images: NodeListOf<HTMLImageElement> = document.querySelectorAll(\n      \".markdown img\"\n    );\n\n    const h1: HTMLElement | null = document.querySelector(\"h1\");\n\n    return (\n      <View className=\"markdown\" hAlignContent=\"center\" shrink={false}>\n        <View className=\"wrapper\" grow>\n          <View grow column style={{ position: \"relative\" }}>\n            <View\n              className=\"actions\"\n              style={{ left: h1 ? h1.clientWidth : undefined }}\n            >\n              <Button\n                flat\n                size=\"tiny\"\n                label=\"Download GPX\"\n                onClick={() => saveGPX(this.props.route)}\n              />\n            </View>\n\n            <div\n              className=\"remarkable\"\n              dangerouslySetInnerHTML={{\n                __html: md.render(this.props.routeReadme)\n              }}\n            />\n\n            <View className=\"summary\">\n              <View className=\"distance\" column>\n                <span>{this.props.route.properties.length} km</span>\n                <label>Distance</label>\n              </View>\n              <View className=\"elevation\" column>\n                <span>{this.props.route.properties.elevationGain} m</span>\n                <label>Elevation</label>\n              </View>\n            </View>\n          </View>\n          <View className=\"images\" hAlignContent=\"right\" shrink={false}>\n            {Array.from(images).map((image) => (\n              <img key={image.src} src={image.src} alt={image.src} />\n            ))}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst md = new (Remarkable as any)({\n  linkify: true\n});\n\nconst queries = declareQueries({ route, routeReadme });\n\ntype Props = typeof queries.Props;\n\nclass Details extends React.Component<Props> {\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      (route) =>\n        this.props.routeReadme.fold(\n          null,\n          () => null,\n          (routeReadme) => {\n            if (route.isNone() || routeReadme.isNone()) {\n              return null;\n            } else {\n              return (\n                <View className=\"details\" height=\"100%\" grow column>\n                  <Markdown\n                    routeReadme={routeReadme.value}\n                    route={route.value}\n                  />\n                  <View shrink={false} className=\"map-wrapper\">\n                    <Map\n                      routes={[route.value]}\n                      startPosition=\"firstRoute\"\n                      // fake props\n                      hoveredRoute={none}\n                      selectedRoute={none}\n                      onRouteHover={() => {}}\n                      onRouteSelect={() => {}}\n                      innerRef={() => {}}\n                    />\n                  </View>\n                </View>\n              );\n            }\n          }\n        )\n    );\n  }\n}\n\nexport default queries(Details);\n","import App from './App';\nexport default App;\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { currentView } from \"../../queries\";\nimport View from \"../View\";\nimport Explorer from \"../Explorer/Explorer\";\nimport Details from \"../Details/Details\";\n\nconst queries = declareQueries({ currentView });\n\ntype Props = typeof queries.Props;\n\nclass App extends React.Component<Props> {\n  render() {\n    return this.props.currentView.fold(\n      null,\n      () => null,\n      (currentView) => (\n        <View className=\"app\" height=\"100%\">\n          {currentView.view === \"explorer\" && <Explorer />}\n          {currentView.view === \"details\" && <Details />}\n        </View>\n      )\n    );\n  }\n}\n\nexport default queries(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}