{"version":3,"sources":["model/index.ts","stringToColor.ts","queries/index.ts","components/View/index.ts","components/View/View.ts","components/Popup/Popup.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","components/ElevationProfile.tsx","components/MapWithControls/MapWithControls.tsx","components/SideBar/SideBar.tsx","components/Explorer/Explorer.tsx","components/Details/Details.tsx","components/Navigation/Navigation.tsx","serviceWorker.ts","components/ServiceWorkerWrapper.tsx","components/App/App.tsx","components/App/index.ts","setup/addDeviceClassName.ts","index.tsx"],"names":["viewToLocation","view","pathname","search","routeId","getOrElse","isColorNice","hexColor","hex","fromNullable","exec","map","match","r","parseInt","g","b","fold","rgb","colorArray","v","Math","pow","luminance","string","stringToDarkColor","color","newString","stringToColor","toGeoJson","require","currentView","Query","params","dependencies","location","fetch","Promise","resolve","locationToView","getRichFeature","feature","coordinates","minElevation","geometry","reduce","acc","c","Number","MAX_SAFE_INTEGER","maxElevation","MIN_SAFE_INTEGER","distances","_","i","geoJsonLength","type","slice","id","properties","url","name","length","round","elevationGain","filter","index","prevAltitude","undefined","altitude","routes","cacheStrategy","available","then","res","json","JSON","parse","body","features","route","isSome","value","parser","DOMParser","localStorage","getItem","gpx","geoJSONFeature","parseFromString","f","concat","find","none","routeReadme","readmeUrl","text","some","View","props","className","column","vAlignContent","height","width","viewBox","onClick","style","cursor","marginTop","fillRule","transform","fill","opacity","cx","cy","rx","ry","d","md","mobileDetect","popupSettings","closeButton","closeOnClick","offset","anchor","getRouteDistanceInPixels","lngLat","point","project","mapboxgl","LngLat","lng","lat","routePoint","distance","sqrt","abs","x","y","Infinity","Map","popupSelectedRoute","Popup","popupHoveredRoute","positionWatch","onMouseMove","throttle","e","closestRoute","onRouteHover","hoveredRoute","accessToken","container","center","parseFloat","zoom","scrollZoom","on","addLayers","addMarkers","startPosition","flyToRoute","animate","padding","isDesktop","this","innerRef","selectedRoute","navigating","forEach","layer","source","data","layout","paint","getRouteColor","onRouteSelect","addLayer","element","document","createElement","ReactDOM","Marker","setLngLat","addTo","setPaintProperty","options","bounds","coord","LngLatBounds","extend","fitBounds","popup","latLng","setHTML","ReactDOMServer","showPopup","remove","identity","initializeMap","prevProps","updateLayers","updateSelectedRoutePopup","updateHoveredRoutePopup","isNone","setTimeout","resize","grow","React","defaults","global","animation","ElevationProfile","interval","scale","ticks","uniq","number","roundedInteger","remainder","discriminatingFactor","flooredNumber","elevations","datasetKeyProvider","dataset","datasets","label","pointRadius","borderWidth","yAxisID","xAxisID","el","activeRoutePointIndex","backgroundColor","responsive","maintainAspectRatio","scales","xAxes","labels","toFixed","display","callback","yAxes","precision","maxRotation","stepSize","suggestedMin","suggestedMax","tooltips","mode","intersect","callbacks","title","tooltipItems","footer","legend","noSleep","NoSleep","MapWithControls","compassIcon","interacting","userLocationMarker","state","position","deviceBearing","showElevationProfile","geoLocationState","getCoordinatesSubset","steps","window","innerWidth","devicePixelRatio","max","getClosestRoutePoint","navigatingRoute","userLat","userLng","CheapRuler","coords","latitude","longitude","updateInnerRef","addControl","ScaleControl","setState","onSortRoutes","rotateUserLocationDot","bearing","getElementById","htmlElement","degree","getBearing","transformRotation","updateUserLocationDotMarker","shrink","marker","centerOnUserLocation","flyTo","duration","essential","animationDurationMS","onNorthTrackingClick","onCompassTrackingClick","onDeviceOrientation","alpha","enable","navigator","geolocation","watchPosition","setItem","String","enableHighAccuracy","addEventListener","disable","clearWatch","removeEventListener","prevState","speed","pos","showScale","speedometer","hAlignContent","altimeter","altitudeControl","geoLocateControl","xmlns","ref","chain","toUndefined","Route","isSelected","size","onDetailsClick","commands","declareCommands","doUpdateLocation","accept","onChange","file","target","files","reader","FileReader","event","result","readAsText","key","onRouteClick","stopPropagation","queries","declareQueries","forceUpdate","sortedRoutes","sortBy","getCenter","linkify","togpx","Remarkable","RemarkableModule","Markdown","images","Array","from","querySelectorAll","h1","querySelector","innerText","flat","onEnterNavigation","blob","Blob","saveAs","saveGPX","dangerouslySetInnerHTML","__html","render","showThumbs","showStatus","showIndicators","infiniteLoop","autoPlay","image","src","alt","use","getRoutes","memoize","newArgs","prevArgs","isLocalhost","Boolean","hostname","register","config","URL","process","href","origin","swUrl","headers","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","useState","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","useEffect","background","marginLeft","textDecoration","ww","postMessage","prewarm","App","deviceClassName","isTablet","isPhone","documentElement","StrictMode"],"mappings":"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","file":"static/js/main.908d00d3.chunk.js","sourcesContent":["import { HistoryLocation as HistoryLocationT } from \"@buildo/bento/data\";\nimport { Option, fromNullable } from \"fp-ts/lib/Option\";\n\nexport type HistoryLocation = HistoryLocationT;\n\nexport type CurrentView =\n  | { view: \"explorer\" }\n  | { view: \"details\"; routeId: Option<string> }\n  | { view: \"navigation\"; routeId: Option<string> };\n\nexport function locationToView(location: HistoryLocation): CurrentView {\n  switch (location.search.view) {\n    case \"details\":\n      return {\n        view: \"details\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    case \"navigation\":\n      return {\n        view: \"navigation\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    default:\n      return { view: \"explorer\" };\n  }\n}\n\nexport function viewToLocation(view: CurrentView): HistoryLocation {\n  switch (view.view) {\n    case \"details\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"details\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"navigation\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"navigation\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"explorer\":\n      return { pathname: \"/Explorer\", search: {} };\n  }\n}\n\nexport type Content = {\n  name: string;\n  type: \"dir\" | \"file\";\n  url: string;\n  download_url: string;\n  html_url: string;\n};\n\ntype Latitude = number;\ntype Longitude = number;\ntype Elevation = number;\n\nexport type Geometry = {\n  type: \"LineString\";\n  coordinates: Array<[Longitude, Latitude, Elevation?]>;\n};\n\nexport type GeoJSONFeature = {\n  type: \"Feature\";\n  properties: {\n    name: string;\n    url: string;\n  };\n  geometry: Geometry;\n};\nexport type GeoJSONFeatureCollection = {\n  type: \"FeatureCollection\";\n  features: GeoJSONFeature[];\n};\n\ntype RouteProperties = {\n  name: string;\n  color: string;\n  length: number;\n  elevationGain: number;\n  minElevation: number;\n  maxElevation: number;\n  distances: number[];\n  url: string;\n};\n\nexport type Route = Omit<GeoJSONFeature, \"properties\"> & {\n  id: string;\n  properties: RouteProperties;\n};\n","import * as stringToColor from \"string-to-color\";\nimport { fromNullable } from \"fp-ts/lib/Option\";\n\nexport const hexToRgb = (hex: string) => {\n  const result = fromNullable(\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  );\n\n  return result.map(match => ({\n    r: parseInt(match[1], 16),\n    g: parseInt(match[2], 16),\n    b: parseInt(match[3], 16)\n  }));\n};\n\nexport const isColorNice = (hexColor: string): boolean => {\n  return hexToRgb(hexColor).fold(false, rgb => {\n    const { r, g, b } = rgb;\n\n    const colorArray = [r / 255, g / 255, b / 255].map(v => {\n      if (v <= 0.03928) {\n        return v / 12.92;\n      }\n\n      return Math.pow((v + 0.055) / 1.055, 2.4);\n    });\n\n    const luminance =\n      0.2126 * colorArray[0] + 0.7152 * colorArray[1] + 0.0722 * colorArray[2];\n\n    return luminance <= 0.5 && luminance >= 0.1;\n  });\n};\n\nconst stringToDarkColor = (string: string, color: string): string => {\n  const newString = `${string}$`;\n  return isColorNice(color)\n    ? color\n    : stringToDarkColor(newString, stringToColor(newString));\n};\n\nexport default (string: string): string => {\n  return stringToDarkColor(string, stringToColor(string));\n};\n","import { Query, location, available } from \"@buildo/bento/data\";\nimport {\n  locationToView,\n  Geometry,\n  Route,\n  GeoJSONFeature,\n  GeoJSONFeatureCollection\n} from \"../model\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, fromNullable, none, some } from \"fp-ts/lib/Option\";\nimport stringToColor from \"../stringToColor\";\n\nconst toGeoJson = require(\"@mapbox/togeojson\");\n\nfunction getElevationGain(coordinates: Geometry[\"coordinates\"]): number {\n  return coordinates\n    .filter(c => c[2])\n    .reduce((acc, c, index) => {\n      const prevAltitude = index > 0 ? coordinates[index - 1][2] : undefined;\n      const altitude = c[2]!;\n\n      if (prevAltitude && altitude > prevAltitude) {\n        return acc + altitude - prevAltitude;\n      }\n\n      return acc;\n    }, 0);\n}\n\nexport { location };\n\nexport const currentView = Query({\n  params: {},\n  dependencies: { location: location },\n  fetch: ({ location }) => Promise.resolve(locationToView(location))\n});\n\nconst getRichFeature = (feature: GeoJSONFeature): Route => {\n  const minElevation = feature.geometry.coordinates.reduce(\n    (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n    Number.MAX_SAFE_INTEGER\n  );\n\n  const maxElevation = feature.geometry.coordinates.reduce(\n    (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n    Number.MIN_SAFE_INTEGER\n  );\n\n  const distances = feature.geometry.coordinates.map((_, i) => {\n    return (\n      geoJsonLength({\n        type: \"LineString\",\n        coordinates: feature.geometry.coordinates.slice(0, i + 1)\n      }) / 1000\n    );\n  });\n\n  const richFeature: Route = {\n    id: feature.properties.url,\n    ...feature,\n    properties: {\n      ...feature.properties,\n      color:\n        feature.properties.url !== \"gpx\"\n          ? stringToColor(feature.properties.name)\n          : \"#38ffcc\",\n      length: Math.round(geoJsonLength(feature.geometry) / 100) / 10,\n      elevationGain: Math.round(getElevationGain(feature.geometry.coordinates)),\n      minElevation,\n      maxElevation,\n      distances\n    }\n  };\n\n  return richFeature;\n};\n\nexport const routes = Query({\n  cacheStrategy: available,\n  params: {},\n  fetch: (): Promise<Route[]> =>\n    // fetch(\"http://localhost:8081/\")\n    fetch(\"https://or52hotxz1.execute-api.us-east-1.amazonaws.com/dev/\")\n      .then(res => res.json() as Promise<{ body: string }>)\n      .then((res): GeoJSONFeature[] => JSON.parse(res.body))\n      .then(features => features.map(getRichFeature))\n});\n\nexport const route = Query({\n  params: {},\n  dependencies: { currentView, routes },\n  fetch: ({ currentView, routes }): Promise<Option<Route>> => {\n    if (\n      (currentView.view === \"details\" || currentView.view === \"navigation\") &&\n      currentView.routeId.isSome()\n    ) {\n      const routeId = currentView.routeId.value;\n\n      if (routeId === \"gpx\") {\n        const parser = new DOMParser();\n\n        return Promise.resolve(\n          fromNullable(localStorage.getItem(\"gpxFile\")).map(gpx => {\n            const featureCollection: GeoJSONFeatureCollection = toGeoJson.gpx(\n              parser.parseFromString(gpx, \"text/xml\")\n            );\n\n            const geoJSONFeature: GeoJSONFeature = featureCollection.features\n              .filter(f => f.geometry.type === \"LineString\")\n              .reduce((acc, feature) => {\n                return {\n                  ...acc,\n                  geometry: {\n                    ...acc.geometry,\n                    coordinates: acc.geometry.coordinates.concat(\n                      feature.geometry.coordinates\n                    )\n                  }\n                };\n              });\n\n            return getRichFeature({\n              ...geoJSONFeature,\n              properties: {\n                ...geoJSONFeature.properties,\n                url: \"gpx\"\n              }\n            });\n          })\n        );\n      } else {\n        return Promise.resolve(\n          fromNullable(routes.find(r => r.id === routeId))\n        );\n      }\n    }\n\n    return Promise.resolve(none);\n  }\n});\n\nexport const routeReadme = Query({\n  params: {},\n  dependencies: { route },\n  fetch: ({ route }): Promise<Option<string>> => {\n    if (route.isSome()) {\n      const res = /BikeRoutes.+master\\/(.+)\\/.+$/.exec(\n        route.value.properties.url\n      )!;\n\n      const readmeUrl = `https://raw.githubusercontent.com/BikeRoutes/BikeRoutes/master/${res[1]}/README.md`;\n\n      return fetch(readmeUrl)\n        .then(r => r.text())\n        .then(text => some(text));\n    }\n    return Promise.resolve(none);\n  }\n});\n","import View from './View';\nexport default View;\n","import View from '@buildo/bento/components/FlexView';\nexport default View;\n","import * as React from \"react\";\nimport View from \"../View\";\nimport { Route } from \"../../model\";\n\nimport \"./popup.scss\";\n\nexport default (props: { route: Route }) => (\n  <View className=\"popup\" column>\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n  </View>\n);\n","import * as React from \"react\";\n\nexport default (props: { onClick: () => void }) => (\n  <svg\n    height=\"41px\"\n    width=\"27px\"\n    viewBox=\"0 0 27 41\"\n    onClick={props.onClick}\n    className=\"marker\"\n    style={{ cursor: \"pointer\", marginTop: \"-100%\" }}\n  >\n    <g fillRule=\"nonzero\">\n      <g transform=\"translate(3.0, 29.0)\" fill=\"#000000\">\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"9.5\"\n          ry=\"4.77275007\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"8.5\"\n          ry=\"4.29549936\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"7.5\"\n          ry=\"3.81822308\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"6.5\"\n          ry=\"3.34094679\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"5.5\"\n          ry=\"2.86367051\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"4.5\"\n          ry=\"2.38636864\"\n        />\n      </g>\n      <g fill=\"#3FB1CE\">\n        <path d=\"M27,13.5 C27,19.074644 20.250001,27.000002 14.75,34.500002 C14.016665,35.500004 12.983335,35.500004 12.25,34.500002 C6.7499993,27.000002 0,19.222562 0,13.5 C0,6.0441559 6.0441559,0 13.5,0 C20.955844,0 27,6.0441559 27,13.5 Z\" />\n      </g>\n      <g opacity=\"0.25\" fill=\"#000000\">\n        <path d=\"M13.5,0 C6.0441559,0 0,6.0441559 0,13.5 C0,19.222562 6.7499993,27 12.25,34.5 C13,35.522727 14.016664,35.500004 14.75,34.5 C20.250001,27 27,19.074644 27,13.5 C27,6.0441559 20.955844,0 13.5,0 Z M13.5,1 C20.415404,1 26,6.584596 26,13.5 C26,15.898657 24.495584,19.181431 22.220703,22.738281 C19.945823,26.295132 16.705119,30.142167 13.943359,33.908203 C13.743445,34.180814 13.612715,34.322738 13.5,34.441406 C13.387285,34.322738 13.256555,34.180814 13.056641,33.908203 C10.284481,30.127985 7.4148684,26.314159 5.015625,22.773438 C2.6163816,19.232715 1,15.953538 1,13.5 C1,6.584596 6.584596,1 13.5,1 Z\" />\n      </g>\n      <g transform=\"translate(6.0, 7.0)\" fill=\"#FFFFFF\" />\n      <g transform=\"translate(8.0, 8.0)\">\n        <circle fill=\"#000000\" opacity=\"0.25\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n        <circle fill=\"#FFFFFF\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as ReactDOM from \"react-dom\";\nimport throttle from \"lodash/throttle\";\nimport mapboxgl from \"mapbox-gl\";\nimport Popup from \"../Popup/Popup\";\nimport Marker from \"../Marker/Marker\";\nimport View from \"../View\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\nimport { identity } from \"fp-ts/lib/function\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./map.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst md = mobileDetect();\n\nconst popupSettings: mapboxgl.PopupOptions = {\n  closeButton: false,\n  closeOnClick: false,\n  offset: [0, -40],\n  anchor: \"bottom\"\n};\n\nexport const getRouteDistanceInPixels = (\n  route: Route,\n  lngLat: { lng: number; lat: number },\n  map: mapboxgl.Map\n): number => {\n  return route.geometry.coordinates.reduce((acc, coordinates) => {\n    const point = map.project(new mapboxgl.LngLat(lngLat.lng, lngLat.lat));\n    const routePoint = map.project(\n      new mapboxgl.LngLat(coordinates[0], coordinates[1])\n    );\n    const distance = Math.sqrt(\n      Math.pow(Math.abs(point.x - routePoint.x), 2) +\n        Math.pow(Math.abs(point.y - routePoint.y), 2)\n    );\n    return distance < acc ? distance : acc;\n  }, Infinity);\n};\n\nexport type Props = {\n  routes: Route[];\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n  onRouteHover?: (route: Option<Route>) => void;\n  onRouteSelect?: (route: Route) => void;\n  innerRef?: (map: mapboxgl.Map) => void;\n  onSortRoutes?: () => void;\n  startPosition: \"userLocation\" | \"firstRoute\";\n  navigating: boolean;\n};\n\nclass Map extends React.PureComponent<Props> {\n  map: Option<mapboxgl.Map> = none;\n  popupSelectedRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  popupHoveredRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  positionWatch: Option<number> = none;\n\n  initializeMap() {\n    (mapboxgl as any).accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style:\n        \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n      center: {\n        lat: parseFloat(localStorage.getItem(\"start_lat\") || \"45.46\"),\n        lng: parseFloat(localStorage.getItem(\"start_lng\") || \"9.19\")\n      },\n      zoom: 11.0,\n      scrollZoom: false\n    });\n\n    map.on(\"load\", () => {\n      this.map = some(map);\n\n      this.addLayers();\n      this.addMarkers();\n\n      if (\n        this.props.startPosition === \"firstRoute\" &&\n        this.props.routes.length > 0\n      ) {\n        this.flyToRoute(this.props.routes[0], { animate: false, padding: 80 });\n      }\n    });\n\n    if (md.isDesktop) {\n      map.on(\"mousemove\", this.onMouseMove);\n    }\n\n    this.props.innerRef && this.props.innerRef(map);\n  }\n\n  getRouteColor(route: Route): string {\n    return (this.props.selectedRoute.isSome() &&\n      route === this.props.selectedRoute.value) ||\n      (this.props.hoveredRoute.isSome() &&\n        route === this.props.hoveredRoute.value) ||\n      this.props.navigating\n      ? \"#387ddf\"\n      : route.properties.color;\n  }\n\n  addLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const layer: mapboxgl.Layer = {\n          id: route.properties.url,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: route as any\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-width\": 3,\n            \"line-color\": this.getRouteColor(route)\n          }\n        };\n\n        map.on(\"click\", layer.id, () => {\n          this.props.onRouteSelect && this.props.onRouteSelect(route);\n        });\n\n        map.addLayer(layer);\n      });\n    });\n  }\n\n  addMarkers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const coordinates = route.geometry.coordinates[0];\n\n        const element = document.createElement(\"div\");\n        ReactDOM.render(\n          <Marker\n            onClick={() =>\n              this.props.onRouteSelect && this.props.onRouteSelect(route)\n            }\n          />,\n          element\n        );\n\n        const marker: mapboxgl.Marker = new mapboxgl.Marker({\n          element\n        }).setLngLat([coordinates[0], coordinates[1]]);\n\n        marker.addTo(map);\n      });\n    });\n  }\n\n  onMouseMove = throttle((e: mapboxgl.MapMouseEvent) => {\n    type ClosestRoute = {\n      distance: number;\n      route: Route;\n    };\n\n    this.map.map(map => {\n      const closestRoute: ClosestRoute = this.props.routes.reduce(\n        (acc, route) => {\n          const distance = getRouteDistanceInPixels(route, e.lngLat, map);\n\n          return distance < acc.distance ? { distance, route } : acc;\n        },\n        { distance: Infinity } as ClosestRoute\n      );\n\n      if (closestRoute.distance < 25) {\n        this.props.onRouteHover &&\n          this.props.onRouteHover(some(closestRoute.route));\n      } else {\n        this.props.hoveredRoute.map(() => {\n          this.props.onRouteHover && this.props.onRouteHover(none);\n        });\n      }\n    });\n  }, 100);\n\n  updateLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        // update color\n        map.setPaintProperty(route.id, \"line-color\", this.getRouteColor(route));\n      });\n    });\n  }\n\n  flyToRoute(route: Route, options?: mapboxgl.FitBoundsOptions) {\n    this.map.map(map => {\n      const coordinates = route.geometry.coordinates as [number, number][];\n      const bounds = coordinates\n        .map(coord => new mapboxgl.LngLatBounds(coord, coord))\n        .reduce((bounds, coord) => {\n          return bounds.extend(coord);\n        });\n\n      map.fitBounds(bounds, { padding: 50, ...options });\n    });\n  }\n\n  showPopup(route: Route, popup: mapboxgl.Popup) {\n    this.map.map(map => {\n      const latLng: mapboxgl.LngLat = new mapboxgl.LngLat(\n        route.geometry.coordinates[0][0],\n        route.geometry.coordinates[0][1]\n      );\n\n      popup\n        .setLngLat(latLng)\n        .setHTML(ReactDOMServer.renderToString(<Popup route={route} />))\n        .addTo(map);\n    });\n  }\n\n  updateSelectedRoutePopup() {\n    if (this.props.selectedRoute.isSome()) {\n      this.showPopup(this.props.selectedRoute.value, this.popupSelectedRoute);\n    } else {\n      this.popupSelectedRoute.remove();\n    }\n  }\n\n  updateHoveredRoutePopup() {\n    const { hoveredRoute } = this.props;\n    if (\n      hoveredRoute.isSome() &&\n      hoveredRoute.value !== this.props.selectedRoute.fold(null, identity)\n    ) {\n      this.showPopup(hoveredRoute.value, this.popupHoveredRoute);\n    } else {\n      this.popupHoveredRoute.remove();\n    }\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateLayers();\n    this.updateSelectedRoutePopup();\n    this.updateHoveredRoutePopup();\n\n    if (\n      this.props.selectedRoute.isSome() &&\n      (prevProps.selectedRoute.isNone() ||\n        prevProps.selectedRoute.value !== this.props.selectedRoute.value)\n    ) {\n      this.flyToRoute(this.props.selectedRoute.value);\n    }\n\n    setTimeout(() => this.map.map(map => map.resize()), 30);\n  }\n\n  render() {\n    return <View grow id=\"map\" />;\n  }\n}\n\nexport default Map;\n","import * as React from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport { Route } from \"../model\";\nimport uniq from \"lodash/uniq\";\nimport { Option, none } from \"fp-ts/lib/Option\";\n\ndefaults.global.animation = 0;\n\ntype Props = {\n  route: Route;\n  activeRoutePointIndex?: number;\n};\n\nexport default class ElevationProfile extends React.Component<Props> {\n  interval: Option<NodeJS.Timeout> = none;\n\n  render() {\n    const scale = Math.round(this.props.route.properties.length / 10) || 1;\n\n    const round = (number: number, roundedInteger: number): number => {\n      const remainder = number % roundedInteger;\n      const discriminatingFactor = roundedInteger / 2;\n\n      const flooredNumber = Math.round(number - remainder);\n\n      if (remainder < discriminatingFactor) {\n        return flooredNumber;\n      } else {\n        return flooredNumber + roundedInteger;\n      }\n    };\n\n    const distances = this.props.route.properties.distances;\n\n    const ticks = uniq(distances.map(d => round(d, scale)));\n\n    const elevations = this.props.route.geometry.coordinates.map(c =>\n      c[2] ? Math.round(c[2]) : null\n    );\n\n    return (\n      <Line\n        datasetKeyProvider={dataset => dataset.datasetKeyProvider}\n        data={{\n          datasets: [\n            {\n              label: \"Elevation\",\n              pointRadius: 0,\n              borderWidth: 0,\n              yAxisID: \"y-axis\",\n              xAxisID: \"x-axis-hidden\",\n              data: elevations,\n              datasetKeyProvider: \"elevation\"\n            },\n            {\n              xAxisID: \"x-axis\",\n              data: [],\n              datasetKeyProvider: \"ticks\"\n            },\n            {\n              yAxisID: \"y-axis\",\n              data: elevations.map((el, i) =>\n                i === this.props.activeRoutePointIndex ? el : null\n              ),\n              backgroundColor: \"#5bb3e0\",\n              datasetKeyProvider: \"userLocation\"\n            }\n          ]\n        }}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [\n              {\n                id: \"x-axis-hidden\",\n                type: \"category\",\n                labels: distances.map(d => d.toFixed(1)),\n                display: false\n              },\n              {\n                id: \"x-axis\",\n                labels: ticks,\n                ticks: {\n                  callback: (value: number) => {\n                    return value <= this.props.route.properties.length\n                      ? `${value} km`\n                      : null;\n                  }\n                }\n              }\n            ],\n            yAxes: [\n              {\n                type: \"linear\",\n                id: \"y-axis\",\n                ticks: {\n                  precision: 0,\n                  maxRotation: 0,\n                  stepSize: 50,\n                  suggestedMin: this.props.route.properties.minElevation * 0.7,\n                  suggestedMax: 300,\n                  ticks: {\n                    callback: (value: number) => {\n                      return `${value} m`;\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {\n              title: (tooltipItems: any[]) => {\n                return `Dist:  ${tooltipItems[0].label} km`;\n              },\n              label: () => \"\",\n              footer: (tooltipItems: any[], data: unknown) => {\n                return `Elev: ${tooltipItems[0].value} m`;\n              }\n            }\n          }\n        }}\n        legend={null}\n        height={50}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport Map, { Props as MapProps } from \"../Map/Map\";\nimport { none, some, Option, fromNullable } from \"fp-ts/lib/Option\";\nimport NoSleep from \"nosleep.js\";\nimport ElevationProfile from \"../ElevationProfile\";\nimport mapboxgl from \"mapbox-gl\";\nimport { Route } from \"../../model\";\nimport throttle from \"lodash/throttle\";\nimport CheapRuler from \"cheap-ruler\";\nimport { identity } from \"fp-ts/lib/function\";\n\nimport \"./mapWithControls.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst noSleep = new NoSleep();\n\ntype Props = Omit<MapProps, \"navigating\"> & {\n  noSleep: boolean;\n  geoLocateControl: boolean;\n  altimeter: boolean;\n  speedometer: boolean;\n  navigatingRoute: Option<Route>;\n  altitudeControl: boolean;\n  scale: boolean;\n};\n\ntype State = {\n  position: Option<Position>;\n  deviceBearing: Option<number>;\n  showElevationProfile: boolean;\n  geoLocationState:\n    | \"Off\"\n    | \"North\"\n    | \"NorthTracking\"\n    | \"Compass\"\n    | \"CompassTracking\";\n};\n\nclass MapWithControls extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n  positionWatch: Option<number> = none;\n\n  compassIcon: React.RefObject<SVGSVGElement> = React.createRef();\n\n  interacting: boolean = false;\n\n  userLocationMarker: Option<mapboxgl.Marker> = none;\n\n  state: State = {\n    position: none,\n    deviceBearing: none,\n    showElevationProfile: false,\n    geoLocationState: \"Off\"\n  };\n\n  componentDidMount() {\n    if (this.props.noSleep) {\n      noSleep.enable();\n    }\n\n    this.positionWatch = some(\n      navigator.geolocation.watchPosition(\n        position => {\n          localStorage.setItem(\"start_lat\", String(position.coords.latitude));\n          localStorage.setItem(\"start_lng\", String(position.coords.longitude));\n\n          this.setState({ position: some(position) });\n        },\n        () => {},\n        { enableHighAccuracy: true }\n      )\n    );\n\n    if (this.props.navigatingRoute.isSome())\n      window.addEventListener(\n        \"deviceorientationabsolute\",\n        this.onDeviceOrientation,\n        true\n      );\n\n    if (this.props.startPosition === \"userLocation\") {\n      this.setState({ geoLocationState: \"NorthTracking\" });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.noSleep) {\n      noSleep.disable();\n    }\n\n    this.positionWatch.map(positionWatch =>\n      navigator.geolocation.clearWatch(positionWatch)\n    );\n\n    window.removeEventListener(\n      \"deviceorientationabsolute\",\n      this.onDeviceOrientation,\n      true\n    );\n  }\n\n  getCoordinatesSubset = (\n    coordinates: Route[\"geometry\"][\"coordinates\"]\n  ): Route[\"geometry\"][\"coordinates\"] => {\n    const hPixels = window.innerWidth * window.devicePixelRatio;\n    const steps = hPixels / 5;\n\n    return coordinates.filter(\n      (_, i) => i % Math.max(1, Math.round(coordinates.length / steps)) === 0\n    );\n  };\n\n  getClosestRoutePoint = (\n    position: Position\n  ): Option<{ distance: number; index: number }> => {\n    return this.props.navigatingRoute.map(route => {\n      const closestRoutePoint = this.getCoordinatesSubset(\n        route.geometry.coordinates\n      ).reduce(\n        (acc, coordinates, index) => {\n          const userLat = coordinates[1];\n          const userLng = coordinates[0];\n\n          const ruler = new CheapRuler(userLat, \"meters\");\n\n          const distance = ruler.distance(\n            [userLat, userLng],\n            [position.coords.latitude, position.coords.longitude]\n          );\n\n          return distance < 200 && distance < acc.distance\n            ? { distance, index, coordinates }\n            : acc;\n        },\n        {\n          distance: Infinity,\n          index: -1\n        }\n      );\n\n      return closestRoutePoint;\n    });\n  };\n\n  updateInnerRef = (map: mapboxgl.Map) => {\n    this.props.innerRef && this.props.innerRef(map);\n\n    if (this.map.isNone()) {\n      this.map = some(map);\n\n      if (this.props.scale) {\n        map.addControl(new mapboxgl.ScaleControl());\n      }\n\n      map.on(\"touchstart\", () => {\n        this.interacting = true;\n      });\n\n      map.on(\"touchend\", () => {\n        this.interacting = false;\n      });\n\n      map.on(\"dragstart\", () => {\n        if (this.state.geoLocationState === \"NorthTracking\") {\n          this.setState({\n            geoLocationState: \"North\"\n          });\n        } else if (this.state.geoLocationState === \"CompassTracking\") {\n          this.setState({\n            geoLocationState: \"Compass\"\n          });\n        }\n      });\n\n      map.on(\"dragend\", () => {\n        this.props.onSortRoutes && this.props.onSortRoutes();\n      });\n    }\n  };\n\n  rotateUserLocationDot = () => {\n    this.map.map(map => {\n      this.state.deviceBearing.map(bearing => {\n        fromNullable(document.getElementById(\"userLocationDotWrapper\")).map(\n          htmlElement => {\n            const degree =\n              this.state.geoLocationState === \"CompassTracking\"\n                ? 0\n                : bearing - map.getBearing();\n\n            const transformRotation = `rotate(${degree}deg)`;\n\n            htmlElement.style.transform = transformRotation;\n          }\n        );\n      });\n    });\n  };\n\n  updateUserLocationDotMarker = () => {\n    this.map.map(map => {\n      this.state.position.map(position => {\n        const lngLat: mapboxgl.LngLatLike = {\n          lng: position.coords.longitude,\n          lat: position.coords.latitude\n        };\n\n        if (\n          this.state.geoLocationState !== \"Off\" &&\n          this.userLocationMarker.isNone()\n        ) {\n          // ADD MARKER\n          const element = document.createElement(\"div\");\n          element.className = \"userLocationDotMarker\";\n\n          ReactDOM.render(\n            <View column id=\"userLocationDotWrapper\">\n              <View shrink={false} className=\"triangle\"></View>\n              <View shrink={false} className=\"userLocationDot\"></View>\n            </View>,\n            element\n          );\n\n          const marker: mapboxgl.Marker = new mapboxgl.Marker({\n            element\n          }).setLngLat(lngLat);\n\n          marker.addTo(map);\n\n          this.userLocationMarker = some(marker);\n        } else if (\n          this.state.geoLocationState !== \"Off\" &&\n          this.userLocationMarker.isSome()\n        ) {\n          // UPDATE MARKER\n          this.userLocationMarker.value.setLngLat(lngLat);\n        } else if (\n          this.state.geoLocationState === \"Off\" &&\n          this.userLocationMarker.isSome()\n        ) {\n          // REMOVE MARKER\n          this.userLocationMarker.value.remove();\n          this.userLocationMarker = none;\n        }\n      });\n    });\n  };\n\n  centerOnUserLocation = (options: {\n    bearing: number;\n    animate: boolean;\n    zoom?: number;\n  }) => {\n    this.map.map(map => {\n      this.state.position.map(position => {\n        const animationDurationMS = 1000;\n\n        map.flyTo({\n          duration: animationDurationMS,\n          center: {\n            lng: position.coords.longitude,\n            lat: position.coords.latitude\n          },\n          essential: true,\n          ...options\n        });\n\n        if (options.animate) {\n          // smooth animation\n          this.interacting = true;\n          setTimeout(() => (this.interacting = false), animationDurationMS + 5);\n        }\n      });\n    });\n  };\n\n  onNorthTrackingClick = () => {\n    if (this.state.geoLocationState !== \"NorthTracking\") {\n      this.setState({ geoLocationState: \"NorthTracking\" });\n    } else if (this.state.geoLocationState === \"NorthTracking\") {\n      this.setState({ geoLocationState: \"Off\" });\n    }\n  };\n\n  onCompassTrackingClick = () => {\n    if (this.state.geoLocationState !== \"CompassTracking\") {\n      this.setState({ geoLocationState: \"CompassTracking\" });\n    } else if (this.state.geoLocationState === \"CompassTracking\") {\n      this.setState({ geoLocationState: \"Off\" });\n    }\n  };\n\n  onDeviceOrientation = throttle((e: DeviceOrientationEvent) => {\n    this.setState(\n      {\n        deviceBearing: fromNullable(e.alpha).map(alpha => -alpha) // bearing is the opposite of alpha\n      },\n      this.rotateUserLocationDot\n    );\n  }, 16);\n\n  componentDidUpdate(_: unknown, prevState: State) {\n    this.updateUserLocationDotMarker();\n\n    if (!this.interacting && this.state.geoLocationState === \"NorthTracking\") {\n      this.centerOnUserLocation({\n        bearing: 0,\n        animate: prevState.geoLocationState !== \"NorthTracking\"\n        // zoom:\n        //   prevState.geoLocationState === \"Off\" &&\n        //   this.props.navigatingRoute.isSome()\n        //     ? 15\n        //     : undefined\n      });\n    }\n\n    if (\n      !this.interacting &&\n      this.state.geoLocationState === \"CompassTracking\"\n    ) {\n      this.centerOnUserLocation({\n        bearing: this.state.deviceBearing.fold(0, identity),\n        animate: prevState.geoLocationState !== \"CompassTracking\"\n        // zoom:\n        //   prevState.geoLocationState === \"Off\" &&\n        //   this.props.navigatingRoute.isSome()\n        //     ? 15\n        //     : undefined\n      });\n    }\n  }\n\n  render() {\n    const speed = Math.round(\n      this.state.position.fold(0, pos => {\n        // speed is in m/s\n        return pos.coords.speed ? (pos.coords.speed / 1000) * 3600 : 0;\n      })\n    );\n\n    const altitude = Math.round(\n      this.state.position.fold(0, pos => pos.coords.altitude || 0)\n    );\n\n    const showElevationProfile =\n      this.state.showElevationProfile && this.props.navigatingRoute.isSome();\n\n    return (\n      <View\n        className={cx(\"mapWithControls\", {\n          showElevationProfile,\n          showScale: this.props.scale\n        })}\n        height=\"100%\"\n        grow\n        column\n      >\n        <View className=\"info-wrapper\">\n          {this.props.speedometer && (\n            <View\n              className=\"speed-wrapper control-button\"\n              column\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n            >\n              {speed}\n              <span className=\"unit\">km/h</span>\n            </View>\n          )}\n\n          {this.props.altimeter && (\n            <View\n              className=\"altitude-wrapper control-button\"\n              column\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n            >\n              {altitude}\n              <span className=\"unit\">msl</span>\n            </View>\n          )}\n        </View>\n\n        <View column className=\"controls-wrapper\">\n          {this.props.altitudeControl && (\n            <View\n              className=\"toggle-elevation control-button\"\n              onClick={() => {\n                this.setState({\n                  showElevationProfile: !this.state.showElevationProfile\n                });\n              }}\n              hAlignContent=\"center\"\n              vAlignContent=\"center\"\n            >\n              <svg width=\"29\" height=\"29\" viewBox=\"0 0 15 15\">\n                <path\n                  id=\"path5571\"\n                  d=\"M7.5,2C7.2,2,7.1,2.2,6.9,2.4&#10;&#9;l-5.8,9.5C1,12,1,12.2,1,12.3C1,12.8,1.4,13,1.7,13h11.6c0.4,0,0.7-0.2,0.7-0.7c0-0.2,0-0.2-0.1-0.4L8.2,2.4C8,2.2,7.8,2,7.5,2z&#10;&#9; M7.5,3.5L10.8,9H10L8.5,7.5L7.5,9l-1-1.5L5,9H4.1L7.5,3.5z\"\n                  fill={this.state.showElevationProfile ? \"#5bb3e0\" : \"#393939\"}\n                />\n              </svg>\n            </View>\n          )}\n        </View>\n\n        {this.props.geoLocateControl && (\n          <View className=\"tracking-controls\">\n            <View\n              className=\"geo-locate control-button\"\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n              onClick={this.onNorthTrackingClick}\n            >\n              {this.state.geoLocationState === \"North\" ? (\n                <svg width=\"29\" height=\"29\" viewBox=\"0 0 20 20\" fill=\"#5bb3e0\">\n                  <path d=\"M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z\" />\n                </svg>\n              ) : (\n                <svg\n                  width=\"29\"\n                  height=\"29\"\n                  viewBox=\"0 0 20 20\"\n                  fill={\n                    this.state.geoLocationState === \"NorthTracking\"\n                      ? \"#5bb3e0\"\n                      : \"#393939\"\n                  }\n                >\n                  <path d=\"M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z\" />\n                  <circle cx=\"10\" cy=\"10\" r=\"2\" />\n                </svg>\n              )}\n            </View>\n\n            <View\n              className=\"compass-reset control-button\"\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n              onClick={this.onCompassTrackingClick}\n            >\n              <svg\n                width=\"29\"\n                height=\"29\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"#333333\"\n                ref={this.compassIcon}\n              >\n                <path d=\"M10.5 14l4-8 4 8h-8z\" />\n                <path d=\"M10.5 16l4 8 4-8h-8z\" fill=\"#e1e1e1\" />\n              </svg>\n            </View>\n          </View>\n        )}\n\n        {showElevationProfile && this.props.navigatingRoute.isSome() && (\n          <View className=\"elevation-profile-wrapper\">\n            <ElevationProfile\n              route={this.props.navigatingRoute.value}\n              activeRoutePointIndex={\n                !this.interacting\n                  ? this.state.position\n                      .chain(position =>\n                        this.getClosestRoutePoint(position).map(\n                          activeRoutePointIndex => activeRoutePointIndex.index\n                        )\n                      )\n                      .toUndefined()\n                  : undefined\n              }\n            />\n          </View>\n        )}\n\n        <View grow>\n          <Map\n            routes={this.props.routes}\n            startPosition={this.props.startPosition}\n            navigating={this.props.navigatingRoute.isSome()}\n            innerRef={this.updateInnerRef}\n            hoveredRoute={this.props.hoveredRoute}\n            selectedRoute={this.props.selectedRoute}\n            onRouteHover={this.props.onRouteHover}\n            onRouteSelect={this.props.onRouteSelect}\n            onSortRoutes={this.props.onSortRoutes}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default MapWithControls;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport { Route as RouteT, viewToLocation } from \"../../model\";\nimport { Option, some } from \"fp-ts/lib/Option\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { doUpdateLocation } from \"../../commands\";\nimport { declareCommands } from \"react-avenger\";\n\nimport \"./sideBar.scss\";\nimport \"@buildo/bento/components/button.scss\";\n\nconst Route = (props: {\n  route: RouteT;\n  onClick: () => void;\n  isSelected: boolean;\n  onDetailsClick: (e: React.SyntheticEvent<HTMLDivElement, Event>) => void;\n}) => (\n  <View\n    className={cx(\"route\", { \"is-selected\": props.isSelected })}\n    column\n    onClick={props.onClick}\n    shrink={false}\n  >\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"min-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (min)</label>{\" \"}\n      {Math.round(props.route.properties.minElevation)} m\n    </View>\n    <View className=\"max-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (max)</label>{\" \"}\n      {Math.round(props.route.properties.maxElevation)} m\n    </View>\n\n    <View className=\"actions\">\n      <Button size=\"tiny\" label=\"Details\" onClick={props.onDetailsClick} />\n    </View>\n  </View>\n);\n\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof commands.Props & {\n  routes: RouteT[];\n  onRouteClick: (route: RouteT) => void;\n  selectedRoute: Option<RouteT>;\n};\n\nclass SideBar extends React.PureComponent<Props> {\n  render() {\n    return (\n      <View className=\"side-bar\" column shrink={false}>\n        <View column shrink={false} className=\"navigationGpx\">\n          <h2>Navigation (GPX)</h2>\n\n          <input\n            type=\"file\"\n            accept=\".gpx\"\n            onChange={e => {\n              const file = e.target.files![0];\n\n              const reader = new FileReader();\n              reader.addEventListener(\"load\", event => {\n                localStorage.setItem(\"gpxFile\", event.target!.result as any);\n\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"navigation\", routeId: some(\"gpx\") })\n                );\n              });\n              reader.readAsText(file);\n            }}\n          />\n        </View>\n\n        <View column shrink={false} className=\"routes\">\n          <h2>Routes</h2>\n          {this.props.routes.map((route, index) => (\n            <Route\n              key={index}\n              route={route}\n              onClick={() => this.props.onRouteClick(route)}\n              isSelected={\n                this.props.selectedRoute.isSome() &&\n                this.props.selectedRoute.value === route\n              }\n              onDetailsClick={e => {\n                e.stopPropagation();\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"details\", routeId: some(route.id) })\n                );\n              }}\n            />\n          ))}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default commands(SideBar);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { routes } from \"../../queries\";\nimport View from \"../View\";\nimport { getRouteDistanceInPixels } from \"../Map/Map\";\nimport MapWithControls from \"../MapWithControls/MapWithControls\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Route } from \"../../model\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./explorer.scss\";\n\nconst queries = declareQueries({ routes });\n\ntype Props = typeof queries.Props;\n\ntype State = {\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n};\n\nclass Explorer extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n\n  state: State = {\n    selectedRoute: none,\n    hoveredRoute: none\n  };\n\n  onRouteSelect = (route: Route) => {\n    this.setState({\n      selectedRoute:\n        this.state.selectedRoute.isSome() &&\n        this.state.selectedRoute.value === route\n          ? none\n          : some(route)\n    });\n  };\n\n  onRouteHover = (route: Option<Route>) => {\n    this.setState({\n      hoveredRoute: route\n    });\n  };\n\n  onSortRoutes = () => {\n    this.forceUpdate();\n  };\n\n  updateInnerRef = (map: mapboxgl.Map) => {\n    if (this.map.isNone()) {\n      this.map = some(map);\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    return this.props.routes.fold(\n      null,\n      () => null,\n      routes => {\n        const sortedRoutes: Route[] = this.map.fold(routes, map =>\n          sortBy(routes, route =>\n            getRouteDistanceInPixels(route, map.getCenter(), map)\n          )\n        );\n\n        return (\n          <View className=\"explorer\" grow>\n            <SideBar\n              routes={sortedRoutes}\n              onRouteClick={this.onRouteSelect}\n              selectedRoute={this.state.selectedRoute}\n            />\n            <MapWithControls\n              routes={routes}\n              selectedRoute={this.state.selectedRoute}\n              hoveredRoute={this.state.hoveredRoute}\n              onRouteHover={this.onRouteHover}\n              onRouteSelect={this.onRouteSelect}\n              onSortRoutes={this.onSortRoutes}\n              innerRef={this.updateInnerRef}\n              startPosition=\"userLocation\"\n              navigatingRoute={none}\n              noSleep={false}\n              altimeter={false}\n              altitudeControl={false}\n              geoLocateControl\n              speedometer={false}\n              scale={false}\n            />\n          </View>\n        );\n      }\n    );\n  }\n}\n\nexport default queries(Explorer);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route, routeReadme } from \"../../queries\";\nimport View from \"../View\";\nimport MapWithControls from \"../MapWithControls/MapWithControls\";\nimport * as RemarkableModule from \"remarkable\";\nimport { none, some } from \"fp-ts/lib/Option\";\nimport { Route, viewToLocation } from \"../../model\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { saveAs } from \"file-saver\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\nimport ElevationProfile from \"../ElevationProfile\";\nimport memoize from \"memoize-one\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./details.scss\";\n\nconst { linkify } = require(\"remarkable/linkify\");\n\nconst togpx = require(\"togpx\");\n\nconst Remarkable = (RemarkableModule as any).Remarkable as RemarkableModule;\n\nconst saveGPX = (route: Route): void => {\n  const blob = new Blob([togpx(route)], {\n    type: \"text/plain;charset=utf-8\"\n  });\n\n  saveAs(blob, `${route.properties.name}.gpx`);\n};\n\nclass Markdown extends React.PureComponent<{\n  routeReadme: string;\n  route: Route;\n  onEnterNavigation: () => void;\n}> {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const images = Array.from(\n      document.querySelectorAll<HTMLImageElement>(\".remarkable img\")\n    );\n\n    const h1 = document.querySelector<HTMLElement>(\n      \".remarkable h1:first-of-type\"\n    );\n\n    return (\n      <View className=\"markdown\" hAlignContent=\"center\" shrink={false}>\n        <View className=\"wrapper\" grow>\n          <View grow column style={{ position: \"relative\" }}>\n            <View className=\"title\">{h1?.innerText}</View>\n            <View className=\"actions\">\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Enter Navigation\"\n                onClick={this.props.onEnterNavigation}\n              />\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Download GPX\"\n                onClick={() => saveGPX(this.props.route)}\n              />\n            </View>\n\n            <div\n              className=\"remarkable\"\n              dangerouslySetInnerHTML={{\n                __html: md.render(this.props.routeReadme)\n              }}\n            />\n\n            <View className=\"summary\">\n              <View className=\"distance\" column shrink={false}>\n                <span>{this.props.route.properties.length} km</span>\n                <label>Distance</label>\n              </View>\n              <View className=\"min-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.minElevation)} m\n                </span>\n                <label>Min elevation</label>\n              </View>\n              <View className=\"max-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.maxElevation)} m\n                </span>\n                <label>Max elevation</label>\n              </View>\n            </View>\n          </View>\n          <View className=\"images\" hAlignContent=\"right\" shrink={false}>\n            <Carousel\n              showThumbs={false}\n              showStatus={false}\n              showIndicators={images.length > 1}\n              infiniteLoop\n              autoPlay\n              interval={6000}\n            >\n              {images.map(image => (\n                <img key={image.src} src={image.src} alt={image.src} />\n              ))}\n            </Carousel>\n          </View>\n          <View className=\"mobile-images\" grow>\n            {images.slice(0, 2).map(image => (\n              <img key={image.src} src={image.src} alt={image.src} />\n            ))}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst md = new (Remarkable as any)().use(linkify);\n\nconst queries = declareQueries({ route, routeReadme });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Details extends React.Component<Props> {\n  getRoutes = memoize(\n    (route: Route) => {\n      return [route];\n    },\n    (newArgs: Route[], prevArgs: Route[]): boolean =>\n      newArgs[0].id === prevArgs[0].id\n  );\n\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route =>\n        this.props.routeReadme.fold(\n          null,\n          () => null,\n          routeReadme => {\n            if (route.isNone() || routeReadme.isNone()) {\n              return null;\n            } else {\n              return (\n                <View className=\"details\" height=\"100%\" grow column>\n                  <Markdown\n                    routeReadme={routeReadme.value}\n                    route={route.value}\n                    onEnterNavigation={() => {\n                      this.props.doUpdateLocation(\n                        viewToLocation({\n                          view: \"navigation\",\n                          routeId: some(route.value.id)\n                        })\n                      );\n                    }}\n                  />\n\n                  <View shrink={false} className=\"map-wrapper\">\n                    <MapWithControls\n                      routes={this.getRoutes(route.value)}\n                      startPosition=\"firstRoute\"\n                      navigatingRoute={none}\n                      hoveredRoute={route} // fixed blue color that is easily visible\n                      selectedRoute={none}\n                      altimeter={false}\n                      altitudeControl={false}\n                      geoLocateControl\n                      noSleep={false}\n                      speedometer={false}\n                      scale={false}\n                    />\n                  </View>\n                  <View className=\"elevation-profile-wrapper\" shrink={false}>\n                    <ElevationProfile route={route.value} />\n                  </View>\n                </View>\n              );\n            }\n          }\n        )\n    );\n  }\n}\n\nexport default commands(queries(Details));\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route } from \"../../queries\";\nimport View from \"../View\";\nimport { none } from \"fp-ts/lib/Option\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\nimport memoize from \"memoize-one\";\nimport { Route } from \"../../model\";\nimport MapWithControls from \"../MapWithControls/MapWithControls\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nconst md = mobileDetect();\n\ntype x = typeof none;\n\nconst queries = declareQueries({ route });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Navigation extends React.Component<Props> {\n  getRoutes = memoize(\n    (route: Route) => {\n      return [route];\n    },\n    (newArgs: Route[], prevArgs: Route[]): boolean =>\n      newArgs[0].id === prevArgs[0].id\n  );\n\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route => {\n        if (route.isNone()) {\n          return null;\n        } else {\n          return (\n            <View className=\"navigation\" height=\"100%\" grow column>\n              <MapWithControls\n                routes={this.getRoutes(route.value)}\n                navigatingRoute={route}\n                altimeter={!md.isDesktop}\n                altitudeControl\n                noSleep\n                scale\n                speedometer={!md.isDesktop}\n                geoLocateControl\n                startPosition=\"firstRoute\"\n                hoveredRoute={none}\n                selectedRoute={none}\n              />\n            </View>\n          );\n        }\n      }\n    );\n  }\n}\n\nexport default commands(queries(Navigation));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport * as serviceWorker from \"../serviceWorker\";\nimport View from \"./View\";\nimport { none, Option, fromNullable } from \"fp-ts/lib/Option\";\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] = React.useState<\n    Option<ServiceWorker>\n  >(none);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    setShowReload(true);\n    setWaitingWorker(fromNullable(registration.waiting));\n  };\n\n  useEffect(() => {\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    console.log(\"reload page\");\n    waitingWorker.map(ww => ww.postMessage({ type: \"SKIP_WAITING\" }));\n    setShowReload(false);\n    window.location.reload(true);\n  };\n\n  return showReload ? (\n    <View\n      className=\"updateAvailable\"\n      vAlignContent=\"center\"\n      hAlignContent=\"center\"\n      style={{\n        background: \"lightgreen\",\n        height: 25,\n        color: \"black\"\n      }}\n    >\n      Update Available\n      <span\n        style={{\n          marginLeft: 60,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => reloadPage()}\n      >\n        Install\n      </span>\n      <span\n        style={{\n          marginLeft: 20,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => {\n          console.log(\"ignore\");\n          setShowReload(false);\n        }}\n      >\n        Ignore\n      </span>\n    </View>\n  ) : null;\n};\n\nexport default ServiceWorkerWrapper;\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { currentView } from \"../../queries\";\nimport View from \"../View\";\nimport Explorer from \"../Explorer/Explorer\";\nimport Details from \"../Details/Details\";\nimport Navigation from \"../Navigation/Navigation\";\nimport mapboxgl from \"mapbox-gl\";\nimport ServiceWorkerWrapper from \"../ServiceWorkerWrapper\";\n\nmapboxgl.prewarm();\n\nconst queries = declareQueries({ currentView });\n\ntype Props = typeof queries.Props;\n\nclass App extends React.Component<Props> {\n  render() {\n    return this.props.currentView.fold(\n      null,\n      () => null,\n      currentView => (\n        <View className=\"app\" height=\"100%\" column>\n          <ServiceWorkerWrapper />\n          {currentView.view === \"explorer\" && <Explorer />}\n          {currentView.view === \"details\" && <Details />}\n          {currentView.view === \"navigation\" && <Navigation />}\n        </View>\n      )\n    );\n  }\n}\n\nexport default queries(App);\n","import App from './App';\nexport default App;\n","// This script adds \"is-desktop\", \"is-phone\" or \"is-tablet\" class to the root document element\n\nimport cx from \"classnames\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nconst md = mobileDetect();\n\nconst deviceClassName = cx({\n  \"is-desktop\": md.isDesktop,\n  \"is-tablet\": md.isTablet,\n  \"is-phone\": md.isPhone\n});\n\n// document.documentElement is not supported in every browser, fallback on document.body\nconst body = document.documentElement || document.body;\n\nbody.className = cx(body.className, deviceClassName);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport \"./setup/addDeviceClassName\";\nimport \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}