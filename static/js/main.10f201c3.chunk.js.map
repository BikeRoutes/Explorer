{"version":3,"sources":["model/index.ts","stringToColor.ts","queries/index.ts","components/View/index.ts","components/View/View.ts","components/Popup/Popup.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","components/ElevationProfile.tsx","components/MapWithControls/MapWithControls.tsx","components/SideBar/SideBar.tsx","components/Explorer/Explorer.tsx","components/Details/Details.tsx","components/Navigation/Navigation.tsx","serviceWorker.ts","components/ServiceWorkerWrapper.tsx","components/App/App.tsx","components/App/index.ts","setup/addDeviceClassName.ts","index.tsx"],"names":["viewToLocation","view","pathname","search","routeId","getOrElse","isColorNice","hexColor","hex","fromNullable","exec","map","match","r","parseInt","g","b","fold","rgb","colorArray","v","Math","pow","luminance","string","stringToDarkColor","color","newString","stringToColor","toGeoJson","require","getElevationGain","coordinates","filter","c","reduce","acc","index","prevAltitude","undefined","altitude","currentView","Query","params","dependencies","location","fetch","Promise","resolve","locationToView","routes","cacheStrategy","available","then","res","json","JSON","parse","body","features","feature","minElevation","geometry","Number","MAX_SAFE_INTEGER","maxElevation","MIN_SAFE_INTEGER","id","properties","url","name","length","round","geoJsonLength","elevationGain","route","isSome","value","parser","DOMParser","localStorage","getItem","gpx","geoJSONFeature","parseFromString","f","type","concat","find","none","routeReadme","readmeUrl","text","some","View","props","className","column","vAlignContent","height","width","viewBox","onClick","style","cursor","marginTop","fillRule","transform","fill","opacity","cx","cy","rx","ry","d","md","mobileDetect","popupSettings","closeButton","closeOnClick","offset","anchor","getRouteDistanceInPixels","lngLat","point","project","mapboxgl","LngLat","lng","lat","routePoint","distance","sqrt","abs","x","y","Infinity","Map","popupSelectedRoute","Popup","popupHoveredRoute","positionWatch","geoLocateControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","fitBoundsOptions","maxZoom","navigating","centerUserLocation","document","querySelector","el","click","onMouseMove","throttle","e","closestRoute","onRouteHover","hoveredRoute","accessToken","container","center","parseFloat","zoom","scrollZoom","on","addLayers","addMarkers","startPosition","flyToRoute","animate","padding","isDesktop","this","innerRef","selectedRoute","forEach","layer","source","data","layout","paint","getRouteColor","onRouteSelect","addLayer","element","createElement","ReactDOM","Marker","setLngLat","addTo","setPaintProperty","options","bounds","coord","LngLatBounds","extend","fitBounds","popup","latLng","setHTML","ReactDOMServer","showPopup","remove","identity","initializeMap","prevProps","updateLayers","updateSelectedRoutePopup","updateHoveredRoutePopup","isNone","setTimeout","resize","grow","isNavigating","React","defaults","global","animation","ElevationProfile","interval","scale","distances","_","i","slice","ticks","uniq","number","roundedInteger","remainder","discriminatingFactor","flooredNumber","elevations","datasetKeyProvider","dataset","datasets","label","pointRadius","borderWidth","yAxisID","xAxisID","activeRoutePointIndex","backgroundColor","responsive","maintainAspectRatio","scales","xAxes","labels","toFixed","display","callback","yAxes","precision","maxRotation","stepSize","suggestedMin","suggestedMax","tooltips","mode","intersect","callbacks","title","tooltipItems","footer","legend","noSleep","NoSleep","MapWithControls","compassIcon","interacting","userLocationMarker","state","position","deviceOrientation","showElevationProfile","geoLocationState","getClosestRoutePoint","navigatingRoute","steps","window","innerWidth","devicePixelRatio","max","userLat","userLng","CheapRuler","coords","latitude","longitude","updateInnerRef","addControl","ScaleControl","setState","onSortRoutes","transformRotation","getBearing","current","getElementById","htmlElement","updateUserLocationDot","shrink","marker","centerOnUserLocation","bearing","flyTo","duration","onNorthTrackingClick","onCompassTrackingClick","onDeviceOrientation","alpha","enable","navigator","geolocation","watchPosition","setItem","String","addEventListener","disable","clearWatch","removeEventListener","speed","pos","showScale","speedometer","hAlignContent","altimeter","altitudeControl","xmlns","ref","chain","toUndefined","Route","isSelected","size","onDetailsClick","commands","declareCommands","doUpdateLocation","accept","onChange","file","target","files","reader","FileReader","event","result","readAsText","key","onRouteClick","stopPropagation","queries","declareQueries","forceUpdate","sortedRoutes","sortBy","getCenter","linkify","togpx","Remarkable","RemarkableModule","Markdown","images","Array","from","querySelectorAll","h1","innerText","flat","onEnterNavigation","blob","Blob","saveAs","saveGPX","dangerouslySetInnerHTML","__html","render","showThumbs","showStatus","showIndicators","infiniteLoop","autoPlay","image","src","alt","use","getRoutes","memoize","newArgs","prevArgs","isLocalhost","Boolean","hostname","register","config","URL","process","href","origin","swUrl","headers","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","useState","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","useEffect","background","marginLeft","textDecoration","ww","postMessage","prewarm","App","deviceClassName","isTablet","isPhone","documentElement","StrictMode"],"mappings":"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","file":"static/js/main.10f201c3.chunk.js","sourcesContent":["import { HistoryLocation as HistoryLocationT } from \"@buildo/bento/data\";\nimport { Option, fromNullable } from \"fp-ts/lib/Option\";\n\nexport type HistoryLocation = HistoryLocationT;\n\nexport type CurrentView =\n  | { view: \"explorer\" }\n  | { view: \"details\"; routeId: Option<string> }\n  | { view: \"navigation\"; routeId: Option<string> };\n\nexport function locationToView(location: HistoryLocation): CurrentView {\n  switch (location.search.view) {\n    case \"details\":\n      return {\n        view: \"details\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    case \"navigation\":\n      return {\n        view: \"navigation\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    default:\n      return { view: \"explorer\" };\n  }\n}\n\nexport function viewToLocation(view: CurrentView): HistoryLocation {\n  switch (view.view) {\n    case \"details\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"details\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"navigation\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"navigation\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"explorer\":\n      return { pathname: \"/Explorer\", search: {} };\n  }\n}\n\nexport type Content = {\n  name: string;\n  type: \"dir\" | \"file\";\n  url: string;\n  download_url: string;\n  html_url: string;\n};\n\nexport type Geometry = {\n  type: \"LineString\";\n  coordinates: Array<[number, number, number?]>;\n};\n\nexport type GeoJSONFeature = {\n  type: \"Feature\";\n  properties: {\n    name: string;\n    color: string;\n    length: number;\n    elevationGain: number;\n    minElevation: number;\n    maxElevation: number;\n    url: string;\n  };\n  geometry: Geometry;\n};\nexport type GeoJSONFeatureCollection = {\n  type: \"FeatureCollection\";\n  features: GeoJSONFeature[];\n};\n\nexport type Route = GeoJSONFeature & { id: string };\n","import * as stringToColor from \"string-to-color\";\nimport { fromNullable } from \"fp-ts/lib/Option\";\n\nexport const hexToRgb = (hex: string) => {\n  const result = fromNullable(\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  );\n\n  return result.map(match => ({\n    r: parseInt(match[1], 16),\n    g: parseInt(match[2], 16),\n    b: parseInt(match[3], 16)\n  }));\n};\n\nexport const isColorNice = (hexColor: string): boolean => {\n  return hexToRgb(hexColor).fold(false, rgb => {\n    const { r, g, b } = rgb;\n\n    const colorArray = [r / 255, g / 255, b / 255].map(v => {\n      if (v <= 0.03928) {\n        return v / 12.92;\n      }\n\n      return Math.pow((v + 0.055) / 1.055, 2.4);\n    });\n\n    const luminance =\n      0.2126 * colorArray[0] + 0.7152 * colorArray[1] + 0.0722 * colorArray[2];\n\n    return luminance <= 0.5 && luminance >= 0.1;\n  });\n};\n\nconst stringToDarkColor = (string: string, color: string): string => {\n  const newString = `${string}$`;\n  return isColorNice(color)\n    ? color\n    : stringToDarkColor(newString, stringToColor(newString));\n};\n\nexport default (string: string): string => {\n  return stringToDarkColor(string, stringToColor(string));\n};\n","import { Query, location, available } from \"@buildo/bento/data\";\nimport {\n  locationToView,\n  Geometry,\n  Route,\n  GeoJSONFeature,\n  GeoJSONFeatureCollection\n} from \"../model\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, fromNullable, none, some } from \"fp-ts/lib/Option\";\nimport stringToColor from \"../stringToColor\";\n\nconst toGeoJson = require(\"@mapbox/togeojson\");\n\nfunction getElevationGain(coordinates: Geometry[\"coordinates\"]): number {\n  return coordinates\n    .filter(c => c[2])\n    .reduce((acc, c, index) => {\n      const prevAltitude = index > 0 ? coordinates[index - 1][2] : undefined;\n      const altitude = c[2]!;\n\n      if (prevAltitude && altitude > prevAltitude) {\n        return acc + altitude - prevAltitude;\n      }\n\n      return acc;\n    }, 0);\n}\n\nexport { location };\n\nexport const currentView = Query({\n  params: {},\n  dependencies: { location: location },\n  fetch: ({ location }) => Promise.resolve(locationToView(location))\n});\n\nexport const routes = Query({\n  cacheStrategy: available,\n  params: {},\n  fetch: (): Promise<Route[]> =>\n    // fetch(\"http://localhost:8081/\")\n    fetch(\"https://or52hotxz1.execute-api.us-east-1.amazonaws.com/dev/\")\n      .then(res => res.json() as Promise<{ body: string }>)\n      .then((res): GeoJSONFeature[] => JSON.parse(res.body))\n      .then(features =>\n        features.map(feature => {\n          const minElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n            Number.MAX_SAFE_INTEGER\n          );\n\n          const maxElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n            Number.MIN_SAFE_INTEGER\n          );\n\n          const richFeature: Route = {\n            id: feature.properties.url,\n            ...feature,\n            properties: {\n              ...feature.properties,\n              color: stringToColor(feature.properties.name),\n              length: Math.round(geoJsonLength(feature.geometry) / 100) / 10,\n              elevationGain: Math.round(\n                getElevationGain(feature.geometry.coordinates)\n              ),\n              minElevation,\n              maxElevation\n            }\n          };\n\n          return richFeature;\n        })\n      )\n});\n\nexport const route = Query({\n  params: {},\n  dependencies: { currentView, routes },\n  fetch: ({ currentView, routes }): Promise<Option<Route>> => {\n    if (\n      (currentView.view === \"details\" || currentView.view === \"navigation\") &&\n      currentView.routeId.isSome()\n    ) {\n      const routeId = currentView.routeId.value;\n\n      if (routeId === \"gpx\") {\n        const parser = new DOMParser();\n\n        return Promise.resolve(\n          fromNullable(localStorage.getItem(\"gpxFile\")).map(gpx => {\n            const featureCollection: GeoJSONFeatureCollection = toGeoJson.gpx(\n              parser.parseFromString(gpx, \"text/xml\")\n            );\n\n            const geoJSONFeature: GeoJSONFeature = featureCollection.features\n              .filter(f => f.geometry.type === \"LineString\")\n              .reduce((acc, feature) => {\n                return {\n                  ...acc,\n\n                  geometry: {\n                    ...acc.geometry,\n                    coordinates: acc.geometry.coordinates.concat(\n                      feature.geometry.coordinates\n                    )\n                  }\n                };\n              });\n\n            const minElevation = geoJSONFeature.geometry.coordinates.reduce(\n              (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n              Number.MAX_SAFE_INTEGER\n            );\n\n            const maxElevation = geoJSONFeature.geometry.coordinates.reduce(\n              (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n              Number.MIN_SAFE_INTEGER\n            );\n\n            return {\n              ...geoJSONFeature,\n              properties: {\n                ...geoJSONFeature.properties,\n                color: \"#38ffcc\",\n                length:\n                  Math.round(geoJsonLength(geoJSONFeature.geometry) / 100) / 10,\n                elevationGain: Math.round(\n                  getElevationGain(geoJSONFeature.geometry.coordinates)\n                ),\n                minElevation,\n                maxElevation,\n                url: \"gpx\"\n              },\n              id: \"gpx\"\n            };\n          })\n        );\n      } else {\n        return Promise.resolve(\n          fromNullable(routes.find(r => r.id === routeId))\n        );\n      }\n    }\n\n    return Promise.resolve(none);\n  }\n});\n\nexport const routeReadme = Query({\n  params: {},\n  dependencies: { route },\n  fetch: ({ route }): Promise<Option<string>> => {\n    if (route.isSome()) {\n      const res = /BikeRoutes.+master\\/(.+)\\/.+$/.exec(\n        route.value.properties.url\n      )!;\n\n      const readmeUrl = `https://raw.githubusercontent.com/BikeRoutes/BikeRoutes/master/${res[1]}/README.md`;\n\n      return fetch(readmeUrl)\n        .then(r => r.text())\n        .then(text => some(text));\n    }\n    return Promise.resolve(none);\n  }\n});\n","import View from './View';\nexport default View;\n","import View from '@buildo/bento/components/FlexView';\nexport default View;\n","import * as React from \"react\";\nimport View from \"../View\";\nimport { Route } from \"../../model\";\n\nimport \"./popup.scss\";\n\nexport default (props: { route: Route }) => (\n  <View className=\"popup\" column>\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n  </View>\n);\n","import * as React from \"react\";\n\nexport default (props: { onClick: () => void }) => (\n  <svg\n    height=\"41px\"\n    width=\"27px\"\n    viewBox=\"0 0 27 41\"\n    onClick={props.onClick}\n    className=\"marker\"\n    style={{ cursor: \"pointer\", marginTop: \"-100%\" }}\n  >\n    <g fillRule=\"nonzero\">\n      <g transform=\"translate(3.0, 29.0)\" fill=\"#000000\">\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"9.5\"\n          ry=\"4.77275007\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"8.5\"\n          ry=\"4.29549936\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"7.5\"\n          ry=\"3.81822308\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"6.5\"\n          ry=\"3.34094679\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"5.5\"\n          ry=\"2.86367051\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"4.5\"\n          ry=\"2.38636864\"\n        />\n      </g>\n      <g fill=\"#3FB1CE\">\n        <path d=\"M27,13.5 C27,19.074644 20.250001,27.000002 14.75,34.500002 C14.016665,35.500004 12.983335,35.500004 12.25,34.500002 C6.7499993,27.000002 0,19.222562 0,13.5 C0,6.0441559 6.0441559,0 13.5,0 C20.955844,0 27,6.0441559 27,13.5 Z\" />\n      </g>\n      <g opacity=\"0.25\" fill=\"#000000\">\n        <path d=\"M13.5,0 C6.0441559,0 0,6.0441559 0,13.5 C0,19.222562 6.7499993,27 12.25,34.5 C13,35.522727 14.016664,35.500004 14.75,34.5 C20.250001,27 27,19.074644 27,13.5 C27,6.0441559 20.955844,0 13.5,0 Z M13.5,1 C20.415404,1 26,6.584596 26,13.5 C26,15.898657 24.495584,19.181431 22.220703,22.738281 C19.945823,26.295132 16.705119,30.142167 13.943359,33.908203 C13.743445,34.180814 13.612715,34.322738 13.5,34.441406 C13.387285,34.322738 13.256555,34.180814 13.056641,33.908203 C10.284481,30.127985 7.4148684,26.314159 5.015625,22.773438 C2.6163816,19.232715 1,15.953538 1,13.5 C1,6.584596 6.584596,1 13.5,1 Z\" />\n      </g>\n      <g transform=\"translate(6.0, 7.0)\" fill=\"#FFFFFF\" />\n      <g transform=\"translate(8.0, 8.0)\">\n        <circle fill=\"#000000\" opacity=\"0.25\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n        <circle fill=\"#FFFFFF\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as ReactDOM from \"react-dom\";\nimport throttle from \"lodash/throttle\";\nimport mapboxgl from \"mapbox-gl\";\nimport Popup from \"../Popup/Popup\";\nimport Marker from \"../Marker/Marker\";\nimport View from \"../View\";\nimport { Option, none, some, fromNullable } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\nimport { identity } from \"fp-ts/lib/function\";\nimport cx from \"classnames\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./map.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst md = mobileDetect();\n\nconst popupSettings: mapboxgl.PopupOptions = {\n  closeButton: false,\n  closeOnClick: false,\n  offset: [0, -40],\n  anchor: \"bottom\"\n};\n\nexport const getRouteDistanceInPixels = (\n  route: Route,\n  lngLat: { lng: number; lat: number },\n  map: mapboxgl.Map\n): number => {\n  return route.geometry.coordinates.reduce((acc, coordinates) => {\n    const point = map.project(new mapboxgl.LngLat(lngLat.lng, lngLat.lat));\n    const routePoint = map.project(\n      new mapboxgl.LngLat(coordinates[0], coordinates[1])\n    );\n    const distance = Math.sqrt(\n      Math.pow(Math.abs(point.x - routePoint.x), 2) +\n        Math.pow(Math.abs(point.y - routePoint.y), 2)\n    );\n    return distance < acc ? distance : acc;\n  }, Infinity);\n};\n\nexport type Props = {\n  routes: Route[];\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n  onRouteHover?: (route: Option<Route>) => void;\n  onRouteSelect?: (route: Route) => void;\n  innerRef?: (map: mapboxgl.Map) => void;\n  onSortRoutes?: () => void;\n  startPosition: \"userLocation\" | \"firstRoute\";\n  navigating: boolean;\n};\n\nclass Map extends React.PureComponent<Props> {\n  map: Option<mapboxgl.Map> = none;\n  popupSelectedRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  popupHoveredRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  positionWatch: Option<number> = none;\n\n  geoLocateControl: mapboxgl.GeolocateControl = new mapboxgl.GeolocateControl({\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true,\n    showUserLocation: true,\n    showAccuracyCircle: true,\n\n    fitBoundsOptions: {\n      maxZoom: this.props.navigating ? 15 : 11\n    }\n  });\n\n  centerUserLocation = () => {\n    fromNullable(\n      document.querySelector<HTMLButtonElement>(\n        \".mapboxgl-ctrl-geolocate:not(.mapboxgl-ctrl-geolocate-active)\"\n      )\n    ).map(el => el.click());\n  };\n\n  initializeMap() {\n    (mapboxgl as any).accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style:\n        \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n      center: {\n        lat: parseFloat(localStorage.getItem(\"start_lat\") || \"45.46\"),\n        lng: parseFloat(localStorage.getItem(\"start_lng\") || \"9.19\")\n      },\n      zoom: 11.0,\n      scrollZoom: false\n    });\n\n    map.on(\"load\", () => {\n      this.map = some(map);\n\n      this.addLayers();\n      this.addMarkers();\n\n      if (this.props.startPosition === \"userLocation\") {\n        this.centerUserLocation();\n      }\n\n      if (\n        this.props.startPosition === \"firstRoute\" &&\n        this.props.routes.length > 0\n      ) {\n        this.flyToRoute(this.props.routes[0], { animate: false, padding: 80 });\n      }\n    });\n\n    if (md.isDesktop) {\n      map.on(\"mousemove\", this.onMouseMove);\n    }\n\n    this.props.innerRef && this.props.innerRef(map);\n  }\n\n  getRouteColor(route: Route): string {\n    return (this.props.selectedRoute.isSome() &&\n      route === this.props.selectedRoute.value) ||\n      (this.props.hoveredRoute.isSome() &&\n        route === this.props.hoveredRoute.value) ||\n      this.props.navigating\n      ? \"#387ddf\"\n      : route.properties.color;\n  }\n\n  addLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const layer: mapboxgl.Layer = {\n          id: route.properties.url,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: route as any\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-width\": 3,\n            \"line-color\": this.getRouteColor(route)\n          }\n        };\n\n        map.on(\"click\", layer.id, () => {\n          this.props.onRouteSelect && this.props.onRouteSelect(route);\n        });\n\n        map.addLayer(layer);\n      });\n    });\n  }\n\n  addMarkers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const coordinates = route.geometry.coordinates[0];\n\n        const element = document.createElement(\"div\");\n        ReactDOM.render(\n          <Marker\n            onClick={() =>\n              this.props.onRouteSelect && this.props.onRouteSelect(route)\n            }\n          />,\n          element\n        );\n\n        const marker: mapboxgl.Marker = new mapboxgl.Marker({\n          element\n        }).setLngLat([coordinates[0], coordinates[1]]);\n\n        marker.addTo(map);\n      });\n    });\n  }\n\n  onMouseMove = throttle((e: mapboxgl.MapMouseEvent) => {\n    type ClosestRoute = {\n      distance: number;\n      route: Route;\n    };\n\n    this.map.map(map => {\n      const closestRoute: ClosestRoute = this.props.routes.reduce(\n        (acc, route) => {\n          const distance = getRouteDistanceInPixels(route, e.lngLat, map);\n\n          return distance < acc.distance ? { distance, route } : acc;\n        },\n        { distance: Infinity } as ClosestRoute\n      );\n\n      if (closestRoute.distance < 25) {\n        this.props.onRouteHover &&\n          this.props.onRouteHover(some(closestRoute.route));\n      } else {\n        this.props.hoveredRoute.map(() => {\n          this.props.onRouteHover && this.props.onRouteHover(none);\n        });\n      }\n    });\n  }, 100);\n\n  updateLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        // update color\n        map.setPaintProperty(route.id, \"line-color\", this.getRouteColor(route));\n      });\n    });\n  }\n\n  flyToRoute(route: Route, options?: mapboxgl.FitBoundsOptions) {\n    this.map.map(map => {\n      const coordinates = route.geometry.coordinates as [number, number][];\n      const bounds = coordinates\n        .map(coord => new mapboxgl.LngLatBounds(coord, coord))\n        .reduce((bounds, coord) => {\n          return bounds.extend(coord);\n        });\n\n      map.fitBounds(bounds, { padding: 50, ...options });\n    });\n  }\n\n  showPopup(route: Route, popup: mapboxgl.Popup) {\n    this.map.map(map => {\n      const latLng: mapboxgl.LngLat = new mapboxgl.LngLat(\n        route.geometry.coordinates[0][0],\n        route.geometry.coordinates[0][1]\n      );\n\n      popup\n        .setLngLat(latLng)\n        .setHTML(ReactDOMServer.renderToString(<Popup route={route} />))\n        .addTo(map);\n    });\n  }\n\n  updateSelectedRoutePopup() {\n    if (this.props.selectedRoute.isSome()) {\n      this.showPopup(this.props.selectedRoute.value, this.popupSelectedRoute);\n    } else {\n      this.popupSelectedRoute.remove();\n    }\n  }\n\n  updateHoveredRoutePopup() {\n    const { hoveredRoute } = this.props;\n    if (\n      hoveredRoute.isSome() &&\n      hoveredRoute.value !== this.props.selectedRoute.fold(null, identity)\n    ) {\n      this.showPopup(hoveredRoute.value, this.popupHoveredRoute);\n    } else {\n      this.popupHoveredRoute.remove();\n    }\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateLayers();\n    this.updateSelectedRoutePopup();\n    this.updateHoveredRoutePopup();\n\n    if (\n      this.props.selectedRoute.isSome() &&\n      (prevProps.selectedRoute.isNone() ||\n        prevProps.selectedRoute.value !== this.props.selectedRoute.value)\n    ) {\n      this.flyToRoute(this.props.selectedRoute.value);\n    }\n\n    setTimeout(() => this.map.map(map => map.resize()), 30);\n  }\n\n  render() {\n    return (\n      <View\n        grow\n        id=\"map\"\n        className={cx({ isNavigating: this.props.navigating })}\n      />\n    );\n  }\n}\n\nexport default Map;\n","import * as React from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport { Route } from \"../model\";\nimport uniq from \"lodash/uniq\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, none } from \"fp-ts/lib/Option\";\n\ndefaults.global.animation = 0;\n\ntype Props = {\n  route: Route;\n  activeRoutePointIndex?: number;\n};\n\nexport default class ElevationProfile extends React.Component<Props> {\n  interval: Option<NodeJS.Timeout> = none;\n\n  render() {\n    const scale = Math.round(this.props.route.properties.length / 10) || 1;\n\n    const round = (number: number, roundedInteger: number): number => {\n      const remainder = number % roundedInteger;\n      const discriminatingFactor = roundedInteger / 2;\n\n      const flooredNumber = Math.round(number - remainder);\n\n      if (remainder < discriminatingFactor) {\n        return flooredNumber;\n      } else {\n        return flooredNumber + roundedInteger;\n      }\n    };\n\n    const distances = this.props.route.geometry.coordinates.map(\n      (_, i) =>\n        geoJsonLength({\n          ...this.props.route.geometry,\n          coordinates: this.props.route.geometry.coordinates.slice(0, i + 1)\n        }) / 1000\n    );\n\n    const ticks = uniq(distances.map(d => round(d, scale)));\n\n    const elevations = this.props.route.geometry.coordinates.map(c =>\n      c[2] ? Math.round(c[2]) : null\n    );\n\n    return (\n      <Line\n        datasetKeyProvider={dataset => dataset.datasetKeyProvider}\n        data={{\n          datasets: [\n            {\n              label: \"Elevation\",\n              pointRadius: 0,\n              borderWidth: 0,\n              yAxisID: \"y-axis\",\n              xAxisID: \"x-axis-hidden\",\n              data: elevations,\n              datasetKeyProvider: \"elevation\"\n            },\n            {\n              xAxisID: \"x-axis\",\n              data: [],\n              datasetKeyProvider: \"ticks\"\n            },\n            {\n              yAxisID: \"y-axis\",\n              data: elevations.map((el, i) =>\n                i === this.props.activeRoutePointIndex ? el : null\n              ),\n              backgroundColor: \"#5bb3e0\",\n              datasetKeyProvider: \"userLocation\"\n            }\n          ]\n        }}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [\n              {\n                id: \"x-axis-hidden\",\n                type: \"category\",\n                labels: distances.map(d => d.toFixed(1)),\n                display: false\n              },\n              {\n                id: \"x-axis\",\n                labels: ticks,\n                ticks: {\n                  callback: (value: number) => {\n                    return value < this.props.route.properties.length\n                      ? `${value} km`\n                      : null;\n                  }\n                }\n              }\n            ],\n            yAxes: [\n              {\n                type: \"linear\",\n                id: \"y-axis\",\n                ticks: {\n                  precision: 0,\n                  maxRotation: 0,\n                  stepSize: 50,\n                  suggestedMin: this.props.route.properties.minElevation * 0.7,\n                  suggestedMax: 300,\n                  ticks: {\n                    callback: (value: number) => {\n                      return `${value} m`;\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {\n              title: (tooltipItems: any[]) => {\n                return `Dist:  ${tooltipItems[0].label} km`;\n              },\n              label: () => \"\",\n              footer: (tooltipItems: any[], data: unknown) => {\n                return `Elev: ${tooltipItems[0].value} m`;\n              }\n            }\n          }\n        }}\n        legend={null}\n        height={50}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport Map, { Props as MapProps } from \"../Map/Map\";\nimport { none, some, Option, fromNullable } from \"fp-ts/lib/Option\";\nimport NoSleep from \"nosleep.js\";\nimport ElevationProfile from \"../ElevationProfile\";\nimport mapboxgl from \"mapbox-gl\";\nimport { Route } from \"../../model\";\nimport throttle from \"lodash/throttle\";\nimport CheapRuler from \"cheap-ruler\";\n\nimport \"./mapWithControls.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst noSleep = new NoSleep();\n\ntype Props = Omit<MapProps, \"navigating\"> & {\n  noSleep: boolean;\n  geoLocateControl: boolean;\n  altimeter: boolean;\n  speedometer: boolean;\n  navigatingRoute: Option<Route>;\n  altitudeControl: boolean;\n  scale: boolean;\n};\n\ntype State = {\n  position: Option<Position>;\n  deviceOrientation: Option<number>;\n  showElevationProfile: boolean;\n  geoLocationState:\n    | \"Off\"\n    | \"North\"\n    | \"NorthTracking\"\n    | \"Compass\"\n    | \"CompassTracking\";\n};\n\nclass MapWithControls extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n  positionWatch: Option<number> = none;\n\n  compassIcon: React.RefObject<SVGSVGElement> = React.createRef();\n\n  interacting: boolean = false;\n\n  userLocationMarker: Option<mapboxgl.Marker> = none;\n\n  state: State = {\n    position: none,\n    deviceOrientation: none,\n    showElevationProfile: false,\n    geoLocationState: \"Off\"\n  };\n\n  componentDidMount() {\n    if (this.props.noSleep) {\n      noSleep.enable();\n    }\n\n    this.positionWatch = some(\n      navigator.geolocation.watchPosition(position => {\n        localStorage.setItem(\"start_lat\", String(position.coords.latitude));\n        localStorage.setItem(\"start_lng\", String(position.coords.longitude));\n\n        this.setState(\n          {\n            position: some(position)\n          },\n          this.updateUserLocationDot\n        );\n      })\n    );\n\n    if (this.props.navigatingRoute.isSome())\n      window.addEventListener(\n        \"deviceorientation\",\n        this.onDeviceOrientation,\n        true\n      );\n  }\n\n  componentWillUnmount() {\n    noSleep.disable();\n\n    this.positionWatch.map(positionWatch =>\n      navigator.geolocation.clearWatch(positionWatch)\n    );\n\n    window.removeEventListener(\n      \"deviceorientation\",\n      this.onDeviceOrientation,\n      true\n    );\n  }\n\n  getClosestRoutePoint = (\n    position: Position\n  ): Option<{ distance: number; index: number }> => {\n    return this.props.navigatingRoute.map(route => {\n      const hPixels = window.innerWidth * window.devicePixelRatio;\n      const steps = hPixels / 5;\n\n      const closestRoutePoint = route.geometry.coordinates\n        .filter(\n          (_, i) =>\n            i %\n              Math.max(\n                1,\n                Math.round(route.geometry.coordinates.length / steps)\n              ) ===\n            0\n        )\n        .reduce(\n          (acc, coordinates, index) => {\n            const userLat = coordinates[1];\n            const userLng = coordinates[0];\n\n            const ruler = new CheapRuler(userLat, \"meters\");\n\n            const distance = ruler.distance(\n              [userLat, userLng],\n              [position.coords.latitude, position.coords.longitude]\n            );\n\n            return distance < 200 && distance < acc.distance\n              ? { distance, index, coordinates }\n              : acc;\n          },\n          {\n            distance: Infinity,\n            index: -1\n          }\n        );\n\n      return closestRoutePoint;\n    });\n  };\n\n  updateInnerRef = (map: mapboxgl.Map) => {\n    this.props.innerRef && this.props.innerRef(map);\n\n    if (this.map.isNone()) {\n      this.map = some(map);\n\n      if (this.props.scale) {\n        map.addControl(new mapboxgl.ScaleControl());\n      }\n\n      map.on(\"touchstart\", () => {\n        this.interacting = true;\n      });\n\n      map.on(\"touchend\", () => {\n        this.interacting = false;\n      });\n\n      map.on(\"dragstart\", () => {\n        if (this.state.geoLocationState === \"NorthTracking\") {\n          this.setState({\n            geoLocationState: \"North\"\n          });\n        } else if (this.state.geoLocationState === \"CompassTracking\") {\n          this.setState({\n            geoLocationState: \"Compass\"\n          });\n        }\n      });\n\n      map.on(\"dragend\", () => {\n        this.props.onSortRoutes && this.props.onSortRoutes();\n      });\n\n      map.on(\"rotate\", () => {\n        const transformRotation = this.map.fold(\n          \"rotate(0deg)\",\n          map => `rotate(-${map.getBearing()}deg)`\n        );\n\n        if (this.compassIcon.current) {\n          this.compassIcon.current.style.transform = transformRotation;\n        }\n\n        fromNullable(document.getElementById(\"userLocationDotWrapper\")).map(\n          htmlElement => {\n            htmlElement.style.transform = transformRotation;\n          }\n        );\n      });\n    }\n  };\n\n  updateUserLocationDot = () => {\n    this.map.map(map => {\n      this.state.position.map(position => {\n        const lngLat: mapboxgl.LngLatLike = {\n          lng: position.coords.longitude,\n          lat: position.coords.latitude\n        };\n\n        if (\n          this.state.geoLocationState !== \"Off\" &&\n          this.userLocationMarker.isNone()\n        ) {\n          // ADD MARKER\n          const element = document.createElement(\"div\");\n          element.className = \"userLocationDotMarker\";\n\n          ReactDOM.render(\n            <View column id=\"userLocationDotWrapper\">\n              <View shrink={false} className=\"triangle\"></View>\n              <View shrink={false} className=\"userLocationDot\"></View>\n            </View>,\n            element\n          );\n\n          const marker: mapboxgl.Marker = new mapboxgl.Marker({\n            element\n          }).setLngLat(lngLat);\n\n          marker.addTo(map);\n\n          this.userLocationMarker = some(marker);\n        } else if (\n          this.state.geoLocationState !== \"Off\" &&\n          this.userLocationMarker.isSome()\n        ) {\n          // UPDATE MARKER\n          this.userLocationMarker.value.setLngLat(lngLat);\n        } else if (\n          this.state.geoLocationState === \"Off\" &&\n          this.userLocationMarker.isSome()\n        ) {\n          // REMOVE MARKER\n          this.userLocationMarker.value.remove();\n          this.userLocationMarker = none;\n        }\n      });\n    });\n  };\n\n  centerOnUserLocation = (bearing: number) => {\n    this.map.map(map => {\n      this.state.position.map(position => {\n        const animationDurationMS = 1000;\n\n        map.flyTo({\n          duration: animationDurationMS,\n          animate: true,\n          center: {\n            lng: position.coords.longitude,\n            lat: position.coords.latitude\n          },\n          bearing\n        });\n\n        // smooth animation\n        this.interacting = true;\n        setTimeout(() => (this.interacting = false), animationDurationMS);\n      });\n    });\n  };\n\n  onNorthTrackingClick = () => {\n    if (this.state.geoLocationState !== \"NorthTracking\") {\n      this.setState({ geoLocationState: \"NorthTracking\" });\n    } else if (this.state.geoLocationState === \"NorthTracking\") {\n      this.setState({ geoLocationState: \"Off\" });\n    }\n  };\n\n  onCompassTrackingClick = () => {\n    if (this.state.geoLocationState !== \"CompassTracking\") {\n      this.setState({ geoLocationState: \"CompassTracking\" });\n    } else if (this.state.geoLocationState === \"CompassTracking\") {\n      this.setState({ geoLocationState: \"Off\" });\n    }\n  };\n\n  onDeviceOrientation = throttle((e: DeviceOrientationEvent) => {\n    this.setState({\n      deviceOrientation: fromNullable(e.alpha)\n    });\n  }, 30);\n\n  componentDidUpdate() {\n    this.updateUserLocationDot();\n\n    if (!this.interacting && this.state.geoLocationState === \"NorthTracking\") {\n      this.centerOnUserLocation(0);\n    }\n\n    if (\n      !this.interacting &&\n      this.state.geoLocationState === \"CompassTracking\" &&\n      this.state.deviceOrientation.isSome()\n    ) {\n      this.centerOnUserLocation(this.state.deviceOrientation.value);\n    }\n  }\n\n  render() {\n    const speed = Math.round(\n      this.state.position.fold(0, pos => {\n        // speed is in m/s\n        return pos.coords.speed ? (pos.coords.speed / 1000) * 3600 : 0;\n      })\n    );\n\n    const altitude = Math.round(\n      this.state.position.fold(0, pos => pos.coords.altitude || 0)\n    );\n\n    const showElevationProfile =\n      this.state.showElevationProfile && this.props.navigatingRoute.isSome();\n\n    return (\n      <View\n        className={cx(\"mapWithControls\", {\n          showElevationProfile,\n          showScale: this.props.scale\n        })}\n        height=\"100%\"\n        grow\n        column\n      >\n        <View className=\"info-wrapper\">\n          {this.props.speedometer && (\n            <View\n              className=\"speed-wrapper control-button\"\n              column\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n            >\n              {speed}\n              <span className=\"unit\">km/h</span>\n            </View>\n          )}\n\n          {this.props.altimeter && (\n            <View\n              className=\"altitude-wrapper control-button\"\n              column\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n            >\n              {altitude}\n              <span className=\"unit\">msl</span>\n            </View>\n          )}\n        </View>\n\n        <View column className=\"controls-wrapper\">\n          {this.props.altitudeControl && (\n            <View\n              className=\"toggle-elevation control-button\"\n              onClick={() => {\n                this.setState({\n                  showElevationProfile: !this.state.showElevationProfile\n                });\n              }}\n              hAlignContent=\"center\"\n              vAlignContent=\"center\"\n            >\n              <svg width=\"29\" height=\"29\" viewBox=\"0 0 15 15\">\n                <path\n                  id=\"path5571\"\n                  d=\"M7.5,2C7.2,2,7.1,2.2,6.9,2.4&#10;&#9;l-5.8,9.5C1,12,1,12.2,1,12.3C1,12.8,1.4,13,1.7,13h11.6c0.4,0,0.7-0.2,0.7-0.7c0-0.2,0-0.2-0.1-0.4L8.2,2.4C8,2.2,7.8,2,7.5,2z&#10;&#9; M7.5,3.5L10.8,9H10L8.5,7.5L7.5,9l-1-1.5L5,9H4.1L7.5,3.5z\"\n                  fill={this.state.showElevationProfile ? \"#5bb3e0\" : \"#393939\"}\n                />\n              </svg>\n            </View>\n          )}\n        </View>\n\n        {this.props.geoLocateControl && (\n          <View className=\"tracking-controls\">\n            <View\n              className=\"geo-locate control-button\"\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n              onClick={this.onNorthTrackingClick}\n            >\n              {this.state.geoLocationState === \"North\" ? (\n                <svg width=\"29\" height=\"29\" viewBox=\"0 0 20 20\" fill=\"#5bb3e0\">\n                  <path d=\"M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z\" />\n                </svg>\n              ) : (\n                <svg\n                  width=\"29\"\n                  height=\"29\"\n                  viewBox=\"0 0 20 20\"\n                  fill={\n                    this.state.geoLocationState === \"NorthTracking\"\n                      ? \"#5bb3e0\"\n                      : \"#393939\"\n                  }\n                >\n                  <path d=\"M10 4C9 4 9 5 9 5v.1A5 5 0 005.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 009 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 003.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0011 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 110 7 3.5 3.5 0 110-7z\" />\n                  <circle cx=\"10\" cy=\"10\" r=\"2\" />\n                </svg>\n              )}\n            </View>\n\n            <View\n              className=\"compass-reset control-button\"\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n              onClick={this.onCompassTrackingClick}\n            >\n              <svg\n                width=\"29\"\n                height=\"29\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"#333333\"\n                ref={this.compassIcon}\n              >\n                <path d=\"M10.5 14l4-8 4 8h-8z\" />\n                <path d=\"M10.5 16l4 8 4-8h-8z\" fill=\"#e1e1e1\" />\n              </svg>\n            </View>\n          </View>\n        )}\n\n        {showElevationProfile && this.props.navigatingRoute.isSome() && (\n          <View className=\"elevation-profile-wrapper\">\n            <ElevationProfile\n              route={this.props.navigatingRoute.value}\n              activeRoutePointIndex={this.state.position\n                .chain(position =>\n                  this.getClosestRoutePoint(position).map(\n                    activeRoutePointIndex => activeRoutePointIndex.index\n                  )\n                )\n                .toUndefined()}\n            />\n          </View>\n        )}\n\n        <View grow>\n          <Map\n            routes={this.props.routes}\n            startPosition={this.props.startPosition}\n            navigating={this.props.navigatingRoute.isSome()}\n            innerRef={this.updateInnerRef}\n            hoveredRoute={this.props.hoveredRoute}\n            selectedRoute={this.props.selectedRoute}\n            onRouteHover={this.props.onRouteHover}\n            onRouteSelect={this.props.onRouteSelect}\n            onSortRoutes={this.props.onSortRoutes}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default MapWithControls;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport { Route as RouteT, viewToLocation } from \"../../model\";\nimport { Option, some } from \"fp-ts/lib/Option\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { doUpdateLocation } from \"../../commands\";\nimport { declareCommands } from \"react-avenger\";\n\nimport \"./sideBar.scss\";\nimport \"@buildo/bento/components/button.scss\";\n\nconst Route = (props: {\n  route: RouteT;\n  onClick: () => void;\n  isSelected: boolean;\n  onDetailsClick: (e: React.SyntheticEvent<HTMLDivElement, Event>) => void;\n}) => (\n  <View\n    className={cx(\"route\", { \"is-selected\": props.isSelected })}\n    column\n    onClick={props.onClick}\n    shrink={false}\n  >\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"min-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (min)</label>{\" \"}\n      {Math.round(props.route.properties.minElevation)} m\n    </View>\n    <View className=\"max-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (max)</label>{\" \"}\n      {Math.round(props.route.properties.maxElevation)} m\n    </View>\n\n    <View className=\"actions\">\n      <Button size=\"tiny\" label=\"Details\" onClick={props.onDetailsClick} />\n    </View>\n  </View>\n);\n\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof commands.Props & {\n  routes: RouteT[];\n  onRouteClick: (route: RouteT) => void;\n  selectedRoute: Option<RouteT>;\n};\n\nclass SideBar extends React.PureComponent<Props> {\n  render() {\n    return (\n      <View className=\"side-bar\" column shrink={false}>\n        <View column shrink={false} className=\"navigationGpx\">\n          <h2>Navigation (GPX)</h2>\n\n          <input\n            type=\"file\"\n            accept=\".gpx\"\n            onChange={e => {\n              const file = e.target.files![0];\n\n              const reader = new FileReader();\n              reader.addEventListener(\"load\", event => {\n                localStorage.setItem(\"gpxFile\", event.target!.result as any);\n\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"navigation\", routeId: some(\"gpx\") })\n                );\n              });\n              reader.readAsText(file);\n            }}\n          />\n        </View>\n\n        <View column shrink={false} className=\"routes\">\n          <h2>Routes</h2>\n          {this.props.routes.map((route, index) => (\n            <Route\n              key={index}\n              route={route}\n              onClick={() => this.props.onRouteClick(route)}\n              isSelected={\n                this.props.selectedRoute.isSome() &&\n                this.props.selectedRoute.value === route\n              }\n              onDetailsClick={e => {\n                e.stopPropagation();\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"details\", routeId: some(route.id) })\n                );\n              }}\n            />\n          ))}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default commands(SideBar);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { routes } from \"../../queries\";\nimport View from \"../View\";\nimport { getRouteDistanceInPixels } from \"../Map/Map\";\nimport MapWithControls from \"../MapWithControls/MapWithControls\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Route } from \"../../model\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./explorer.scss\";\n\nconst queries = declareQueries({ routes });\n\ntype Props = typeof queries.Props;\n\ntype State = {\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n};\n\nclass Explorer extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n\n  state: State = {\n    selectedRoute: none,\n    hoveredRoute: none\n  };\n\n  onRouteSelect = (route: Route) => {\n    this.setState({\n      selectedRoute:\n        this.state.selectedRoute.isSome() &&\n        this.state.selectedRoute.value === route\n          ? none\n          : some(route)\n    });\n  };\n\n  onRouteHover = (route: Option<Route>) => {\n    this.setState({\n      hoveredRoute: route\n    });\n  };\n\n  onSortRoutes = () => {\n    this.forceUpdate();\n  };\n\n  updateInnerRef = (map: mapboxgl.Map) => {\n    if (this.map.isNone()) {\n      this.map = some(map);\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    return this.props.routes.fold(\n      null,\n      () => null,\n      routes => {\n        const sortedRoutes: Route[] = this.map.fold(routes, map =>\n          sortBy(routes, route =>\n            getRouteDistanceInPixels(route, map.getCenter(), map)\n          )\n        );\n\n        return (\n          <View className=\"explorer\" grow>\n            <SideBar\n              routes={sortedRoutes}\n              onRouteClick={this.onRouteSelect}\n              selectedRoute={this.state.selectedRoute}\n            />\n            <MapWithControls\n              routes={routes}\n              selectedRoute={this.state.selectedRoute}\n              hoveredRoute={this.state.hoveredRoute}\n              onRouteHover={this.onRouteHover}\n              onRouteSelect={this.onRouteSelect}\n              onSortRoutes={this.onSortRoutes}\n              innerRef={this.updateInnerRef}\n              startPosition=\"userLocation\"\n              navigatingRoute={none}\n              noSleep={false}\n              altimeter={false}\n              altitudeControl={false}\n              geoLocateControl\n              speedometer={false}\n              scale={false}\n            />\n          </View>\n        );\n      }\n    );\n  }\n}\n\nexport default queries(Explorer);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route, routeReadme } from \"../../queries\";\nimport View from \"../View\";\nimport MapWithControls from \"../MapWithControls/MapWithControls\";\nimport * as RemarkableModule from \"remarkable\";\nimport { none, some } from \"fp-ts/lib/Option\";\nimport { Route, viewToLocation } from \"../../model\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { saveAs } from \"file-saver\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\nimport ElevationProfile from \"../ElevationProfile\";\nimport memoize from \"memoize-one\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./details.scss\";\n\nconst { linkify } = require(\"remarkable/linkify\");\n\nconst togpx = require(\"togpx\");\n\nconst Remarkable = (RemarkableModule as any).Remarkable as RemarkableModule;\n\nconst saveGPX = (route: Route): void => {\n  const blob = new Blob([togpx(route)], {\n    type: \"text/plain;charset=utf-8\"\n  });\n\n  saveAs(blob, `${route.properties.name}.gpx`);\n};\n\nclass Markdown extends React.PureComponent<{\n  routeReadme: string;\n  route: Route;\n  onEnterNavigation: () => void;\n}> {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const images = Array.from(\n      document.querySelectorAll<HTMLImageElement>(\".remarkable img\")\n    );\n\n    const h1 = document.querySelector<HTMLElement>(\n      \".remarkable h1:first-of-type\"\n    );\n\n    return (\n      <View className=\"markdown\" hAlignContent=\"center\" shrink={false}>\n        <View className=\"wrapper\" grow>\n          <View grow column style={{ position: \"relative\" }}>\n            <View className=\"title\">{h1?.innerText}</View>\n            <View className=\"actions\">\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Enter Navigation\"\n                onClick={this.props.onEnterNavigation}\n              />\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Download GPX\"\n                onClick={() => saveGPX(this.props.route)}\n              />\n            </View>\n\n            <div\n              className=\"remarkable\"\n              dangerouslySetInnerHTML={{\n                __html: md.render(this.props.routeReadme)\n              }}\n            />\n\n            <View className=\"summary\">\n              <View className=\"distance\" column shrink={false}>\n                <span>{this.props.route.properties.length} km</span>\n                <label>Distance</label>\n              </View>\n              <View className=\"min-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.minElevation)} m\n                </span>\n                <label>Min elevation</label>\n              </View>\n              <View className=\"max-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.maxElevation)} m\n                </span>\n                <label>Max elevation</label>\n              </View>\n            </View>\n          </View>\n          <View className=\"images\" hAlignContent=\"right\" shrink={false}>\n            <Carousel\n              showThumbs={false}\n              showStatus={false}\n              showIndicators={images.length > 1}\n              infiniteLoop\n              autoPlay\n              interval={6000}\n            >\n              {images.map(image => (\n                <img key={image.src} src={image.src} alt={image.src} />\n              ))}\n            </Carousel>\n          </View>\n          <View className=\"mobile-images\" grow>\n            {images.slice(0, 2).map(image => (\n              <img key={image.src} src={image.src} alt={image.src} />\n            ))}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst md = new (Remarkable as any)().use(linkify);\n\nconst queries = declareQueries({ route, routeReadme });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Details extends React.Component<Props> {\n  getRoutes = memoize(\n    (route: Route) => {\n      return [route];\n    },\n    (newArgs: Route[], prevArgs: Route[]): boolean =>\n      newArgs[0].id === prevArgs[0].id\n  );\n\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route =>\n        this.props.routeReadme.fold(\n          null,\n          () => null,\n          routeReadme => {\n            if (route.isNone() || routeReadme.isNone()) {\n              return null;\n            } else {\n              return (\n                <View className=\"details\" height=\"100%\" grow column>\n                  <Markdown\n                    routeReadme={routeReadme.value}\n                    route={route.value}\n                    onEnterNavigation={() => {\n                      this.props.doUpdateLocation(\n                        viewToLocation({\n                          view: \"navigation\",\n                          routeId: some(route.value.id)\n                        })\n                      );\n                    }}\n                  />\n\n                  <View shrink={false} className=\"map-wrapper\">\n                    <MapWithControls\n                      routes={this.getRoutes(route.value)}\n                      startPosition=\"firstRoute\"\n                      navigatingRoute={none}\n                      hoveredRoute={route} // fixed blue color that is easily visible\n                      selectedRoute={none}\n                      altimeter={false}\n                      altitudeControl={false}\n                      geoLocateControl\n                      noSleep={false}\n                      speedometer={false}\n                      scale={false}\n                    />\n                  </View>\n                  <View className=\"elevation-profile-wrapper\" shrink={false}>\n                    <ElevationProfile route={route.value} />\n                  </View>\n                </View>\n              );\n            }\n          }\n        )\n    );\n  }\n}\n\nexport default commands(queries(Details));\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route } from \"../../queries\";\nimport View from \"../View\";\nimport { none } from \"fp-ts/lib/Option\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\nimport memoize from \"memoize-one\";\nimport { Route } from \"../../model\";\nimport MapWithControls from \"../MapWithControls/MapWithControls\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nconst md = mobileDetect();\n\ntype x = typeof none;\n\nconst queries = declareQueries({ route });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Navigation extends React.Component<Props> {\n  getRoutes = memoize(\n    (route: Route) => {\n      return [route];\n    },\n    (newArgs: Route[], prevArgs: Route[]): boolean =>\n      newArgs[0].id === prevArgs[0].id\n  );\n\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route => {\n        if (route.isNone()) {\n          return null;\n        } else {\n          return (\n            <View className=\"navigation\" height=\"100%\" grow column>\n              <MapWithControls\n                routes={this.getRoutes(route.value)}\n                navigatingRoute={route}\n                altimeter={!md.isDesktop}\n                altitudeControl\n                noSleep\n                scale\n                speedometer={!md.isDesktop}\n                geoLocateControl\n                startPosition=\"firstRoute\"\n                hoveredRoute={none}\n                selectedRoute={none}\n              />\n            </View>\n          );\n        }\n      }\n    );\n  }\n}\n\nexport default commands(queries(Navigation));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport * as serviceWorker from \"../serviceWorker\";\nimport View from \"./View\";\nimport { none, Option, fromNullable } from \"fp-ts/lib/Option\";\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] = React.useState<\n    Option<ServiceWorker>\n  >(none);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    setShowReload(true);\n    setWaitingWorker(fromNullable(registration.waiting));\n  };\n\n  useEffect(() => {\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    console.log(\"reload page\");\n    waitingWorker.map(ww => ww.postMessage({ type: \"SKIP_WAITING\" }));\n    setShowReload(false);\n    window.location.reload(true);\n  };\n\n  return showReload ? (\n    <View\n      className=\"updateAvailable\"\n      vAlignContent=\"center\"\n      hAlignContent=\"center\"\n      style={{\n        background: \"lightgreen\",\n        height: 25,\n        color: \"black\"\n      }}\n    >\n      Update Available\n      <span\n        style={{\n          marginLeft: 60,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => reloadPage()}\n      >\n        Install\n      </span>\n      <span\n        style={{\n          marginLeft: 20,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => {\n          console.log(\"ignore\");\n          setShowReload(false);\n        }}\n      >\n        Ignore\n      </span>\n    </View>\n  ) : null;\n};\n\nexport default ServiceWorkerWrapper;\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { currentView } from \"../../queries\";\nimport View from \"../View\";\nimport Explorer from \"../Explorer/Explorer\";\nimport Details from \"../Details/Details\";\nimport Navigation from \"../Navigation/Navigation\";\nimport mapboxgl from \"mapbox-gl\";\nimport ServiceWorkerWrapper from \"../ServiceWorkerWrapper\";\n\nmapboxgl.prewarm();\n\nconst queries = declareQueries({ currentView });\n\ntype Props = typeof queries.Props;\n\nclass App extends React.Component<Props> {\n  render() {\n    return this.props.currentView.fold(\n      null,\n      () => null,\n      currentView => (\n        <View className=\"app\" height=\"100%\" column>\n          <ServiceWorkerWrapper />\n          {currentView.view === \"explorer\" && <Explorer />}\n          {currentView.view === \"details\" && <Details />}\n          {currentView.view === \"navigation\" && <Navigation />}\n        </View>\n      )\n    );\n  }\n}\n\nexport default queries(App);\n","import App from './App';\nexport default App;\n","// This script adds \"is-desktop\", \"is-phone\" or \"is-tablet\" class to the root document element\n\nimport cx from \"classnames\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nconst md = mobileDetect();\n\nconst deviceClassName = cx({\n  \"is-desktop\": md.isDesktop,\n  \"is-tablet\": md.isTablet,\n  \"is-phone\": md.isPhone\n});\n\n// document.documentElement is not supported in every browser, fallback on document.body\nconst body = document.documentElement || document.body;\n\nbody.className = cx(body.className, deviceClassName);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport \"./setup/addDeviceClassName\";\nimport \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}