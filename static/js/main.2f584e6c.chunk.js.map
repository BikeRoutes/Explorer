{"version":3,"sources":["queries/index.ts","model/index.ts","components/View/index.ts","components/View/View.ts","components/Popup/Popup.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","components/SideBar/SideBar.tsx","components/Explorer/Explorer.tsx","components/FullscreenModal/FullscreenModal.tsx","components/Details/Details.tsx","components/App/index.ts","components/App/App.tsx","serviceWorker.ts","setup/addDeviceClassName.ts","index.tsx"],"names":["currentView","Query","params","dependencies","location","fetch","Promise","resolve","search","view","routeId","fromNullable","locationToView","routes","cacheStrategy","available","then","res","json","JSON","parse","body","features","map","feature","coordinates","minElevation","geometry","reduce","acc","c","Number","MAX_SAFE_INTEGER","maxElevation","MIN_SAFE_INTEGER","id","properties","url","color","stringToColor","name","length","Math","round","geoJsonLength","elevationGain","filter","index","prevAltitude","undefined","altitude","route","isSome","value","find","r","none","routeReadme","exec","readmeUrl","text","some","View","props","className","column","vAlignContent","height","width","viewBox","onClick","style","cursor","marginTop","fillRule","transform","fill","opacity","cx","cy","rx","ry","d","md","mobileDetect","popupSettings","closeButton","closeOnClick","offset","anchor","getRouteDistanceInPixels","lngLat","point","project","mapboxgl","lng","lat","routePoint","distance","sqrt","pow","abs","x","y","Infinity","App","popupSelectedRoute","popupHoveredRoute","positionWatch","centerUserLocation","document","querySelector","click","onMouseMove","throttle","e","closestRoute","onRouteHover","onFullscreenChange","fullscreenElement","scrollZoom","enable","disable","container","center","parseFloat","localStorage","getItem","zoom","on","addLayers","addMarkers","startPosition","flyToRoute","animate","padding","isDesktop","this","innerRef","addControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","fitBoundsOptions","maxZoom","showZoom","showCompass","selectedRoute","hoveredRoute","forEach","layer","type","source","data","layout","paint","getRouteColor","onRouteSelect","addLayer","element","createElement","ReactDOM","Marker","setLngLat","addTo","setPaintProperty","options","bounds","coord","extend","fitBounds","popup","latLng","setHTML","ReactDOMServer","Popup","showPopup","remove","fold","identity","initializeMap","addEventListener","navigator","geolocation","watchPosition","position","setItem","String","coords","latitude","longitude","prevProps","updateLayers","updateSelectedRoutePopup","updateHoveredRoutePopup","isNone","clearWatch","removeEventListener","grow","React","Route","isSelected","shrink","size","label","onDetailsClick","commands","declareCommands","doUpdateLocation","key","onRouteClick","stopPropagation","pathname","getOrElse","viewToLocation","queries","declareQueries","state","setState","sortedRoutes","sortBy","getCenter","Map","forceUpdate","fullscreen","FullscreenModal","setTimeout","onVisibilityChange","hidden","enterFullscreen","getElementById","requestFullscreen","onDismiss","transitionEnterTimeout","transitionLeaveTimeout","iconClose","title","footer","justifyContent","primary","defaults","global","animation","togpx","require","Remarkable","RemarkableModule","Markdown","images","Array","from","querySelectorAll","h1","hAlignContent","left","clientWidth","flat","blob","Blob","saveAs","saveGPX","dangerouslySetInnerHTML","__html","render","showThumbs","showStatus","showIndicators","infiniteLoop","autoPlay","interval","image","src","alt","slice","linkify","scale","distances","_","i","ticks","uniq","number","roundedInteger","remainder","discriminatingFactor","flooredNumber","elevations","datasets","pointRadius","borderWidth","yAxisID","xAxisID","responsive","maintainAspectRatio","scales","xAxes","labels","toFixed","display","callback","yAxes","precision","maxRotation","stepSize","suggestedMin","suggestedMax","tooltips","mode","intersect","callbacks","tooltipItems","legend","Boolean","window","hostname","match","deviceClassName","isTablet","isPhone","documentElement","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f584e6c.chunk.js","sourcesContent":["import { Query, location, available } from \"@buildo/bento/data\";\nimport { locationToView, Geometry, Route, GeoJSONFeature } from \"../model\";\nimport * as stringToColor from \"string-to-color\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, fromNullable, none, some } from \"fp-ts/lib/Option\";\n\nfunction getElevationGain(coordinates: Geometry[\"coordinates\"]): number {\n  return coordinates\n    .filter(c => c[2])\n    .reduce((acc, c, index) => {\n      const prevAltitude = index > 0 ? coordinates[index - 1][2] : undefined;\n      const altitude = c[2]!;\n\n      if (prevAltitude && altitude > prevAltitude) {\n        return acc + altitude - prevAltitude;\n      }\n\n      return acc;\n    }, 0);\n}\n\nexport { location };\n\nexport const currentView = Query({\n  params: {},\n  dependencies: { location: location },\n  fetch: ({ location }) => Promise.resolve(locationToView(location))\n});\n\nexport const routes = Query({\n  cacheStrategy: available,\n  params: {},\n  fetch: (): Promise<Route[]> =>\n    fetch(\n      `${\n        process.env.NODE_ENV === \"development\"\n          ? \"http://localhost:8081/\"\n          : \"https://or52hotxz1.execute-api.us-east-1.amazonaws.com/dev/\"\n      }`\n    )\n      .then(res => res.json() as Promise<{ body: string }>)\n      .then((res): GeoJSONFeature[] => JSON.parse(res.body))\n      .then(features =>\n        features.map(feature => {\n          const minElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n            Number.MAX_SAFE_INTEGER\n          );\n\n          const maxElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n            Number.MIN_SAFE_INTEGER\n          );\n\n          const richFeature: Route = {\n            id: feature.properties.url,\n            ...feature,\n            properties: {\n              ...feature.properties,\n              color: stringToColor(feature.properties.name),\n              length: Math.round(geoJsonLength(feature.geometry) / 100) / 10,\n              elevationGain: Math.round(\n                getElevationGain(feature.geometry.coordinates)\n              ),\n              minElevation,\n              maxElevation\n            }\n          };\n\n          return richFeature;\n        })\n      )\n});\n\nexport const route = Query({\n  params: {},\n  dependencies: { currentView, routes },\n  fetch: ({ currentView, routes }): Promise<Option<Route>> => {\n    if (currentView.view === \"details\" && currentView.routeId.isSome()) {\n      const routeId = currentView.routeId.value;\n      return Promise.resolve(fromNullable(routes.find(r => r.id === routeId)));\n    }\n\n    return Promise.resolve(none);\n  }\n});\n\nexport const routeReadme = Query({\n  params: {},\n  dependencies: { route },\n  fetch: ({ route }): Promise<Option<string>> => {\n    if (route.isSome()) {\n      const res = /BikeRoutes.+master\\/(.+)\\/.+$/.exec(\n        route.value.properties.url\n      )!;\n\n      const readmeUrl = `https://raw.githubusercontent.com/BikeRoutes/BikeRoutes/master/${res[1]}/README.md`;\n\n      return fetch(readmeUrl)\n        .then(r => r.text())\n        .then(text => some(text));\n    }\n    return Promise.resolve(none);\n  }\n});\n","import { HistoryLocation as HistoryLocationT } from \"@buildo/bento/data\";\nimport { Option, fromNullable } from \"fp-ts/lib/Option\";\n\nexport type HistoryLocation = HistoryLocationT;\n\nexport type CurrentView =\n  | { view: \"explorer\" }\n  | { view: \"details\"; routeId: Option<string> };\n\nexport function locationToView(location: HistoryLocation): CurrentView {\n  switch (location.search.view) {\n    case \"details\":\n      return {\n        view: \"details\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    default:\n      return { view: \"explorer\" };\n  }\n}\n\nexport function viewToLocation(view: CurrentView): HistoryLocation {\n  switch (view.view) {\n    case \"details\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"details\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"explorer\":\n      return { pathname: \"/Explorer\", search: {} };\n  }\n}\n\nexport type Content = {\n  name: string;\n  type: \"dir\" | \"file\";\n  url: string;\n  download_url: string;\n  html_url: string;\n};\n\nexport type Geometry = {\n  type: \"LineString\";\n  coordinates: Array<[number, number, number?]>;\n};\n\nexport type GeoJSONFeature = {\n  type: \"Feature\";\n  properties: {\n    name: string;\n    color: string;\n    length: number;\n    elevationGain: number;\n    minElevation: number;\n    maxElevation: number;\n    url: string;\n  };\n  geometry: Geometry;\n};\nexport type GeoJSONFeatureCollection = {\n  type: \"FeatureCollection\";\n  features: GeoJSONFeature[];\n};\n\nexport type Route = GeoJSONFeature & { id: string };\n","import View from './View';\nexport default View;\n","import View from '@buildo/bento/components/FlexView';\nexport default View;\n","import * as React from \"react\";\nimport View from \"../View\";\nimport { Route } from \"../../model\";\n\nimport \"./popup.scss\";\n\nexport default (props: { route: Route }) => (\n  <View className=\"popup\" column>\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n  </View>\n);\n","import * as React from \"react\";\n\nexport default (props: { onClick: () => void }) => (\n  <svg\n    height=\"41px\"\n    width=\"27px\"\n    viewBox=\"0 0 27 41\"\n    onClick={props.onClick}\n    className=\"marker\"\n    style={{ cursor: \"pointer\", marginTop: \"-100%\" }}\n  >\n    <g fillRule=\"nonzero\">\n      <g transform=\"translate(3.0, 29.0)\" fill=\"#000000\">\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"9.5\"\n          ry=\"4.77275007\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"8.5\"\n          ry=\"4.29549936\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"7.5\"\n          ry=\"3.81822308\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"6.5\"\n          ry=\"3.34094679\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"5.5\"\n          ry=\"2.86367051\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"4.5\"\n          ry=\"2.38636864\"\n        />\n      </g>\n      <g fill=\"#3FB1CE\">\n        <path d=\"M27,13.5 C27,19.074644 20.250001,27.000002 14.75,34.500002 C14.016665,35.500004 12.983335,35.500004 12.25,34.500002 C6.7499993,27.000002 0,19.222562 0,13.5 C0,6.0441559 6.0441559,0 13.5,0 C20.955844,0 27,6.0441559 27,13.5 Z\" />\n      </g>\n      <g opacity=\"0.25\" fill=\"#000000\">\n        <path d=\"M13.5,0 C6.0441559,0 0,6.0441559 0,13.5 C0,19.222562 6.7499993,27 12.25,34.5 C13,35.522727 14.016664,35.500004 14.75,34.5 C20.250001,27 27,19.074644 27,13.5 C27,6.0441559 20.955844,0 13.5,0 Z M13.5,1 C20.415404,1 26,6.584596 26,13.5 C26,15.898657 24.495584,19.181431 22.220703,22.738281 C19.945823,26.295132 16.705119,30.142167 13.943359,33.908203 C13.743445,34.180814 13.612715,34.322738 13.5,34.441406 C13.387285,34.322738 13.256555,34.180814 13.056641,33.908203 C10.284481,30.127985 7.4148684,26.314159 5.015625,22.773438 C2.6163816,19.232715 1,15.953538 1,13.5 C1,6.584596 6.584596,1 13.5,1 Z\" />\n      </g>\n      <g transform=\"translate(6.0, 7.0)\" fill=\"#FFFFFF\" />\n      <g transform=\"translate(8.0, 8.0)\">\n        <circle fill=\"#000000\" opacity=\"0.25\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n        <circle fill=\"#FFFFFF\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as ReactDOM from \"react-dom\";\nimport throttle from \"lodash/throttle\";\nimport * as mapboxgl from \"mapbox-gl\";\nimport Popup from \"../Popup/Popup\";\nimport Marker from \"../Marker/Marker\";\nimport View from \"../View\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\nimport { identity } from \"fp-ts/lib/function\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./map.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst md = mobileDetect();\n\nconst popupSettings: mapboxgl.PopupOptions = {\n  closeButton: false,\n  closeOnClick: false,\n  offset: [0, -40],\n  anchor: \"bottom\"\n};\n\nexport const getRouteDistanceInPixels = (\n  route: Route,\n  lngLat: mapboxgl.LngLat,\n  map: mapboxgl.Map\n): number => {\n  return route.geometry.coordinates.reduce((acc, coordinates) => {\n    const point = map.project(new mapboxgl.LngLat(lngLat.lng, lngLat.lat));\n    const routePoint = map.project(\n      new mapboxgl.LngLat(coordinates[0], coordinates[1])\n    );\n    const distance = Math.sqrt(\n      Math.pow(Math.abs(point.x - routePoint.x), 2) +\n        Math.pow(Math.abs(point.y - routePoint.y), 2)\n    );\n    return distance < acc ? distance : acc;\n  }, Infinity);\n};\n\ntype Props = {\n  routes: Route[];\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n  onRouteHover: (route: Option<Route>) => void;\n  onRouteSelect: (route: Route) => void;\n  innerRef: (map: Option<mapboxgl.Map>) => void;\n  startPosition: \"userLocation\" | \"firstRoute\";\n};\n\nclass App extends React.PureComponent<Props> {\n  map: Option<mapboxgl.Map> = none;\n  popupSelectedRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  popupHoveredRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  positionWatch: Option<number> = none;\n\n  centerUserLocation = () => {\n    document\n      .querySelector<HTMLButtonElement>(\".mapboxgl-ctrl-geolocate\")!\n      .click();\n  };\n\n  initializeMap() {\n    (mapboxgl as any).accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm\",\n      center: {\n        lat: parseFloat(localStorage.getItem(\"start_lat\") || \"0\"),\n        lng: parseFloat(localStorage.getItem(\"start_lng\") || \"0\")\n      },\n      zoom: 11.0,\n      scrollZoom: false\n    });\n\n    map.on(\"load\", () => {\n      this.map = some(map);\n\n      this.addLayers();\n      this.addMarkers();\n\n      if (this.props.startPosition === \"userLocation\") {\n        this.centerUserLocation();\n      }\n\n      if (\n        this.props.startPosition === \"firstRoute\" &&\n        this.props.routes.length > 0\n      ) {\n        this.flyToRoute(this.props.routes[0], { animate: false, padding: 80 });\n      }\n    });\n\n    if (md.isDesktop) {\n      map.on(\"mousemove\", this.onMouseMove);\n    }\n\n    map.on(\"moveend\", () => this.props.innerRef(this.map));\n\n    map.addControl(new mapboxgl.FullscreenControl());\n\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true,\n        showAccuracyCircle: true,\n\n        fitBoundsOptions: {\n          maxZoom: this.props.startPosition === \"firstRoute\" ? 15 : 11\n        }\n      })\n    );\n\n    map.addControl(\n      new mapboxgl.NavigationControl({\n        showZoom: md.isDesktop,\n        showCompass: !md.isDesktop\n      })\n    );\n  }\n\n  getRouteColor(route: Route): string {\n    return (this.props.selectedRoute.isSome() &&\n      route === this.props.selectedRoute.value) ||\n      (this.props.hoveredRoute.isSome() &&\n        route === this.props.hoveredRoute.value)\n      ? \"#387ddf\"\n      : route.properties.color;\n  }\n\n  addLayers() {\n    this.map.map((map) => {\n      this.props.routes.forEach((route) => {\n        const layer: mapboxgl.Layer = {\n          id: route.properties.url,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: route as any\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-width\": 3,\n            \"line-color\": this.getRouteColor(route)\n          }\n        };\n\n        map.on(\"click\", layer.id, () => {\n          this.props.onRouteSelect(route);\n        });\n\n        map.addLayer(layer);\n      });\n    });\n  }\n\n  addMarkers() {\n    this.map.map((map) => {\n      this.props.routes.forEach((route) => {\n        const coordinates = route.geometry.coordinates[0];\n\n        const element = document.createElement(\"div\");\n        ReactDOM.render(\n          <Marker onClick={() => this.props.onRouteSelect(route)} />,\n          element\n        );\n\n        const marker: mapboxgl.Marker = new mapboxgl.Marker({\n          element\n        }).setLngLat([coordinates[0], coordinates[1]]);\n\n        marker.addTo(map);\n      });\n    });\n  }\n\n  onMouseMove = throttle((e: mapboxgl.MapMouseEvent) => {\n    type ClosestRoute = {\n      distance: number;\n      route: Route;\n    };\n\n    this.map.map((map) => {\n      const closestRoute: ClosestRoute = this.props.routes.reduce(\n        (acc, route) => {\n          const distance = getRouteDistanceInPixels(route, e.lngLat, map);\n\n          return distance < acc.distance ? { distance, route } : acc;\n        },\n        { distance: Infinity } as ClosestRoute\n      );\n\n      if (closestRoute.distance < 25) {\n        this.props.onRouteHover(some(closestRoute.route));\n      } else {\n        this.props.onRouteHover(none);\n      }\n    });\n  }, 60);\n\n  updateLayers() {\n    this.map.map((map) => {\n      this.props.routes.forEach((route) => {\n        // update color\n        map.setPaintProperty(route.id, \"line-color\", this.getRouteColor(route));\n      });\n    });\n  }\n\n  flyToRoute(route: Route, options?: mapboxgl.FitBoundsOptions) {\n    this.map.map((map) => {\n      const coordinates = route.geometry.coordinates as [number, number][];\n      const bounds = coordinates\n        .map((coord) => new mapboxgl.LngLatBounds(coord, coord))\n        .reduce((bounds, coord) => {\n          return bounds.extend(coord);\n        });\n\n      map.fitBounds(bounds, { padding: 50, ...options });\n    });\n  }\n\n  showPopup(route: Route, popup: mapboxgl.Popup) {\n    this.map.map((map) => {\n      const latLng: mapboxgl.LngLat = new mapboxgl.LngLat(\n        route.geometry.coordinates[0][0],\n        route.geometry.coordinates[0][1]\n      );\n\n      popup\n        .setLngLat(latLng)\n        .setHTML(ReactDOMServer.renderToString(<Popup route={route} />))\n        .addTo(map);\n    });\n  }\n\n  updateSelectedRoutePopup() {\n    if (this.props.selectedRoute.isSome()) {\n      this.showPopup(this.props.selectedRoute.value, this.popupSelectedRoute);\n    } else {\n      this.popupSelectedRoute.remove();\n    }\n  }\n\n  updateHoveredRoutePopup() {\n    const { hoveredRoute } = this.props;\n    if (\n      hoveredRoute.isSome() &&\n      hoveredRoute.value !== this.props.selectedRoute.fold(null, identity)\n    ) {\n      this.showPopup(hoveredRoute.value, this.popupHoveredRoute);\n    } else {\n      this.popupHoveredRoute.remove();\n    }\n  }\n\n  onFullscreenChange = () => {\n    if (document.fullscreenElement) {\n      this.map.map((map) => map.scrollZoom.enable());\n      this.centerUserLocation();\n    } else {\n      this.map.map((map) => map.scrollZoom.disable());\n    }\n  };\n\n  componentDidMount() {\n    this.initializeMap();\n    this.props.innerRef(this.map);\n\n    document.addEventListener(\"fullscreenchange\", this.onFullscreenChange);\n\n    this.positionWatch = some(\n      navigator.geolocation.watchPosition((position) => {\n        localStorage.setItem(\"start_lat\", String(position.coords.latitude));\n        localStorage.setItem(\"start_lng\", String(position.coords.longitude));\n      })\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateLayers();\n    this.updateSelectedRoutePopup();\n    this.updateHoveredRoutePopup();\n\n    if (\n      this.props.selectedRoute.isSome() &&\n      (prevProps.selectedRoute.isNone() ||\n        prevProps.selectedRoute.value !== this.props.selectedRoute.value)\n    ) {\n      this.flyToRoute(this.props.selectedRoute.value);\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.positionWatch.map((positionWatch) =>\n      navigator.geolocation.clearWatch(positionWatch)\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"fullscreenchange\", this.onFullscreenChange);\n  }\n\n  render() {\n    return <View grow id=\"map\" />;\n  }\n}\n\nexport default App;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport { Route as RouteT, viewToLocation } from \"../../model\";\nimport { Option, some } from \"fp-ts/lib/Option\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { doUpdateLocation } from \"../../commands\";\nimport { declareCommands } from \"react-avenger\";\n\nimport \"./sideBar.scss\";\nimport \"@buildo/bento/components/button.scss\";\n\nconst Route = (props: {\n  route: RouteT;\n  onClick: () => void;\n  isSelected: boolean;\n  onDetailsClick: (e: React.SyntheticEvent<HTMLDivElement, Event>) => void;\n}) => (\n  <View\n    className={cx(\"route\", { \"is-selected\": props.isSelected })}\n    column\n    onClick={props.onClick}\n    shrink={false}\n  >\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"min-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (min)</label>{\" \"}\n      {Math.round(props.route.properties.minElevation)} m\n    </View>\n    <View className=\"max-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (max)</label>{\" \"}\n      {Math.round(props.route.properties.maxElevation)} m\n    </View>\n\n    <View className=\"actions\">\n      <Button size=\"tiny\" label=\"Details\" onClick={props.onDetailsClick} />\n    </View>\n  </View>\n);\n\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof commands.Props & {\n  routes: RouteT[];\n  onRouteClick: (route: RouteT) => void;\n  selectedRoute: Option<RouteT>;\n};\n\nclass SideBar extends React.Component<Props> {\n  render() {\n    return (\n      <View className=\"side-bar\" column shrink={false}>\n        <h2>Routes</h2>\n        {this.props.routes.map((route, index) => (\n          <Route\n            key={index}\n            route={route}\n            onClick={() => this.props.onRouteClick(route)}\n            isSelected={\n              this.props.selectedRoute.isSome() &&\n              this.props.selectedRoute.value === route\n            }\n            onDetailsClick={(e) => {\n              e.stopPropagation();\n              this.props.doUpdateLocation(\n                viewToLocation({ view: \"details\", routeId: some(route.id) })\n              );\n            }}\n          />\n        ))}\n      </View>\n    );\n  }\n}\n\nexport default commands(SideBar);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { routes } from \"../../queries\";\nimport View from \"../View\";\nimport Map, { getRouteDistanceInPixels } from \"../Map/Map\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Route } from \"../../model\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./explorer.scss\";\n\nconst queries = declareQueries({ routes });\n\ntype Props = typeof queries.Props;\n\ntype State = {\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n};\n\nclass Explorer extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n\n  state: State = {\n    selectedRoute: none,\n    hoveredRoute: none\n  };\n\n  onRouteSelect = (route: Route) => {\n    this.setState({\n      selectedRoute:\n        this.state.selectedRoute.isSome() &&\n        this.state.selectedRoute.value === route\n          ? none\n          : some(route)\n    });\n  };\n\n  onRouteHover = (route: Option<Route>) => {\n    this.setState({\n      hoveredRoute: route\n    });\n  };\n\n  render() {\n    return this.props.routes.fold(\n      null,\n      () => null,\n      (routes) => {\n        const sortedRoutes: Route[] = this.map.fold(routes, (map) =>\n          sortBy(routes, (route) =>\n            getRouteDistanceInPixels(route, map.getCenter(), map)\n          )\n        );\n\n        return (\n          <View className=\"explorer\" grow>\n            <SideBar\n              routes={sortedRoutes}\n              onRouteClick={this.onRouteSelect}\n              selectedRoute={this.state.selectedRoute}\n            />\n            <Map\n              routes={routes}\n              selectedRoute={this.state.selectedRoute}\n              hoveredRoute={this.state.hoveredRoute}\n              onRouteHover={this.onRouteHover}\n              onRouteSelect={this.onRouteSelect}\n              innerRef={(map) => {\n                this.map = map;\n                this.forceUpdate();\n              }}\n              startPosition=\"userLocation\"\n            />\n          </View>\n        );\n      }\n    );\n  }\n}\n\nexport default queries(Explorer);\n","import * as React from \"react\";\nimport Modal from \"@buildo/bento/components/Modal\";\nimport View from \"../View\";\nimport Button from \"@buildo/bento/components/Button\";\n\nimport \"@buildo/bento/components/modal.scss\";\n\ntype Props = {};\n\ntype State = {};\n\nlet fullscreen: boolean = false;\n\nexport default class FullscreenModal extends React.PureComponent<Props, State> {\n  onFullscreenChange = () => {\n    if (document.fullscreenElement) {\n      fullscreen = true;\n    } else {\n      setTimeout(() => {\n        fullscreen = false;\n      }, 30);\n    }\n  };\n\n  onVisibilityChange = () => {\n    if (!document.hidden) {\n      if (fullscreen) {\n        this.forceUpdate();\n      }\n    }\n  };\n\n  enterFullscreen = () => {\n    document.getElementById(\"map\")?.requestFullscreen();\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"fullscreenchange\", this.onFullscreenChange);\n    document.addEventListener(\n      \"visibilitychange\",\n      this.onVisibilityChange,\n      false\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"fullscreenchange\", this.onFullscreenChange);\n    document.removeEventListener(\"visibilitychange\", this.onVisibilityChange);\n  }\n\n  onDismiss = () => {\n    fullscreen = false;\n    this.forceUpdate();\n  };\n\n  render() {\n    return fullscreen ? (\n      <Modal\n        className=\"fullscreenModal\"\n        transitionEnterTimeout={500}\n        transitionLeaveTimeout={500}\n        onDismiss={this.onDismiss}\n        iconClose={\n          <svg height=\"12\" viewBox=\"0 0 22 28\">\n            <path\n              fill=\"#9098a7\"\n              d=\"M20.281 20.656q0 0.625-0.438 1.062l-2.125 2.125q-0.438 0.438-1.062 0.438t-1.062-0.438l-4.594-4.594-4.594 4.594q-0.438 0.438-1.062 0.438t-1.062-0.438l-2.125-2.125q-0.438-0.438-0.438-1.062t0.438-1.062l4.594-4.594-4.594-4.594q-0.438-0.438-0.438-1.062t0.438-1.062l2.125-2.125q0.438-0.438 1.062-0.438t1.062 0.438l4.594 4.594 4.594-4.594q0.438-0.438 1.062-0.438t1.062 0.438l2.125 2.125q0.438 0.438 0.438 1.062t-0.438 1.062l-4.594 4.594 4.594 4.594q0.438 0.438 0.438 1.062z\"\n            ></path>\n          </svg>\n        }\n        title=\"Re-enter Fullscreen\"\n        footer={\n          <View style={{ justifyContent: \"space-between\" }}>\n            <Button size=\"medium\" onClick={this.onDismiss}>\n              No\n            </Button>\n            <Button primary size=\"medium\" onClick={this.enterFullscreen}>\n              Yes\n            </Button>\n          </View>\n        }\n      >\n        <span>Do do you want to re-enter fullscreen?</span>\n      </Modal>\n    ) : null;\n  }\n}\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route, routeReadme } from \"../../queries\";\nimport View from \"../View\";\nimport Map from \"../Map/Map\";\nimport * as RemarkableModule from \"remarkable\";\nimport { none } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { saveAs } from \"file-saver\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport * as geoJsonLength from \"geojson-length\";\nimport uniq from \"lodash/uniq\";\nimport FullscreenModal from \"../FullscreenModal/FullscreenModal\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./details.scss\";\n\ndefaults.global.animation = 0;\n\nconst togpx = require(\"togpx\");\n\nconst Remarkable = (RemarkableModule as any).Remarkable as RemarkableModule;\n\nconst saveGPX = (route: Route): void => {\n  const blob = new Blob([togpx(route)], {\n    type: \"text/plain;charset=utf-8\"\n  });\n\n  saveAs(blob, `${route.properties.name}.gpx`);\n};\n\nclass Markdown extends React.PureComponent<{\n  routeReadme: string;\n  route: Route;\n}> {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const images = Array.from(\n      document.querySelectorAll<HTMLImageElement>(\".markdown img\")\n    );\n\n    const h1: HTMLElement | null = document.querySelector(\"h1\");\n\n    return (\n      <View className=\"markdown\" hAlignContent=\"center\" shrink={false}>\n        <View className=\"wrapper\" grow>\n          <View grow column style={{ position: \"relative\" }}>\n            <View\n              className=\"actions\"\n              style={{ left: h1 ? h1.clientWidth : undefined }}\n            >\n              <Button\n                flat\n                size=\"tiny\"\n                label=\"Download GPX\"\n                onClick={() => saveGPX(this.props.route)}\n              />\n            </View>\n\n            <div\n              className=\"remarkable\"\n              dangerouslySetInnerHTML={{\n                __html: md.render(this.props.routeReadme)\n              }}\n            />\n\n            <View className=\"summary\">\n              <View className=\"distance\" column shrink={false}>\n                <span>{this.props.route.properties.length} km</span>\n                <label>Distance</label>\n              </View>\n              <View className=\"min-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.minElevation)} m\n                </span>\n                <label>Min elevation</label>\n              </View>\n              <View className=\"max-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.maxElevation)} m\n                </span>\n                <label>Max elevation</label>\n              </View>\n            </View>\n          </View>\n          <View className=\"images\" hAlignContent=\"right\" shrink={false}>\n            <Carousel\n              showThumbs={false}\n              showStatus={false}\n              showIndicators={images.length > 1}\n              infiniteLoop\n              autoPlay\n              interval={6000}\n            >\n              {images.map((image) => (\n                <img key={image.src} src={image.src} alt={image.src} />\n              ))}\n            </Carousel>\n          </View>\n          <View className=\"mobile-images\" grow>\n            {images.slice(0, 2).map((image) => (\n              <img key={image.src} src={image.src} alt={image.src} />\n            ))}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst md = new (Remarkable as any)({\n  linkify: true\n});\n\nconst queries = declareQueries({ route, routeReadme });\n\ntype Props = typeof queries.Props;\n\nclass Details extends React.Component<Props> {\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      (route) =>\n        this.props.routeReadme.fold(\n          null,\n          () => null,\n          (routeReadme) => {\n            if (route.isNone() || routeReadme.isNone()) {\n              return null;\n            } else {\n              const scale = Math.round(route.value.properties.length / 10) || 1;\n\n              const round = (\n                number: number,\n                roundedInteger: number\n              ): number => {\n                const remainder = number % roundedInteger;\n                const discriminatingFactor = roundedInteger / 2;\n\n                const flooredNumber = Math.round(number - remainder);\n\n                if (remainder < discriminatingFactor) {\n                  return flooredNumber;\n                } else {\n                  return flooredNumber + roundedInteger;\n                }\n              };\n\n              const distances = route.value.geometry.coordinates.map(\n                (_, i) =>\n                  geoJsonLength({\n                    ...route.value.geometry,\n                    coordinates: route.value.geometry.coordinates.slice(\n                      0,\n                      i + 1\n                    )\n                  }) / 1000\n              );\n\n              const ticks = uniq(distances.map((d) => round(d, scale)));\n\n              const elevations = route.value.geometry.coordinates.map((c) =>\n                c[2] ? Math.round(c[2]) : null\n              );\n\n              return (\n                <View className=\"details\" height=\"100%\" grow column>\n                  <FullscreenModal />\n\n                  <Markdown\n                    routeReadme={routeReadme.value}\n                    route={route.value}\n                  />\n\n                  <View shrink={false} className=\"map-wrapper\">\n                    <Map\n                      routes={[route.value]}\n                      startPosition=\"firstRoute\"\n                      hoveredRoute={route} // fixed blue color that is easily visible\n                      // fake props\n                      selectedRoute={none}\n                      onRouteHover={() => {}}\n                      onRouteSelect={() => {}}\n                      innerRef={() => {}}\n                    />\n                  </View>\n                  <View className=\"elevation-profile-wrapper\" shrink={false}>\n                    <Line\n                      data={{\n                        datasets: [\n                          {\n                            label: \"Elevation\",\n                            pointRadius: 0,\n                            borderWidth: 0,\n                            yAxisID: \"y-axis\",\n                            xAxisID: \"x-axis-hidden\",\n                            data: elevations\n                          },\n                          {\n                            xAxisID: \"x-axis\",\n                            data: []\n                          }\n                        ]\n                      }}\n                      options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                          xAxes: [\n                            {\n                              id: \"x-axis-hidden\",\n                              type: \"category\",\n                              labels: distances.map((d) => d.toFixed(1)),\n                              display: false\n                            },\n                            {\n                              id: \"x-axis\",\n                              labels: ticks,\n                              ticks: {\n                                callback: (value: number) => {\n                                  return value < route.value.properties.length\n                                    ? `${value} km`\n                                    : null;\n                                }\n                              }\n                            }\n                          ],\n                          yAxes: [\n                            {\n                              type: \"linear\",\n                              id: \"y-axis\",\n                              ticks: {\n                                precision: 0,\n                                maxRotation: 0,\n                                stepSize: 50,\n                                suggestedMin:\n                                  route.value.properties.minElevation * 0.7,\n                                suggestedMax: 300,\n                                ticks: {\n                                  callback: (value: number) => {\n                                    return `${value} m`;\n                                  }\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        tooltips: {\n                          mode: \"index\",\n                          intersect: false,\n                          callbacks: {\n                            title: (tooltipItems: any[]) => {\n                              return `Dist:  ${tooltipItems[0].label} km`;\n                            },\n                            label: () => \"\",\n                            footer: (tooltipItems: any[], data: unknown) => {\n                              return `Elev: ${tooltipItems[0].value} m`;\n                            }\n                          }\n                        }\n                      }}\n                      legend={null}\n                      height={50}\n                    />\n                  </View>\n                </View>\n              );\n            }\n          }\n        )\n    );\n  }\n}\n\nexport default queries(Details);\n","import App from './App';\nexport default App;\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { currentView } from \"../../queries\";\nimport View from \"../View\";\nimport Explorer from \"../Explorer/Explorer\";\nimport Details from \"../Details/Details\";\n\nconst queries = declareQueries({ currentView });\n\ntype Props = typeof queries.Props;\n\nclass App extends React.Component<Props> {\n  render() {\n    return this.props.currentView.fold(\n      null,\n      () => null,\n      (currentView) => (\n        <View className=\"app\" height=\"100%\">\n          {currentView.view === \"explorer\" && <Explorer />}\n          {currentView.view === \"details\" && <Details />}\n        </View>\n      )\n    );\n  }\n}\n\nexport default queries(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// This script adds \"is-desktop\", \"is-phone\" or \"is-tablet\" class to the root document element\n\nimport cx from \"classnames\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nconst md = mobileDetect();\n\nconst deviceClassName = cx({\n  \"is-desktop\": md.isDesktop,\n  \"is-tablet\": md.isTablet,\n  \"is-phone\": md.isPhone,\n});\n\n// document.documentElement is not supported in every browser, fallback on document.body\nconst body = document.documentElement || document.body;\n\nbody.className = cx(body.className, deviceClassName);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./setup/addDeviceClassName\";\nimport \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}