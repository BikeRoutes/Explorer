{"version":3,"sources":["model/index.ts","queries/index.ts","components/View/index.ts","components/View/View.ts","components/Popup/Popup.tsx","components/Marker/Marker.tsx","components/Map/Map.tsx","components/SideBar/SideBar.tsx","components/Explorer/Explorer.tsx","components/ElevationProfile.tsx","components/Details/Details.tsx","components/Navigation/Navigation.tsx","components/App/App.tsx","components/App/index.ts","serviceWorker.ts","setup/addDeviceClassName.ts","index.tsx"],"names":["viewToLocation","view","pathname","search","routeId","getOrElse","toGeoJson","require","getElevationGain","coordinates","filter","c","reduce","acc","index","prevAltitude","undefined","altitude","currentView","Query","params","dependencies","location","fetch","Promise","resolve","fromNullable","locationToView","routes","cacheStrategy","available","then","res","json","JSON","parse","body","features","map","feature","minElevation","geometry","Number","MAX_SAFE_INTEGER","maxElevation","MIN_SAFE_INTEGER","id","properties","url","color","stringToColor","name","length","Math","round","geoJsonLength","elevationGain","route","isSome","value","parser","DOMParser","localStorage","getItem","gpx","geoJSONFeature","parseFromString","f","type","concat","find","r","none","routeReadme","exec","readmeUrl","text","some","View","props","className","column","vAlignContent","height","width","viewBox","onClick","style","cursor","marginTop","fillRule","transform","fill","opacity","cx","cy","rx","ry","d","md","mobileDetect","popupSettings","closeButton","closeOnClick","offset","anchor","getRouteDistanceInPixels","lngLat","point","project","mapboxgl","LngLat","lng","lat","routePoint","distance","sqrt","pow","abs","x","y","Infinity","App","popupSelectedRoute","Popup","popupHoveredRoute","positionWatch","geoLocateControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","fitBoundsOptions","maxZoom","navigating","centerUserLocation","document","querySelector","el","click","onMouseMove","throttle","e","closestRoute","onRouteHover","hoveredRoute","accessToken","Map","container","center","parseFloat","zoom","scrollZoom","on","addLayers","addMarkers","startPosition","flyToRoute","animate","padding","innerRef","isDesktop","this","onSortRoutes","options","getZoom","addControl","NavigationControl","showZoom","showCompass","ScaleControl","selectedRoute","forEach","layer","source","data","layout","paint","getRouteColor","onRouteSelect","addLayer","element","createElement","ReactDOM","Marker","setLngLat","addTo","setPaintProperty","bounds","coord","LngLatBounds","extend","fitBounds","popup","latLng","setHTML","ReactDOMServer","showPopup","remove","fold","identity","initializeMap","prevProps","updateLayers","updateSelectedRoutePopup","updateHoveredRoutePopup","isNone","setTimeout","resize","grow","isNavigating","React","Route","isSelected","shrink","size","label","onDetailsClick","commands","declareCommands","doUpdateLocation","accept","onChange","file","target","files","reader","FileReader","addEventListener","event","setItem","result","readAsText","key","onRouteClick","stopPropagation","queries","declareQueries","state","setState","forceUpdate","updateInnerRef","sortedRoutes","sortBy","getCenter","defaults","global","animation","ElevationProfile","interval","scale","distances","_","i","slice","ticks","uniq","number","roundedInteger","remainder","discriminatingFactor","flooredNumber","elevations","datasetKeyProvider","dataset","datasets","pointRadius","borderWidth","yAxisID","xAxisID","activeRoutePointIndex","backgroundColor","responsive","maintainAspectRatio","scales","xAxes","labels","toFixed","display","callback","yAxes","precision","maxRotation","stepSize","suggestedMin","suggestedMax","tooltips","mode","intersect","callbacks","title","tooltipItems","footer","legend","linkify","togpx","Remarkable","RemarkableModule","Markdown","images","Array","from","querySelectorAll","h1","hAlignContent","position","innerText","flat","onEnterNavigation","blob","Blob","saveAs","saveGPX","dangerouslySetInnerHTML","__html","render","showThumbs","showStatus","showIndicators","infiniteLoop","autoPlay","image","src","alt","use","noSleep","NoSleep","showElevationProfile","getClosestRoutePoint","chain","coords","longitude","latitude","enable","navigator","geolocation","watchPosition","String","disable","clearWatch","speed","pos","toUndefined","prewarm","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","deviceClassName","isTablet","isPhone","documentElement","StrictMode","getElementById","URL","process","href","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94ac55c1.chunk.js","sourcesContent":["import { HistoryLocation as HistoryLocationT } from \"@buildo/bento/data\";\nimport { Option, fromNullable } from \"fp-ts/lib/Option\";\n\nexport type HistoryLocation = HistoryLocationT;\n\nexport type CurrentView =\n  | { view: \"explorer\" }\n  | { view: \"details\"; routeId: Option<string> }\n  | { view: \"navigation\"; routeId: Option<string> };\n\nexport function locationToView(location: HistoryLocation): CurrentView {\n  switch (location.search.view) {\n    case \"details\":\n      return {\n        view: \"details\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    case \"navigation\":\n      return {\n        view: \"navigation\",\n        routeId: fromNullable(location.search.routeId)\n      };\n    default:\n      return { view: \"explorer\" };\n  }\n}\n\nexport function viewToLocation(view: CurrentView): HistoryLocation {\n  switch (view.view) {\n    case \"details\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"details\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"navigation\":\n      return {\n        pathname: \"/Explorer\",\n        search: { view: \"navigation\", routeId: view.routeId.getOrElse(\"\") }\n      };\n    case \"explorer\":\n      return { pathname: \"/Explorer\", search: {} };\n  }\n}\n\nexport type Content = {\n  name: string;\n  type: \"dir\" | \"file\";\n  url: string;\n  download_url: string;\n  html_url: string;\n};\n\nexport type Geometry = {\n  type: \"LineString\";\n  coordinates: Array<[number, number, number?]>;\n};\n\nexport type GeoJSONFeature = {\n  type: \"Feature\";\n  properties: {\n    name: string;\n    color: string;\n    length: number;\n    elevationGain: number;\n    minElevation: number;\n    maxElevation: number;\n    url: string;\n  };\n  geometry: Geometry;\n};\nexport type GeoJSONFeatureCollection = {\n  type: \"FeatureCollection\";\n  features: GeoJSONFeature[];\n};\n\nexport type Route = GeoJSONFeature & { id: string };\n","import { Query, location, available } from \"@buildo/bento/data\";\nimport {\n  locationToView,\n  Geometry,\n  Route,\n  GeoJSONFeature,\n  GeoJSONFeatureCollection\n} from \"../model\";\nimport * as stringToColor from \"string-to-color\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, fromNullable, none, some } from \"fp-ts/lib/Option\";\n\nconst toGeoJson = require(\"@mapbox/togeojson\");\n\nfunction getElevationGain(coordinates: Geometry[\"coordinates\"]): number {\n  return coordinates\n    .filter(c => c[2])\n    .reduce((acc, c, index) => {\n      const prevAltitude = index > 0 ? coordinates[index - 1][2] : undefined;\n      const altitude = c[2]!;\n\n      if (prevAltitude && altitude > prevAltitude) {\n        return acc + altitude - prevAltitude;\n      }\n\n      return acc;\n    }, 0);\n}\n\nexport { location };\n\nexport const currentView = Query({\n  params: {},\n  dependencies: { location: location },\n  fetch: ({ location }) => Promise.resolve(locationToView(location))\n});\n\nexport const routes = Query({\n  cacheStrategy: available,\n  params: {},\n  fetch: (): Promise<Route[]> =>\n    // fetch(\"http://localhost:8081/\")\n    fetch(\"https://or52hotxz1.execute-api.us-east-1.amazonaws.com/dev/\")\n      .then(res => res.json() as Promise<{ body: string }>)\n      .then((res): GeoJSONFeature[] => JSON.parse(res.body))\n      .then(features =>\n        features.map(feature => {\n          const minElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n            Number.MAX_SAFE_INTEGER\n          );\n\n          const maxElevation = feature.geometry.coordinates.reduce(\n            (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n            Number.MIN_SAFE_INTEGER\n          );\n\n          const richFeature: Route = {\n            id: feature.properties.url,\n            ...feature,\n            properties: {\n              ...feature.properties,\n              color: stringToColor(feature.properties.name),\n              length: Math.round(geoJsonLength(feature.geometry) / 100) / 10,\n              elevationGain: Math.round(\n                getElevationGain(feature.geometry.coordinates)\n              ),\n              minElevation,\n              maxElevation\n            }\n          };\n\n          return richFeature;\n        })\n      )\n});\n\nexport const route = Query({\n  params: {},\n  dependencies: { currentView, routes },\n  fetch: ({ currentView, routes }): Promise<Option<Route>> => {\n    if (\n      (currentView.view === \"details\" || currentView.view === \"navigation\") &&\n      currentView.routeId.isSome()\n    ) {\n      const routeId = currentView.routeId.value;\n\n      if (routeId === \"gpx\") {\n        const parser = new DOMParser();\n\n        return Promise.resolve(\n          fromNullable(localStorage.getItem(\"gpxFile\")).map(gpx => {\n            const featureCollection: GeoJSONFeatureCollection = toGeoJson.gpx(\n              parser.parseFromString(gpx, \"text/xml\")\n            );\n\n            const geoJSONFeature: GeoJSONFeature = featureCollection.features\n              .filter(f => f.geometry.type === \"LineString\")\n              .reduce((acc, feature) => {\n                return {\n                  ...acc,\n\n                  geometry: {\n                    ...acc.geometry,\n                    coordinates: acc.geometry.coordinates.concat(\n                      feature.geometry.coordinates\n                    )\n                  }\n                };\n              });\n\n            const minElevation = geoJSONFeature.geometry.coordinates.reduce(\n              (acc: number, c) => (c[2] && c[2] < acc ? c[2] : acc),\n              Number.MAX_SAFE_INTEGER\n            );\n\n            const maxElevation = geoJSONFeature.geometry.coordinates.reduce(\n              (acc: number, c) => (c[2] && c[2] > acc ? c[2] : acc),\n              Number.MIN_SAFE_INTEGER\n            );\n\n            return {\n              ...geoJSONFeature,\n              properties: {\n                ...geoJSONFeature.properties,\n                color: \"#38ffcc\",\n                length:\n                  Math.round(geoJsonLength(geoJSONFeature.geometry) / 100) / 10,\n                elevationGain: Math.round(\n                  getElevationGain(geoJSONFeature.geometry.coordinates)\n                ),\n                minElevation,\n                maxElevation,\n                url: \"gpx\"\n              },\n              id: \"gpx\"\n            };\n          })\n        );\n      } else {\n        return Promise.resolve(\n          fromNullable(routes.find(r => r.id === routeId))\n        );\n      }\n    }\n\n    return Promise.resolve(none);\n  }\n});\n\nexport const routeReadme = Query({\n  params: {},\n  dependencies: { route },\n  fetch: ({ route }): Promise<Option<string>> => {\n    if (route.isSome()) {\n      const res = /BikeRoutes.+master\\/(.+)\\/.+$/.exec(\n        route.value.properties.url\n      )!;\n\n      const readmeUrl = `https://raw.githubusercontent.com/BikeRoutes/BikeRoutes/master/${res[1]}/README.md`;\n\n      return fetch(readmeUrl)\n        .then(r => r.text())\n        .then(text => some(text));\n    }\n    return Promise.resolve(none);\n  }\n});\n","import View from './View';\nexport default View;\n","import View from '@buildo/bento/components/FlexView';\nexport default View;\n","import * as React from \"react\";\nimport View from \"../View\";\nimport { Route } from \"../../model\";\n\nimport \"./popup.scss\";\n\nexport default (props: { route: Route }) => (\n  <View className=\"popup\" column>\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"elevation\" vAlignContent=\"bottom\">\n      <label>Elevation</label> {props.route.properties.elevationGain} m\n    </View>\n  </View>\n);\n","import * as React from \"react\";\n\nexport default (props: { onClick: () => void }) => (\n  <svg\n    height=\"41px\"\n    width=\"27px\"\n    viewBox=\"0 0 27 41\"\n    onClick={props.onClick}\n    className=\"marker\"\n    style={{ cursor: \"pointer\", marginTop: \"-100%\" }}\n  >\n    <g fillRule=\"nonzero\">\n      <g transform=\"translate(3.0, 29.0)\" fill=\"#000000\">\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"10.5\"\n          ry=\"5.25002273\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"9.5\"\n          ry=\"4.77275007\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"8.5\"\n          ry=\"4.29549936\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"7.5\"\n          ry=\"3.81822308\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"6.5\"\n          ry=\"3.34094679\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"5.5\"\n          ry=\"2.86367051\"\n        />\n        <ellipse\n          opacity=\"0.04\"\n          cx=\"10.5\"\n          cy=\"5.80029008\"\n          rx=\"4.5\"\n          ry=\"2.38636864\"\n        />\n      </g>\n      <g fill=\"#3FB1CE\">\n        <path d=\"M27,13.5 C27,19.074644 20.250001,27.000002 14.75,34.500002 C14.016665,35.500004 12.983335,35.500004 12.25,34.500002 C6.7499993,27.000002 0,19.222562 0,13.5 C0,6.0441559 6.0441559,0 13.5,0 C20.955844,0 27,6.0441559 27,13.5 Z\" />\n      </g>\n      <g opacity=\"0.25\" fill=\"#000000\">\n        <path d=\"M13.5,0 C6.0441559,0 0,6.0441559 0,13.5 C0,19.222562 6.7499993,27 12.25,34.5 C13,35.522727 14.016664,35.500004 14.75,34.5 C20.250001,27 27,19.074644 27,13.5 C27,6.0441559 20.955844,0 13.5,0 Z M13.5,1 C20.415404,1 26,6.584596 26,13.5 C26,15.898657 24.495584,19.181431 22.220703,22.738281 C19.945823,26.295132 16.705119,30.142167 13.943359,33.908203 C13.743445,34.180814 13.612715,34.322738 13.5,34.441406 C13.387285,34.322738 13.256555,34.180814 13.056641,33.908203 C10.284481,30.127985 7.4148684,26.314159 5.015625,22.773438 C2.6163816,19.232715 1,15.953538 1,13.5 C1,6.584596 6.584596,1 13.5,1 Z\" />\n      </g>\n      <g transform=\"translate(6.0, 7.0)\" fill=\"#FFFFFF\" />\n      <g transform=\"translate(8.0, 8.0)\">\n        <circle fill=\"#000000\" opacity=\"0.25\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n        <circle fill=\"#FFFFFF\" cx=\"5.5\" cy=\"5.5\" r=\"5.4999962\" />\n      </g>\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOMServer from \"react-dom/server\";\nimport * as ReactDOM from \"react-dom\";\nimport throttle from \"lodash/throttle\";\nimport mapboxgl from \"mapbox-gl\";\nimport Popup from \"../Popup/Popup\";\nimport Marker from \"../Marker/Marker\";\nimport View from \"../View\";\nimport { Option, none, some, fromNullable } from \"fp-ts/lib/Option\";\nimport { Route } from \"../../model\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\nimport { identity } from \"fp-ts/lib/function\";\nimport cx from \"classnames\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./map.scss\";\n\n/* eslint-disable array-callback-return */\n\nconst md = mobileDetect();\n\nconst popupSettings: mapboxgl.PopupOptions = {\n  closeButton: false,\n  closeOnClick: false,\n  offset: [0, -40],\n  anchor: \"bottom\"\n};\n\nexport const getRouteDistanceInPixels = (\n  route: Route,\n  lngLat: { lng: number; lat: number },\n  map: mapboxgl.Map\n): number => {\n  return route.geometry.coordinates.reduce((acc, coordinates) => {\n    const point = map.project(new mapboxgl.LngLat(lngLat.lng, lngLat.lat));\n    const routePoint = map.project(\n      new mapboxgl.LngLat(coordinates[0], coordinates[1])\n    );\n    const distance = Math.sqrt(\n      Math.pow(Math.abs(point.x - routePoint.x), 2) +\n        Math.pow(Math.abs(point.y - routePoint.y), 2)\n    );\n    return distance < acc ? distance : acc;\n  }, Infinity);\n};\n\ntype Props = {\n  routes: Route[];\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n  onRouteHover: (route: Option<Route>) => void;\n  onRouteSelect: (route: Route) => void;\n  innerRef: (map: Option<mapboxgl.Map>) => void;\n  onSortRoutes: () => void;\n  startPosition: \"userLocation\" | \"firstRoute\";\n  navigating: boolean;\n};\n\nclass App extends React.PureComponent<Props> {\n  map: Option<mapboxgl.Map> = none;\n  popupSelectedRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  popupHoveredRoute: mapboxgl.Popup = new mapboxgl.Popup(popupSettings);\n  positionWatch: Option<number> = none;\n\n  geoLocateControl: mapboxgl.GeolocateControl = new mapboxgl.GeolocateControl({\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true,\n    showUserLocation: true,\n    showAccuracyCircle: true,\n\n    fitBoundsOptions: {\n      maxZoom: this.props.navigating ? 15 : 11\n    }\n  });\n\n  centerUserLocation = () => {\n    fromNullable(\n      document.querySelector<HTMLButtonElement>(\n        \".mapboxgl-ctrl-geolocate:not(.mapboxgl-ctrl-geolocate-active)\"\n      )\n    ).map(el => el.click());\n  };\n\n  initializeMap() {\n    (mapboxgl as any).accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style:\n        \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n      center: {\n        lat: parseFloat(localStorage.getItem(\"start_lat\") || \"0\"),\n        lng: parseFloat(localStorage.getItem(\"start_lng\") || \"0\")\n      },\n      zoom: 11.0,\n      scrollZoom: false\n    });\n\n    map.on(\"load\", () => {\n      this.map = some(map);\n\n      this.addLayers();\n      this.addMarkers();\n\n      if (this.props.startPosition === \"userLocation\") {\n        this.centerUserLocation();\n      }\n\n      if (\n        this.props.startPosition === \"firstRoute\" &&\n        this.props.routes.length > 0\n      ) {\n        this.flyToRoute(this.props.routes[0], { animate: false, padding: 80 });\n      }\n\n      this.props.innerRef(this.map);\n    });\n\n    if (md.isDesktop) {\n      map.on(\"mousemove\", this.onMouseMove);\n    }\n\n    map.on(\"moveend\", () => {\n      this.props.onSortRoutes();\n    });\n\n    map.on(\"zoom\", () => {\n      if (document.querySelector(\".mapboxgl-ctrl-geolocate-background\")) {\n        (this.geoLocateControl as any).options.fitBoundsOptions = {\n          zoom: map.getZoom()\n        };\n      }\n    });\n\n    map.addControl(this.geoLocateControl);\n\n    map.addControl(\n      new mapboxgl.NavigationControl({\n        showZoom: md.isDesktop,\n        showCompass: !md.isDesktop\n      })\n    );\n\n    this.props.navigating && map.addControl(new mapboxgl.ScaleControl());\n  }\n\n  getRouteColor(route: Route): string {\n    return (this.props.selectedRoute.isSome() &&\n      route === this.props.selectedRoute.value) ||\n      (this.props.hoveredRoute.isSome() &&\n        route === this.props.hoveredRoute.value) ||\n      this.props.navigating\n      ? \"#387ddf\"\n      : route.properties.color;\n  }\n\n  addLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const layer: mapboxgl.Layer = {\n          id: route.properties.url,\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: route as any\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-width\": 3,\n            \"line-color\": this.getRouteColor(route)\n          }\n        };\n\n        map.on(\"click\", layer.id, () => {\n          this.props.onRouteSelect(route);\n        });\n\n        map.addLayer(layer);\n      });\n    });\n  }\n\n  addMarkers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        const coordinates = route.geometry.coordinates[0];\n\n        const element = document.createElement(\"div\");\n        ReactDOM.render(\n          <Marker onClick={() => this.props.onRouteSelect(route)} />,\n          element\n        );\n\n        const marker: mapboxgl.Marker = new mapboxgl.Marker({\n          element\n        }).setLngLat([coordinates[0], coordinates[1]]);\n\n        marker.addTo(map);\n      });\n    });\n  }\n\n  onMouseMove = throttle((e: mapboxgl.MapMouseEvent) => {\n    type ClosestRoute = {\n      distance: number;\n      route: Route;\n    };\n\n    this.map.map(map => {\n      const closestRoute: ClosestRoute = this.props.routes.reduce(\n        (acc, route) => {\n          const distance = getRouteDistanceInPixels(route, e.lngLat, map);\n\n          return distance < acc.distance ? { distance, route } : acc;\n        },\n        { distance: Infinity } as ClosestRoute\n      );\n\n      if (closestRoute.distance < 25) {\n        this.props.onRouteHover(some(closestRoute.route));\n      } else {\n        this.props.hoveredRoute.map(() => {\n          this.props.onRouteHover(none);\n        });\n      }\n    });\n  }, 100);\n\n  updateLayers() {\n    this.map.map(map => {\n      this.props.routes.forEach(route => {\n        // update color\n        map.setPaintProperty(route.id, \"line-color\", this.getRouteColor(route));\n      });\n    });\n  }\n\n  flyToRoute(route: Route, options?: mapboxgl.FitBoundsOptions) {\n    this.map.map(map => {\n      const coordinates = route.geometry.coordinates as [number, number][];\n      const bounds = coordinates\n        .map(coord => new mapboxgl.LngLatBounds(coord, coord))\n        .reduce((bounds, coord) => {\n          return bounds.extend(coord);\n        });\n\n      map.fitBounds(bounds, { padding: 50, ...options });\n    });\n  }\n\n  showPopup(route: Route, popup: mapboxgl.Popup) {\n    this.map.map(map => {\n      const latLng: mapboxgl.LngLat = new mapboxgl.LngLat(\n        route.geometry.coordinates[0][0],\n        route.geometry.coordinates[0][1]\n      );\n\n      popup\n        .setLngLat(latLng)\n        .setHTML(ReactDOMServer.renderToString(<Popup route={route} />))\n        .addTo(map);\n    });\n  }\n\n  updateSelectedRoutePopup() {\n    if (this.props.selectedRoute.isSome()) {\n      this.showPopup(this.props.selectedRoute.value, this.popupSelectedRoute);\n    } else {\n      this.popupSelectedRoute.remove();\n    }\n  }\n\n  updateHoveredRoutePopup() {\n    const { hoveredRoute } = this.props;\n    if (\n      hoveredRoute.isSome() &&\n      hoveredRoute.value !== this.props.selectedRoute.fold(null, identity)\n    ) {\n      this.showPopup(hoveredRoute.value, this.popupHoveredRoute);\n    } else {\n      this.popupHoveredRoute.remove();\n    }\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateLayers();\n    this.updateSelectedRoutePopup();\n    this.updateHoveredRoutePopup();\n\n    if (\n      this.props.selectedRoute.isSome() &&\n      (prevProps.selectedRoute.isNone() ||\n        prevProps.selectedRoute.value !== this.props.selectedRoute.value)\n    ) {\n      this.flyToRoute(this.props.selectedRoute.value);\n    }\n\n    setTimeout(() => this.map.map(map => map.resize()), 30);\n  }\n\n  render() {\n    return (\n      <View\n        grow\n        id=\"map\"\n        className={cx({ isNavigating: this.props.navigating })}\n      />\n    );\n  }\n}\n\nexport default App;\n","import * as React from \"react\";\nimport cx from \"classnames\";\nimport View from \"../View\";\nimport { Route as RouteT, viewToLocation } from \"../../model\";\nimport { Option, some } from \"fp-ts/lib/Option\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { doUpdateLocation } from \"../../commands\";\nimport { declareCommands } from \"react-avenger\";\n\nimport \"./sideBar.scss\";\nimport \"@buildo/bento/components/button.scss\";\n\nconst Route = (props: {\n  route: RouteT;\n  onClick: () => void;\n  isSelected: boolean;\n  onDetailsClick: (e: React.SyntheticEvent<HTMLDivElement, Event>) => void;\n}) => (\n  <View\n    className={cx(\"route\", { \"is-selected\": props.isSelected })}\n    column\n    onClick={props.onClick}\n    shrink={false}\n  >\n    <View className=\"name\">{props.route.properties.name}</View>\n    <View className=\"distance\" vAlignContent=\"bottom\">\n      <label>Distance</label> {props.route.properties.length} km\n    </View>\n    <View className=\"min-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (min)</label>{\" \"}\n      {Math.round(props.route.properties.minElevation)} m\n    </View>\n    <View className=\"max-elevation\" vAlignContent=\"bottom\">\n      <label>Elev (max)</label>{\" \"}\n      {Math.round(props.route.properties.maxElevation)} m\n    </View>\n\n    <View className=\"actions\">\n      <Button size=\"tiny\" label=\"Details\" onClick={props.onDetailsClick} />\n    </View>\n  </View>\n);\n\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof commands.Props & {\n  routes: RouteT[];\n  onRouteClick: (route: RouteT) => void;\n  selectedRoute: Option<RouteT>;\n};\n\nclass SideBar extends React.PureComponent<Props> {\n  render() {\n    return (\n      <View className=\"side-bar\" column shrink={false}>\n        <View column shrink={false} className=\"navigationGpx\">\n          <h2>Navigation (GPX)</h2>\n\n          <input\n            type=\"file\"\n            accept=\".gpx\"\n            onChange={e => {\n              const file = e.target.files![0];\n\n              const reader = new FileReader();\n              reader.addEventListener(\"load\", event => {\n                localStorage.setItem(\"gpxFile\", event.target!.result as any);\n\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"navigation\", routeId: some(\"gpx\") })\n                );\n              });\n              reader.readAsText(file);\n            }}\n          />\n        </View>\n\n        <View column shrink={false} className=\"routes\">\n          <h2>Routes</h2>\n          {this.props.routes.map((route, index) => (\n            <Route\n              key={index}\n              route={route}\n              onClick={() => this.props.onRouteClick(route)}\n              isSelected={\n                this.props.selectedRoute.isSome() &&\n                this.props.selectedRoute.value === route\n              }\n              onDetailsClick={e => {\n                e.stopPropagation();\n                this.props.doUpdateLocation(\n                  viewToLocation({ view: \"details\", routeId: some(route.id) })\n                );\n              }}\n            />\n          ))}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default commands(SideBar);\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { routes } from \"../../queries\";\nimport View from \"../View\";\nimport Map, { getRouteDistanceInPixels } from \"../Map/Map\";\nimport SideBar from \"../SideBar/SideBar\";\nimport { Route } from \"../../model\";\nimport { Option, none, some } from \"fp-ts/lib/Option\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./explorer.scss\";\n\nconst queries = declareQueries({ routes });\n\ntype Props = typeof queries.Props;\n\ntype State = {\n  selectedRoute: Option<Route>;\n  hoveredRoute: Option<Route>;\n};\n\nclass Explorer extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n\n  state: State = {\n    selectedRoute: none,\n    hoveredRoute: none\n  };\n\n  onRouteSelect = (route: Route) => {\n    this.setState({\n      selectedRoute:\n        this.state.selectedRoute.isSome() &&\n        this.state.selectedRoute.value === route\n          ? none\n          : some(route)\n    });\n  };\n\n  onRouteHover = (route: Option<Route>) => {\n    this.setState({\n      hoveredRoute: route\n    });\n  };\n\n  onSortRoutes = () => {\n    this.forceUpdate();\n  };\n\n  updateInnerRef = (map: Option<mapboxgl.Map>) => {\n    if (this.map.isNone()) {\n      this.map = map;\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    return this.props.routes.fold(\n      null,\n      () => null,\n      routes => {\n        const sortedRoutes: Route[] = this.map.fold(routes, map =>\n          sortBy(routes, route =>\n            getRouteDistanceInPixels(route, map.getCenter(), map)\n          )\n        );\n\n        return (\n          <View className=\"explorer\" grow>\n            <SideBar\n              routes={sortedRoutes}\n              onRouteClick={this.onRouteSelect}\n              selectedRoute={this.state.selectedRoute}\n            />\n            <Map\n              routes={routes}\n              selectedRoute={this.state.selectedRoute}\n              hoveredRoute={this.state.hoveredRoute}\n              onRouteHover={this.onRouteHover}\n              onRouteSelect={this.onRouteSelect}\n              onSortRoutes={this.onSortRoutes}\n              innerRef={this.updateInnerRef}\n              startPosition=\"userLocation\"\n              navigating={false}\n            />\n          </View>\n        );\n      }\n    );\n  }\n}\n\nexport default queries(Explorer);\n","import * as React from \"react\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport { Route } from \"../model\";\nimport uniq from \"lodash/uniq\";\nimport * as geoJsonLength from \"geojson-length\";\nimport { Option, none } from \"fp-ts/lib/Option\";\n\ndefaults.global.animation = 0;\n\ntype Props = {\n  route: Route;\n  activeRoutePointIndex?: number;\n};\n\nexport default class ElevationProfile extends React.Component<Props> {\n  interval: Option<NodeJS.Timeout> = none;\n\n  render() {\n    const scale = Math.round(this.props.route.properties.length / 10) || 1;\n\n    const round = (number: number, roundedInteger: number): number => {\n      const remainder = number % roundedInteger;\n      const discriminatingFactor = roundedInteger / 2;\n\n      const flooredNumber = Math.round(number - remainder);\n\n      if (remainder < discriminatingFactor) {\n        return flooredNumber;\n      } else {\n        return flooredNumber + roundedInteger;\n      }\n    };\n\n    const distances = this.props.route.geometry.coordinates.map(\n      (_, i) =>\n        geoJsonLength({\n          ...this.props.route.geometry,\n          coordinates: this.props.route.geometry.coordinates.slice(0, i + 1)\n        }) / 1000\n    );\n\n    const ticks = uniq(distances.map(d => round(d, scale)));\n\n    const elevations = this.props.route.geometry.coordinates.map(c =>\n      c[2] ? Math.round(c[2]) : null\n    );\n\n    return (\n      <Line\n        datasetKeyProvider={dataset => dataset.datasetKeyProvider}\n        data={{\n          datasets: [\n            {\n              label: \"Elevation\",\n              pointRadius: 0,\n              borderWidth: 0,\n              yAxisID: \"y-axis\",\n              xAxisID: \"x-axis-hidden\",\n              data: elevations,\n              datasetKeyProvider: \"elevation\"\n            },\n            {\n              xAxisID: \"x-axis\",\n              data: [],\n              datasetKeyProvider: \"ticks\"\n            },\n            {\n              yAxisID: \"y-axis\",\n              data: elevations.map((el, i) =>\n                i === this.props.activeRoutePointIndex ? el : null\n              ),\n              backgroundColor: \"#5bb3e0\",\n              datasetKeyProvider: \"userLocation\"\n            }\n          ]\n        }}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [\n              {\n                id: \"x-axis-hidden\",\n                type: \"category\",\n                labels: distances.map(d => d.toFixed(1)),\n                display: false\n              },\n              {\n                id: \"x-axis\",\n                labels: ticks,\n                ticks: {\n                  callback: (value: number) => {\n                    return value < this.props.route.properties.length\n                      ? `${value} km`\n                      : null;\n                  }\n                }\n              }\n            ],\n            yAxes: [\n              {\n                type: \"linear\",\n                id: \"y-axis\",\n                ticks: {\n                  precision: 0,\n                  maxRotation: 0,\n                  stepSize: 50,\n                  suggestedMin: this.props.route.properties.minElevation * 0.7,\n                  suggestedMax: 300,\n                  ticks: {\n                    callback: (value: number) => {\n                      return `${value} m`;\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {\n              title: (tooltipItems: any[]) => {\n                return `Dist:  ${tooltipItems[0].label} km`;\n              },\n              label: () => \"\",\n              footer: (tooltipItems: any[], data: unknown) => {\n                return `Elev: ${tooltipItems[0].value} m`;\n              }\n            }\n          }\n        }}\n        legend={null}\n        height={50}\n      />\n    );\n  }\n}\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route, routeReadme } from \"../../queries\";\nimport View from \"../View\";\nimport Map from \"../Map/Map\";\nimport * as RemarkableModule from \"remarkable\";\nimport { none, some } from \"fp-ts/lib/Option\";\nimport { Route, viewToLocation } from \"../../model\";\nimport Button from \"@buildo/bento/components/Button\";\nimport { saveAs } from \"file-saver\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\nimport ElevationProfile from \"../ElevationProfile\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./details.scss\";\n\nconst { linkify } = require(\"remarkable/linkify\");\n\nconst togpx = require(\"togpx\");\n\nconst Remarkable = (RemarkableModule as any).Remarkable as RemarkableModule;\n\nconst saveGPX = (route: Route): void => {\n  const blob = new Blob([togpx(route)], {\n    type: \"text/plain;charset=utf-8\"\n  });\n\n  saveAs(blob, `${route.properties.name}.gpx`);\n};\n\nclass Markdown extends React.PureComponent<{\n  routeReadme: string;\n  route: Route;\n  onEnterNavigation: () => void;\n}> {\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const images = Array.from(\n      document.querySelectorAll<HTMLImageElement>(\".remarkable img\")\n    );\n\n    const h1 = document.querySelector<HTMLElement>(\n      \".remarkable h1:first-of-type\"\n    );\n\n    return (\n      <View className=\"markdown\" hAlignContent=\"center\" shrink={false}>\n        <View className=\"wrapper\" grow>\n          <View grow column style={{ position: \"relative\" }}>\n            <View className=\"title\">{h1?.innerText}</View>\n            <View className=\"actions\">\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Enter Navigation\"\n                onClick={this.props.onEnterNavigation}\n              />\n              <Button\n                flat\n                size=\"medium\"\n                label=\"Download GPX\"\n                onClick={() => saveGPX(this.props.route)}\n              />\n            </View>\n\n            <div\n              className=\"remarkable\"\n              dangerouslySetInnerHTML={{\n                __html: md.render(this.props.routeReadme)\n              }}\n            />\n\n            <View className=\"summary\">\n              <View className=\"distance\" column shrink={false}>\n                <span>{this.props.route.properties.length} km</span>\n                <label>Distance</label>\n              </View>\n              <View className=\"min-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.minElevation)} m\n                </span>\n                <label>Min elevation</label>\n              </View>\n              <View className=\"max-elevation\" column shrink={false}>\n                <span>\n                  {Math.round(this.props.route.properties.maxElevation)} m\n                </span>\n                <label>Max elevation</label>\n              </View>\n            </View>\n          </View>\n          <View className=\"images\" hAlignContent=\"right\" shrink={false}>\n            <Carousel\n              showThumbs={false}\n              showStatus={false}\n              showIndicators={images.length > 1}\n              infiniteLoop\n              autoPlay\n              interval={6000}\n            >\n              {images.map(image => (\n                <img key={image.src} src={image.src} alt={image.src} />\n              ))}\n            </Carousel>\n          </View>\n          <View className=\"mobile-images\" grow>\n            {images.slice(0, 2).map(image => (\n              <img key={image.src} src={image.src} alt={image.src} />\n            ))}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst md = new (Remarkable as any)().use(linkify);\n\nconst queries = declareQueries({ route, routeReadme });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\nclass Details extends React.Component<Props> {\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route =>\n        this.props.routeReadme.fold(\n          null,\n          () => null,\n          routeReadme => {\n            if (route.isNone() || routeReadme.isNone()) {\n              return null;\n            } else {\n              return (\n                <View className=\"details\" height=\"100%\" grow column>\n                  <Markdown\n                    routeReadme={routeReadme.value}\n                    route={route.value}\n                    onEnterNavigation={() => {\n                      this.props.doUpdateLocation(\n                        viewToLocation({\n                          view: \"navigation\",\n                          routeId: some(route.value.id)\n                        })\n                      );\n                    }}\n                  />\n\n                  <View shrink={false} className=\"map-wrapper\">\n                    <Map\n                      routes={[route.value]}\n                      startPosition=\"firstRoute\"\n                      navigating={false}\n                      hoveredRoute={route} // fixed blue color that is easily visible\n                      // fake props\n                      selectedRoute={none}\n                      onRouteHover={() => {}}\n                      onRouteSelect={() => {}}\n                      innerRef={() => {}}\n                      onSortRoutes={() => {}}\n                    />\n                  </View>\n                  <View className=\"elevation-profile-wrapper\" shrink={false}>\n                    <ElevationProfile route={route.value} />\n                  </View>\n                </View>\n              );\n            }\n          }\n        )\n    );\n  }\n}\n\nexport default commands(queries(Details));\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { route } from \"../../queries\";\nimport View from \"../View\";\nimport Map from \"../Map/Map\";\nimport { none, some, Option } from \"fp-ts/lib/Option\";\nimport NoSleep from \"nosleep.js\";\nimport { declareCommands } from \"react-avenger\";\nimport { doUpdateLocation } from \"../../commands\";\nimport ElevationProfile from \"../ElevationProfile\";\nimport mapboxgl from \"mapbox-gl\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./navigation.scss\";\n\nconst noSleep = new NoSleep();\n\nconst queries = declareQueries({ route });\nconst commands = declareCommands({ doUpdateLocation });\n\ntype Props = typeof queries.Props & typeof commands.Props;\n\ntype State = {\n  position: Option<Position>;\n  showElevationProfile: boolean;\n};\n\nclass Navigation extends React.Component<Props, State> {\n  map: Option<mapboxgl.Map> = none;\n  positionWatch: Option<number> = none;\n\n  state: State = {\n    position: none,\n    showElevationProfile: false\n  };\n\n  componentDidMount() {\n    noSleep.enable();\n\n    this.positionWatch = some(\n      navigator.geolocation.watchPosition(position => {\n        localStorage.setItem(\"start_lat\", String(position.coords.latitude));\n        localStorage.setItem(\"start_lng\", String(position.coords.longitude));\n\n        this.setState({\n          position: some(position)\n        });\n      })\n    );\n  }\n\n  componentWillUnmount() {\n    noSleep.disable();\n\n    this.positionWatch.map(positionWatch =>\n      navigator.geolocation.clearWatch(positionWatch)\n    );\n  }\n\n  getClosestRoutePoint = (position: Position) => {\n    return this.map.chain(map => {\n      return this.props.route.fold(\n        none,\n        () => none,\n        route =>\n          route.map(route => {\n            return route.geometry.coordinates.reduce(\n              (acc, coordinates, index) => {\n                const point = map.project(\n                  new mapboxgl.LngLat(\n                    position.coords.longitude,\n                    position.coords.latitude\n                  )\n                );\n                const routePoint = map.project(\n                  new mapboxgl.LngLat(coordinates[0], coordinates[1])\n                );\n                const distance = Math.sqrt(\n                  Math.pow(Math.abs(point.x - routePoint.x), 2) +\n                    Math.pow(Math.abs(point.y - routePoint.y), 2)\n                );\n                return distance < 200 && distance < acc.distance\n                  ? { distance, index }\n                  : acc;\n              },\n              {\n                distance: Infinity,\n                index: -1\n              }\n            );\n          })\n      );\n    });\n  };\n\n  render() {\n    return this.props.route.fold(\n      null,\n      () => null,\n      route => {\n        if (route.isNone()) {\n          return null;\n        } else {\n          const speed = Math.round(\n            this.state.position.fold(0, pos =>\n              pos.coords.speed ? pos.coords.speed / 1000 : 0\n            )\n          );\n\n          const altitude = Math.round(\n            this.state.position.fold(0, pos => pos.coords.altitude || 0)\n          );\n\n          return (\n            <View className=\"navigation\" height=\"100%\" grow column>\n              <View\n                className=\"toggle-elevation control-button\"\n                onClick={() => {\n                  this.setState({\n                    showElevationProfile: !this.state.showElevationProfile\n                  });\n                }}\n                hAlignContent=\"center\"\n                vAlignContent=\"center\"\n              >\n                <svg width=\"29\" height=\"29\" viewBox=\"0 0 15 15\">\n                  <path\n                    id=\"path5571\"\n                    d=\"M7.5,2C7.2,2,7.1,2.2,6.9,2.4&#10;&#9;l-5.8,9.5C1,12,1,12.2,1,12.3C1,12.8,1.4,13,1.7,13h11.6c0.4,0,0.7-0.2,0.7-0.7c0-0.2,0-0.2-0.1-0.4L8.2,2.4C8,2.2,7.8,2,7.5,2z&#10;&#9; M7.5,3.5L10.8,9H10L8.5,7.5L7.5,9l-1-1.5L5,9H4.1L7.5,3.5z\"\n                    fill={\n                      this.state.showElevationProfile ? \"#5bb3e0\" : undefined\n                    }\n                  />\n                </svg>\n              </View>\n\n              {this.state.showElevationProfile && (\n                <View className=\"elevation-profile-wrapper\">\n                  <ElevationProfile\n                    route={route.value}\n                    activeRoutePointIndex={this.state.position\n                      .chain(position =>\n                        this.getClosestRoutePoint(position).map(\n                          activeRoutePointIndex => activeRoutePointIndex.index\n                        )\n                      )\n                      .toUndefined()}\n                  />\n                </View>\n              )}\n\n              <View className=\"speed-wrapper\" column hAlignContent=\"center\">\n                {speed}\n                <span className=\"unit\">km/s</span>\n              </View>\n\n              <View className=\"altitude-wrapper\" column hAlignContent=\"center\">\n                {altitude}\n                <span className=\"unit\">msl</span>\n              </View>\n\n              <View shrink={false} className=\"map-wrapper\">\n                <Map\n                  routes={[route.value]}\n                  startPosition=\"firstRoute\"\n                  navigating\n                  innerRef={map => {\n                    if (this.map.isNone()) {\n                      this.map = map;\n                      this.forceUpdate();\n                    }\n                  }}\n                  // fake props\n                  hoveredRoute={none}\n                  selectedRoute={none}\n                  onRouteHover={() => {}}\n                  onRouteSelect={() => {}}\n                  onSortRoutes={() => {}}\n                />\n              </View>\n            </View>\n          );\n        }\n      }\n    );\n  }\n}\n\nexport default commands(queries(Navigation));\n","import * as React from \"react\";\nimport { declareQueries } from \"@buildo/bento/data\";\nimport { currentView } from \"../../queries\";\nimport View from \"../View\";\nimport Explorer from \"../Explorer/Explorer\";\nimport Details from \"../Details/Details\";\nimport Navigation from \"../Navigation/Navigation\";\nimport mapboxgl from \"mapbox-gl\";\n\nmapboxgl.prewarm();\n\nconst queries = declareQueries({ currentView });\n\ntype Props = typeof queries.Props;\n\nclass App extends React.Component<Props> {\n  render() {\n    return this.props.currentView.fold(\n      null,\n      () => null,\n      currentView => (\n        <View className=\"app\" height=\"100%\">\n          {currentView.view === \"explorer\" && <Explorer />}\n          {currentView.view === \"details\" && <Details />}\n          {currentView.view === \"navigation\" && <Navigation />}\n        </View>\n      )\n    );\n  }\n}\n\nexport default queries(App);\n","import App from './App';\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// This script adds \"is-desktop\", \"is-phone\" or \"is-tablet\" class to the root document element\n\nimport cx from \"classnames\";\nimport mobileDetect from \"@buildo/bento/utils/mobileDetect\";\n\nconst md = mobileDetect();\n\nconst deviceClassName = cx({\n  \"is-desktop\": md.isDesktop,\n  \"is-tablet\": md.isTablet,\n  \"is-phone\": md.isPhone,\n});\n\n// document.documentElement is not supported in every browser, fallback on document.body\nconst body = document.documentElement || document.body;\n\nbody.className = cx(body.className, deviceClassName);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./setup/addDeviceClassName\";\nimport \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"app\")\n);\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}